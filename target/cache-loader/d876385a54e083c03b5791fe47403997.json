{"remainingRequest":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\horario\\horario-update.tsx","dependencies":[{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\horario\\horario-update.tsx","mtime":1560957997455},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560961486638},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities as getModalidads } from 'app/entities/modalidad/modalidad.reducer';\r\nimport { getEntities as getDias } from 'app/entities/dia/dia.reducer';\r\nimport { getEntities as getFichaTrimestres } from 'app/entities/ficha-trimestre/ficha-trimestre.reducer';\r\nimport { getEntities as getAmbientes } from 'app/entities/ambiente/ambiente.reducer';\r\nimport { getEntities as getInstructors } from 'app/entities/instructor/instructor.reducer';\r\nimport { getEntities as getVersionHorarios } from 'app/entities/version-horario/version-horario.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './horario.reducer';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nvar HorarioUpdate = /** @class */ (function (_super) {\r\n    tslib_1.__extends(HorarioUpdate, _super);\r\n    function HorarioUpdate(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.saveEntity = function (event, errors, values) {\r\n            values.horaInicio = convertDateTimeToServer(values.horaInicio);\r\n            values.horaFin = convertDateTimeToServer(values.horaFin);\r\n            if (errors.length === 0) {\r\n                var horarioEntity = _this.props.horarioEntity;\r\n                var entity = tslib_1.__assign({}, horarioEntity, values);\r\n                if (_this.state.isNew) {\r\n                    _this.props.createEntity(entity);\r\n                }\r\n                else {\r\n                    _this.props.updateEntity(entity);\r\n                }\r\n            }\r\n        };\r\n        _this.handleClose = function () {\r\n            _this.props.history.push('/entity/horario');\r\n        };\r\n        _this.state = {\r\n            modalidadId: '0',\r\n            diaId: '0',\r\n            fichaTrimestreId: '0',\r\n            ambienteId: '0',\r\n            instructorId: '0',\r\n            versionHorarioId: '0',\r\n            isNew: !_this.props.match.params || !_this.props.match.params.id\r\n        };\r\n        return _this;\r\n    }\r\n    HorarioUpdate.prototype.componentWillUpdate = function (nextProps, nextState) {\r\n        if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n    HorarioUpdate.prototype.componentDidMount = function () {\r\n        if (this.state.isNew) {\r\n            this.props.reset();\r\n        }\r\n        else {\r\n            this.props.getEntity(this.props.match.params.id);\r\n        }\r\n        this.props.getModalidads();\r\n        this.props.getDias();\r\n        this.props.getFichaTrimestres();\r\n        this.props.getAmbientes();\r\n        this.props.getInstructors();\r\n        this.props.getVersionHorarios();\r\n    };\r\n    HorarioUpdate.prototype.render = function () {\r\n        var _a = this.props, horarioEntity = _a.horarioEntity, modalidads = _a.modalidads, dias = _a.dias, fichaTrimestres = _a.fichaTrimestres, ambientes = _a.ambientes, instructors = _a.instructors, versionHorarios = _a.versionHorarios, loading = _a.loading, updating = _a.updating;\r\n        var isNew = this.state.isNew;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" },\r\n                    React.createElement(\"h2\", { id: \"ghostceetApp.horario.home.createOrEditLabel\" },\r\n                        React.createElement(Translate, { contentKey: \"ghostceetApp.horario.home.createOrEditLabel\" }, \"Create or edit a Horario\")))),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" }, loading ? (React.createElement(\"p\", null, \"Loading...\")) : (React.createElement(AvForm, { model: isNew ? {} : horarioEntity, onSubmit: this.saveEntity },\r\n                    !isNew ? (React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"id\" },\r\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                        React.createElement(AvInput, { id: \"horario-id\", type: \"text\", className: \"form-control\", name: \"id\", required: true, readOnly: true }))) : null,\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"horaInicioLabel\", for: \"horaInicio\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.horario.horaInicio\" }, \"Hora Inicio\")),\r\n                        React.createElement(AvInput, { id: \"horario-horaInicio\", type: \"datetime-local\", className: \"form-control\", name: \"horaInicio\", placeholder: 'YYYY-MM-DD HH:mm', value: isNew ? null : convertDateTimeFromServer(this.props.horarioEntity.horaInicio), validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"horaFinLabel\", for: \"horaFin\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.horario.horaFin\" }, \"Hora Fin\")),\r\n                        React.createElement(AvInput, { id: \"horario-horaFin\", type: \"datetime-local\", className: \"form-control\", name: \"horaFin\", placeholder: 'YYYY-MM-DD HH:mm', value: isNew ? null : convertDateTimeFromServer(this.props.horarioEntity.horaFin), validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"modalidad.nombre\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.horario.modalidad\" }, \"Modalidad\")),\r\n                        React.createElement(AvInput, { id: \"horario-modalidad\", type: \"select\", className: \"form-control\", name: \"modalidad.id\", value: isNew ? modalidads[0] && modalidads[0].id : horarioEntity.modalidad.id }, modalidads\r\n                            ? modalidads.map(function (otherEntity) { return (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.nombre)); })\r\n                            : null)),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"dia.nombreDia\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.horario.dia\" }, \"Dia\")),\r\n                        React.createElement(AvInput, { id: \"horario-dia\", type: \"select\", className: \"form-control\", name: \"dia.id\", value: isNew ? dias[0] && dias[0].id : horarioEntity.dia.id }, dias\r\n                            ? dias.map(function (otherEntity) { return (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.nombreDia)); })\r\n                            : null)),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"fichaTrimestre.id\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.horario.fichaTrimestre\" }, \"Ficha Trimestre\")),\r\n                        React.createElement(AvInput, { id: \"horario-fichaTrimestre\", type: \"select\", className: \"form-control\", name: \"fichaTrimestre.id\", value: isNew ? fichaTrimestres[0] && fichaTrimestres[0].id : horarioEntity.fichaTrimestre.id }, fichaTrimestres\r\n                            ? fichaTrimestres.map(function (otherEntity) { return (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.id)); })\r\n                            : null)),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"ambiente.id\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.horario.ambiente\" }, \"Ambiente\")),\r\n                        React.createElement(AvInput, { id: \"horario-ambiente\", type: \"select\", className: \"form-control\", name: \"ambiente.id\", value: isNew ? ambientes[0] && ambientes[0].id : horarioEntity.ambiente.id }, ambientes\r\n                            ? ambientes.map(function (otherEntity) { return (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.id)); })\r\n                            : null)),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"instructor.id\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.horario.instructor\" }, \"Instructor\")),\r\n                        React.createElement(AvInput, { id: \"horario-instructor\", type: \"select\", className: \"form-control\", name: \"instructor.id\", value: isNew ? instructors[0] && instructors[0].id : horarioEntity.instructor.id }, instructors\r\n                            ? instructors.map(function (otherEntity) { return (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.id)); })\r\n                            : null)),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"versionHorario.id\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.horario.versionHorario\" }, \"Version Horario\")),\r\n                        React.createElement(AvInput, { id: \"horario-versionHorario\", type: \"select\", className: \"form-control\", name: \"versionHorario.id\", value: isNew ? versionHorarios[0] && versionHorarios[0].id : horarioEntity.versionHorario.id }, versionHorarios\r\n                            ? versionHorarios.map(function (otherEntity) { return (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.id)); })\r\n                            : null)),\r\n                    React.createElement(Button, { tag: Link, id: \"cancel-save\", to: \"/entity/horario\", replace: true, color: \"info\" },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                            React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Button, { color: \"primary\", id: \"save-entity\", type: \"submit\", disabled: updating },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"save\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(Translate, { contentKey: \"entity.action.save\" }, \"Save\"))))))));\r\n    };\r\n    return HorarioUpdate;\r\n}(React.Component));\r\nexport { HorarioUpdate };\r\nvar mapStateToProps = function (storeState) { return ({\r\n    modalidads: storeState.modalidad.entities,\r\n    dias: storeState.dia.entities,\r\n    fichaTrimestres: storeState.fichaTrimestre.entities,\r\n    ambientes: storeState.ambiente.entities,\r\n    instructors: storeState.instructor.entities,\r\n    versionHorarios: storeState.versionHorario.entities,\r\n    horarioEntity: storeState.horario.entity,\r\n    loading: storeState.horario.loading,\r\n    updating: storeState.horario.updating,\r\n    updateSuccess: storeState.horario.updateSuccess\r\n}); };\r\nvar mapDispatchToProps = {\r\n    getModalidads: getModalidads,\r\n    getDias: getDias,\r\n    getFichaTrimestres: getFichaTrimestres,\r\n    getAmbientes: getAmbientes,\r\n    getInstructors: getInstructors,\r\n    getVersionHorarios: getVersionHorarios,\r\n    getEntity: getEntity,\r\n    updateEntity: updateEntity,\r\n    createEntity: createEntity,\r\n    reset: reset\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HorarioUpdate);\r\n",{"version":3,"file":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\horario\\horario-update.tsx","sourceRoot":"","sources":["C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\horario\\horario-update.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IModalidad } from 'app/shared/model/modalidad.model';\r\nimport { getEntities as getModalidads } from 'app/entities/modalidad/modalidad.reducer';\r\nimport { IDia } from 'app/shared/model/dia.model';\r\nimport { getEntities as getDias } from 'app/entities/dia/dia.reducer';\r\nimport { IFichaTrimestre } from 'app/shared/model/ficha-trimestre.model';\r\nimport { getEntities as getFichaTrimestres } from 'app/entities/ficha-trimestre/ficha-trimestre.reducer';\r\nimport { IAmbiente } from 'app/shared/model/ambiente.model';\r\nimport { getEntities as getAmbientes } from 'app/entities/ambiente/ambiente.reducer';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { getEntities as getInstructors } from 'app/entities/instructor/instructor.reducer';\r\nimport { IVersionHorario } from 'app/shared/model/version-horario.model';\r\nimport { getEntities as getVersionHorarios } from 'app/entities/version-horario/version-horario.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './horario.reducer';\r\nimport { IHorario } from 'app/shared/model/horario.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IHorarioUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IHorarioUpdateState {\r\n  isNew: boolean;\r\n  modalidadId: string;\r\n  diaId: string;\r\n  fichaTrimestreId: string;\r\n  ambienteId: string;\r\n  instructorId: string;\r\n  versionHorarioId: string;\r\n}\r\n\r\nexport class HorarioUpdate extends React.Component<IHorarioUpdateProps, IHorarioUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalidadId: '0',\r\n      diaId: '0',\r\n      fichaTrimestreId: '0',\r\n      ambienteId: '0',\r\n      instructorId: '0',\r\n      versionHorarioId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getModalidads();\r\n    this.props.getDias();\r\n    this.props.getFichaTrimestres();\r\n    this.props.getAmbientes();\r\n    this.props.getInstructors();\r\n    this.props.getVersionHorarios();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    values.horaInicio = convertDateTimeToServer(values.horaInicio);\r\n    values.horaFin = convertDateTimeToServer(values.horaFin);\r\n\r\n    if (errors.length === 0) {\r\n      const { horarioEntity } = this.props;\r\n      const entity = {\r\n        ...horarioEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/horario');\r\n  };\r\n\r\n  render() {\r\n    const { horarioEntity, modalidads, dias, fichaTrimestres, ambientes, instructors, versionHorarios, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.horario.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.horario.home.createOrEditLabel\">Create or edit a Horario</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : horarioEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"horario-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"horaInicioLabel\" for=\"horaInicio\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.horaInicio\">Hora Inicio</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-horaInicio\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"horaInicio\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.horarioEntity.horaInicio)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"horaFinLabel\" for=\"horaFin\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.horaFin\">Hora Fin</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-horaFin\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"horaFin\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.horarioEntity.horaFin)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"modalidad.nombre\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.modalidad\">Modalidad</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-modalidad\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"modalidad.id\"\r\n                    value={isNew ? modalidads[0] && modalidads[0].id : horarioEntity.modalidad.id}\r\n                  >\r\n                    {modalidads\r\n                      ? modalidads.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombre}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"dia.nombreDia\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.dia\">Dia</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-dia\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"dia.id\"\r\n                    value={isNew ? dias[0] && dias[0].id : horarioEntity.dia.id}\r\n                  >\r\n                    {dias\r\n                      ? dias.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombreDia}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"fichaTrimestre.id\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.fichaTrimestre\">Ficha Trimestre</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-fichaTrimestre\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"fichaTrimestre.id\"\r\n                    value={isNew ? fichaTrimestres[0] && fichaTrimestres[0].id : horarioEntity.fichaTrimestre.id}\r\n                  >\r\n                    {fichaTrimestres\r\n                      ? fichaTrimestres.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"ambiente.id\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.ambiente\">Ambiente</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-ambiente\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"ambiente.id\"\r\n                    value={isNew ? ambientes[0] && ambientes[0].id : horarioEntity.ambiente.id}\r\n                  >\r\n                    {ambientes\r\n                      ? ambientes.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"instructor.id\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.instructor\">Instructor</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-instructor\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"instructor.id\"\r\n                    value={isNew ? instructors[0] && instructors[0].id : horarioEntity.instructor.id}\r\n                  >\r\n                    {instructors\r\n                      ? instructors.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"versionHorario.id\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.versionHorario\">Version Horario</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-versionHorario\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"versionHorario.id\"\r\n                    value={isNew ? versionHorarios[0] && versionHorarios[0].id : horarioEntity.versionHorario.id}\r\n                  >\r\n                    {versionHorarios\r\n                      ? versionHorarios.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/horario\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  modalidads: storeState.modalidad.entities,\r\n  dias: storeState.dia.entities,\r\n  fichaTrimestres: storeState.fichaTrimestre.entities,\r\n  ambientes: storeState.ambiente.entities,\r\n  instructors: storeState.instructor.entities,\r\n  versionHorarios: storeState.versionHorario.entities,\r\n  horarioEntity: storeState.horario.entity,\r\n  loading: storeState.horario.loading,\r\n  updating: storeState.horario.updating,\r\n  updateSuccess: storeState.horario.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getModalidads,\r\n  getDias,\r\n  getFichaTrimestres,\r\n  getAmbientes,\r\n  getInstructors,\r\n  getVersionHorarios,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HorarioUpdate);\r\n"]}]}