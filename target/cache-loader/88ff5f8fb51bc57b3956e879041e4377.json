{"remainingRequest":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\config\\store.ts","dependencies":[{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\config\\store.ts","mtime":1560957997374},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560961486638},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport promiseMiddleware from 'redux-promise-middleware';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer from 'app/shared/reducers';\r\nimport DevTools from './devtools';\r\nimport errorMiddleware from './error-middleware';\r\nimport notificationMiddleware from './notification-middleware';\r\nimport loggerMiddleware from './logger-middleware';\r\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\r\nvar defaultMiddlewares = [\r\n    thunkMiddleware,\r\n    errorMiddleware,\r\n    notificationMiddleware,\r\n    promiseMiddleware(),\r\n    loadingBarMiddleware(),\r\n    loggerMiddleware\r\n];\r\nvar composedMiddlewares = function (middlewares) {\r\n    return process.env.NODE_ENV === 'development'\r\n        ? compose(applyMiddleware.apply(void 0, defaultMiddlewares.concat(middlewares)), DevTools.instrument())\r\n        : compose(applyMiddleware.apply(void 0, defaultMiddlewares.concat(middlewares)));\r\n};\r\nvar initialize = function (initialState, middlewares) {\r\n    if (middlewares === void 0) { middlewares = []; }\r\n    return createStore(reducer, initialState, composedMiddlewares(middlewares));\r\n};\r\nexport default initialize;\r\n",{"version":3,"file":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\config\\store.ts","sourceRoot":"","sources":["C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\config\\store.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAC9D,OAAO,iBAAiB,MAAM,0BAA0B,CAAC;AACzD,OAAO,eAAe,MAAM,aAAa,CAAC;AAC1C,OAAO,OAAuB,MAAM,qBAAqB,CAAC;AAC1D,OAAO,QAAQ,MAAM,YAAY,CAAC;AAClC,OAAO,eAAe,MAAM,oBAAoB,CAAC;AACjD,OAAO,sBAAsB,MAAM,2BAA2B,CAAC;AAC/D,OAAO,gBAAgB,MAAM,qBAAqB,CAAC;AACnD,OAAO,EAAE,oBAAoB,EAAE,MAAM,yBAAyB,CAAC;AAE/D,IAAM,kBAAkB,GAAG;IACzB,eAAe;IACf,eAAe;IACf,sBAAsB;IACtB,iBAAiB,EAAE;IACnB,oBAAoB,EAAE;IACtB,gBAAgB;CACjB,CAAC;AACF,IAAM,mBAAmB,GAAG,UAAA,WAAW;IACrC,OAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,aAAa;QACpC,CAAC,CAAC,OAAO,CACL,eAAe,eAAI,kBAAkB,QAAK,WAAW,IACrD,QAAQ,CAAC,UAAU,EAAE,CACtB;QACH,CAAC,CAAC,OAAO,CAAC,eAAe,eAAI,kBAAkB,QAAK,WAAW,GAAE;AALnE,CAKmE,CAAC;AAEtE,IAAM,UAAU,GAAG,UAAC,YAAyB,EAAE,WAAgB;IAAhB,4BAAA,EAAA,gBAAgB;IAAK,OAAA,WAAW,CAAC,OAAO,EAAE,YAAY,EAAE,mBAAmB,CAAC,WAAW,CAAC,CAAC;AAApE,CAAoE,CAAC;AAEzI,eAAe,UAAU,CAAC","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\r\nimport promiseMiddleware from 'redux-promise-middleware';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer, { IRootState } from 'app/shared/reducers';\r\nimport DevTools from './devtools';\r\nimport errorMiddleware from './error-middleware';\r\nimport notificationMiddleware from './notification-middleware';\r\nimport loggerMiddleware from './logger-middleware';\r\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\r\n\r\nconst defaultMiddlewares = [\r\n  thunkMiddleware,\r\n  errorMiddleware,\r\n  notificationMiddleware,\r\n  promiseMiddleware(),\r\n  loadingBarMiddleware(),\r\n  loggerMiddleware\r\n];\r\nconst composedMiddlewares = middlewares =>\r\n  process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(...defaultMiddlewares, ...middlewares),\r\n        DevTools.instrument()\r\n      )\r\n    : compose(applyMiddleware(...defaultMiddlewares, ...middlewares));\r\n\r\nconst initialize = (initialState?: IRootState, middlewares = []) => createStore(reducer, initialState, composedMiddlewares(middlewares));\r\n\r\nexport default initialize;\r\n"]}]}