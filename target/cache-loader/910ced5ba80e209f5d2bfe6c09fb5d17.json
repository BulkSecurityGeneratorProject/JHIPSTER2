{"remainingRequest":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\programa\\programa-update.tsx","dependencies":[{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\programa\\programa-update.tsx","mtime":1560957997583},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560961486638},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities as getNivelFormacions } from 'app/entities/nivel-formacion/nivel-formacion.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './programa.reducer';\r\nvar ProgramaUpdate = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProgramaUpdate, _super);\r\n    function ProgramaUpdate(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.saveEntity = function (event, errors, values) {\r\n            if (errors.length === 0) {\r\n                var programaEntity = _this.props.programaEntity;\r\n                var entity = tslib_1.__assign({}, programaEntity, values);\r\n                if (_this.state.isNew) {\r\n                    _this.props.createEntity(entity);\r\n                }\r\n                else {\r\n                    _this.props.updateEntity(entity);\r\n                }\r\n            }\r\n        };\r\n        _this.handleClose = function () {\r\n            _this.props.history.push('/entity/programa');\r\n        };\r\n        _this.state = {\r\n            nivelFormacionId: '0',\r\n            isNew: !_this.props.match.params || !_this.props.match.params.id\r\n        };\r\n        return _this;\r\n    }\r\n    ProgramaUpdate.prototype.componentWillUpdate = function (nextProps, nextState) {\r\n        if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n    ProgramaUpdate.prototype.componentDidMount = function () {\r\n        if (this.state.isNew) {\r\n            this.props.reset();\r\n        }\r\n        else {\r\n            this.props.getEntity(this.props.match.params.id);\r\n        }\r\n        this.props.getNivelFormacions();\r\n    };\r\n    ProgramaUpdate.prototype.render = function () {\r\n        var _a = this.props, programaEntity = _a.programaEntity, nivelFormacions = _a.nivelFormacions, loading = _a.loading, updating = _a.updating;\r\n        var isNew = this.state.isNew;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" },\r\n                    React.createElement(\"h2\", { id: \"ghostceetApp.programa.home.createOrEditLabel\" },\r\n                        React.createElement(Translate, { contentKey: \"ghostceetApp.programa.home.createOrEditLabel\" }, \"Create or edit a Programa\")))),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" }, loading ? (React.createElement(\"p\", null, \"Loading...\")) : (React.createElement(AvForm, { model: isNew ? {} : programaEntity, onSubmit: this.saveEntity },\r\n                    !isNew ? (React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"id\" },\r\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                        React.createElement(AvInput, { id: \"programa-id\", type: \"text\", className: \"form-control\", name: \"id\", required: true, readOnly: true }))) : null,\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"codigoLabel\", for: \"codigo\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.programa.codigo\" }, \"Codigo\")),\r\n                        React.createElement(AvField, { id: \"programa-codigo\", type: \"text\", name: \"codigo\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                                maxLength: { value: 50, errorMessage: translate('entity.validation.maxlength', { max: 50 }) }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"versionLabel\", for: \"version\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.programa.version\" }, \"Version\")),\r\n                        React.createElement(AvField, { id: \"programa-version\", type: \"text\", name: \"version\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                                maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"nombreLabel\", for: \"nombre\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.programa.nombre\" }, \"Nombre\")),\r\n                        React.createElement(AvField, { id: \"programa-nombre\", type: \"text\", name: \"nombre\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                                maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"siglaLabel\", for: \"sigla\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.programa.sigla\" }, \"Sigla\")),\r\n                        React.createElement(AvField, { id: \"programa-sigla\", type: \"text\", name: \"sigla\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                                maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"estadoLabel\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.programa.estado\" }, \"Estado\")),\r\n                        React.createElement(AvInput, { id: \"programa-estado\", type: \"select\", className: \"form-control\", name: \"estado\", value: (!isNew && programaEntity.estado) || 'Habilitado' },\r\n                            React.createElement(\"option\", { value: \"Habilitado\" },\r\n                                React.createElement(Translate, { contentKey: \"ghostceetApp.Estado.Habilitado\" })),\r\n                            React.createElement(\"option\", { value: \"Inhabilitado\" },\r\n                                React.createElement(Translate, { contentKey: \"ghostceetApp.Estado.Inhabilitado\" })))),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"nivelFormacion.nivelFormacion\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.programa.nivelFormacion\" }, \"Nivel Formacion\")),\r\n                        React.createElement(AvInput, { id: \"programa-nivelFormacion\", type: \"select\", className: \"form-control\", name: \"nivelFormacion.id\", value: isNew ? nivelFormacions[0] && nivelFormacions[0].id : programaEntity.nivelFormacion.id }, nivelFormacions\r\n                            ? nivelFormacions.map(function (otherEntity) { return (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.nivelFormacion)); })\r\n                            : null)),\r\n                    React.createElement(Button, { tag: Link, id: \"cancel-save\", to: \"/entity/programa\", replace: true, color: \"info\" },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                            React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Button, { color: \"primary\", id: \"save-entity\", type: \"submit\", disabled: updating },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"save\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(Translate, { contentKey: \"entity.action.save\" }, \"Save\"))))))));\r\n    };\r\n    return ProgramaUpdate;\r\n}(React.Component));\r\nexport { ProgramaUpdate };\r\nvar mapStateToProps = function (storeState) { return ({\r\n    nivelFormacions: storeState.nivelFormacion.entities,\r\n    programaEntity: storeState.programa.entity,\r\n    loading: storeState.programa.loading,\r\n    updating: storeState.programa.updating,\r\n    updateSuccess: storeState.programa.updateSuccess\r\n}); };\r\nvar mapDispatchToProps = {\r\n    getNivelFormacions: getNivelFormacions,\r\n    getEntity: getEntity,\r\n    updateEntity: updateEntity,\r\n    createEntity: createEntity,\r\n    reset: reset\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProgramaUpdate);\r\n",{"version":3,"file":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\programa\\programa-update.tsx","sourceRoot":"","sources":["C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\programa\\programa-update.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { INivelFormacion } from 'app/shared/model/nivel-formacion.model';\r\nimport { getEntities as getNivelFormacions } from 'app/entities/nivel-formacion/nivel-formacion.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './programa.reducer';\r\nimport { IPrograma } from 'app/shared/model/programa.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IProgramaUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IProgramaUpdateState {\r\n  isNew: boolean;\r\n  nivelFormacionId: string;\r\n}\r\n\r\nexport class ProgramaUpdate extends React.Component<IProgramaUpdateProps, IProgramaUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nivelFormacionId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getNivelFormacions();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { programaEntity } = this.props;\r\n      const entity = {\r\n        ...programaEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/programa');\r\n  };\r\n\r\n  render() {\r\n    const { programaEntity, nivelFormacions, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.programa.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.programa.home.createOrEditLabel\">Create or edit a Programa</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : programaEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"programa-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"codigoLabel\" for=\"codigo\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.codigo\">Codigo</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"programa-codigo\"\r\n                    type=\"text\"\r\n                    name=\"codigo\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 50, errorMessage: translate('entity.validation.maxlength', { max: 50 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"versionLabel\" for=\"version\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.version\">Version</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"programa-version\"\r\n                    type=\"text\"\r\n                    name=\"version\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"nombreLabel\" for=\"nombre\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.nombre\">Nombre</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"programa-nombre\"\r\n                    type=\"text\"\r\n                    name=\"nombre\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"siglaLabel\" for=\"sigla\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.sigla\">Sigla</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"programa-sigla\"\r\n                    type=\"text\"\r\n                    name=\"sigla\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"programa-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && programaEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"nivelFormacion.nivelFormacion\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.nivelFormacion\">Nivel Formacion</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"programa-nivelFormacion\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"nivelFormacion.id\"\r\n                    value={isNew ? nivelFormacions[0] && nivelFormacions[0].id : programaEntity.nivelFormacion.id}\r\n                  >\r\n                    {nivelFormacions\r\n                      ? nivelFormacions.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nivelFormacion}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/programa\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  nivelFormacions: storeState.nivelFormacion.entities,\r\n  programaEntity: storeState.programa.entity,\r\n  loading: storeState.programa.loading,\r\n  updating: storeState.programa.updating,\r\n  updateSuccess: storeState.programa.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getNivelFormacions,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProgramaUpdate);\r\n"]}]}