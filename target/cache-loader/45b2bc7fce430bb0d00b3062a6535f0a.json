{"remainingRequest":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\trimestre-vigente\\trimestre-vigente-update.tsx","dependencies":[{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\trimestre-vigente\\trimestre-vigente-update.tsx","mtime":1560957997632},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560961486638},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntities as getAnios } from 'app/entities/anio/anio.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './trimestre-vigente.reducer';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nvar TrimestreVigenteUpdate = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TrimestreVigenteUpdate, _super);\r\n    function TrimestreVigenteUpdate(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.saveEntity = function (event, errors, values) {\r\n            values.fechaInicio = convertDateTimeToServer(values.fechaInicio);\r\n            values.fechaFin = convertDateTimeToServer(values.fechaFin);\r\n            if (errors.length === 0) {\r\n                var trimestreVigenteEntity = _this.props.trimestreVigenteEntity;\r\n                var entity = tslib_1.__assign({}, trimestreVigenteEntity, values);\r\n                if (_this.state.isNew) {\r\n                    _this.props.createEntity(entity);\r\n                }\r\n                else {\r\n                    _this.props.updateEntity(entity);\r\n                }\r\n            }\r\n        };\r\n        _this.handleClose = function () {\r\n            _this.props.history.push('/entity/trimestre-vigente');\r\n        };\r\n        _this.state = {\r\n            anio1Id: '0',\r\n            isNew: !_this.props.match.params || !_this.props.match.params.id\r\n        };\r\n        return _this;\r\n    }\r\n    TrimestreVigenteUpdate.prototype.componentWillUpdate = function (nextProps, nextState) {\r\n        if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n            this.handleClose();\r\n        }\r\n    };\r\n    TrimestreVigenteUpdate.prototype.componentDidMount = function () {\r\n        if (this.state.isNew) {\r\n            this.props.reset();\r\n        }\r\n        else {\r\n            this.props.getEntity(this.props.match.params.id);\r\n        }\r\n        this.props.getAnios();\r\n    };\r\n    TrimestreVigenteUpdate.prototype.render = function () {\r\n        var _a = this.props, trimestreVigenteEntity = _a.trimestreVigenteEntity, anios = _a.anios, loading = _a.loading, updating = _a.updating;\r\n        var isNew = this.state.isNew;\r\n        return (React.createElement(\"div\", null,\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" },\r\n                    React.createElement(\"h2\", { id: \"ghostceetApp.trimestreVigente.home.createOrEditLabel\" },\r\n                        React.createElement(Translate, { contentKey: \"ghostceetApp.trimestreVigente.home.createOrEditLabel\" }, \"Create or edit a TrimestreVigente\")))),\r\n            React.createElement(Row, { className: \"justify-content-center\" },\r\n                React.createElement(Col, { md: \"8\" }, loading ? (React.createElement(\"p\", null, \"Loading...\")) : (React.createElement(AvForm, { model: isNew ? {} : trimestreVigenteEntity, onSubmit: this.saveEntity },\r\n                    !isNew ? (React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"id\" },\r\n                            React.createElement(Translate, { contentKey: \"global.field.id\" }, \"ID\")),\r\n                        React.createElement(AvInput, { id: \"trimestre-vigente-id\", type: \"text\", className: \"form-control\", name: \"id\", required: true, readOnly: true }))) : null,\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"anioLabel\", for: \"anio\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.trimestreVigente.anio\" }, \"Anio\")),\r\n                        React.createElement(AvField, { id: \"trimestre-vigente-anio\", type: \"string\", className: \"form-control\", name: \"anio\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                                number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"trimestreProgramadoLabel\", for: \"trimestreProgramado\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.trimestreVigente.trimestreProgramado\" }, \"Trimestre Programado\")),\r\n                        React.createElement(AvField, { id: \"trimestre-vigente-trimestreProgramado\", type: \"string\", className: \"form-control\", name: \"trimestreProgramado\", validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                                number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"fechaInicioLabel\", for: \"fechaInicio\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.trimestreVigente.fechaInicio\" }, \"Fecha Inicio\")),\r\n                        React.createElement(AvInput, { id: \"trimestre-vigente-fechaInicio\", type: \"datetime-local\", className: \"form-control\", name: \"fechaInicio\", placeholder: 'YYYY-MM-DD HH:mm', value: isNew ? null : convertDateTimeFromServer(this.props.trimestreVigenteEntity.fechaInicio), validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"fechaFinLabel\", for: \"fechaFin\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.trimestreVigente.fechaFin\" }, \"Fecha Fin\")),\r\n                        React.createElement(AvInput, { id: \"trimestre-vigente-fechaFin\", type: \"datetime-local\", className: \"form-control\", name: \"fechaFin\", placeholder: 'YYYY-MM-DD HH:mm', value: isNew ? null : convertDateTimeFromServer(this.props.trimestreVigenteEntity.fechaFin), validate: {\r\n                                required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                            } })),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { id: \"estadoLabel\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.trimestreVigente.estado\" }, \"Estado\")),\r\n                        React.createElement(AvInput, { id: \"trimestre-vigente-estado\", type: \"select\", className: \"form-control\", name: \"estado\", value: (!isNew && trimestreVigenteEntity.estado) || 'Habilitado' },\r\n                            React.createElement(\"option\", { value: \"Habilitado\" },\r\n                                React.createElement(Translate, { contentKey: \"ghostceetApp.Estado.Habilitado\" })),\r\n                            React.createElement(\"option\", { value: \"Inhabilitado\" },\r\n                                React.createElement(Translate, { contentKey: \"ghostceetApp.Estado.Inhabilitado\" })))),\r\n                    React.createElement(AvGroup, null,\r\n                        React.createElement(Label, { for: \"anio1.id\" },\r\n                            React.createElement(Translate, { contentKey: \"ghostceetApp.trimestreVigente.anio1\" }, \"Anio 1\")),\r\n                        React.createElement(AvInput, { id: \"trimestre-vigente-anio1\", type: \"select\", className: \"form-control\", name: \"anio1.id\", value: isNew ? anios[0] && anios[0].id : trimestreVigenteEntity.anio1.id }, anios\r\n                            ? anios.map(function (otherEntity) { return (React.createElement(\"option\", { value: otherEntity.id, key: otherEntity.id }, otherEntity.id)); })\r\n                            : null)),\r\n                    React.createElement(Button, { tag: Link, id: \"cancel-save\", to: \"/entity/trimestre-vigente\", replace: true, color: \"info\" },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                            React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                    \"\\u00A0\",\r\n                    React.createElement(Button, { color: \"primary\", id: \"save-entity\", type: \"submit\", disabled: updating },\r\n                        React.createElement(FontAwesomeIcon, { icon: \"save\" }),\r\n                        \"\\u00A0\",\r\n                        React.createElement(Translate, { contentKey: \"entity.action.save\" }, \"Save\"))))))));\r\n    };\r\n    return TrimestreVigenteUpdate;\r\n}(React.Component));\r\nexport { TrimestreVigenteUpdate };\r\nvar mapStateToProps = function (storeState) { return ({\r\n    anios: storeState.anio.entities,\r\n    trimestreVigenteEntity: storeState.trimestreVigente.entity,\r\n    loading: storeState.trimestreVigente.loading,\r\n    updating: storeState.trimestreVigente.updating,\r\n    updateSuccess: storeState.trimestreVigente.updateSuccess\r\n}); };\r\nvar mapDispatchToProps = {\r\n    getAnios: getAnios,\r\n    getEntity: getEntity,\r\n    updateEntity: updateEntity,\r\n    createEntity: createEntity,\r\n    reset: reset\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrimestreVigenteUpdate);\r\n",{"version":3,"file":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\trimestre-vigente\\trimestre-vigente-update.tsx","sourceRoot":"","sources":["C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\trimestre-vigente\\trimestre-vigente-update.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IAnio } from 'app/shared/model/anio.model';\r\nimport { getEntities as getAnios } from 'app/entities/anio/anio.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './trimestre-vigente.reducer';\r\nimport { ITrimestreVigente } from 'app/shared/model/trimestre-vigente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface ITrimestreVigenteUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface ITrimestreVigenteUpdateState {\r\n  isNew: boolean;\r\n  anio1Id: string;\r\n}\r\n\r\nexport class TrimestreVigenteUpdate extends React.Component<ITrimestreVigenteUpdateProps, ITrimestreVigenteUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anio1Id: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getAnios();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    values.fechaInicio = convertDateTimeToServer(values.fechaInicio);\r\n    values.fechaFin = convertDateTimeToServer(values.fechaFin);\r\n\r\n    if (errors.length === 0) {\r\n      const { trimestreVigenteEntity } = this.props;\r\n      const entity = {\r\n        ...trimestreVigenteEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/trimestre-vigente');\r\n  };\r\n\r\n  render() {\r\n    const { trimestreVigenteEntity, anios, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.trimestreVigente.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.trimestreVigente.home.createOrEditLabel\">Create or edit a TrimestreVigente</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : trimestreVigenteEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"trimestre-vigente-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"anioLabel\" for=\"anio\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.anio\">Anio</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"trimestre-vigente-anio\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"anio\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"trimestreProgramadoLabel\" for=\"trimestreProgramado\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.trimestreProgramado\">Trimestre Programado</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"trimestre-vigente-trimestreProgramado\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"trimestreProgramado\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"fechaInicioLabel\" for=\"fechaInicio\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.fechaInicio\">Fecha Inicio</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"trimestre-vigente-fechaInicio\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"fechaInicio\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.trimestreVigenteEntity.fechaInicio)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"fechaFinLabel\" for=\"fechaFin\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.fechaFin\">Fecha Fin</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"trimestre-vigente-fechaFin\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"fechaFin\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.trimestreVigenteEntity.fechaFin)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"trimestre-vigente-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && trimestreVigenteEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"anio1.id\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.anio1\">Anio 1</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"trimestre-vigente-anio1\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"anio1.id\"\r\n                    value={isNew ? anios[0] && anios[0].id : trimestreVigenteEntity.anio1.id}\r\n                  >\r\n                    {anios\r\n                      ? anios.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/trimestre-vigente\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  anios: storeState.anio.entities,\r\n  trimestreVigenteEntity: storeState.trimestreVigente.entity,\r\n  loading: storeState.trimestreVigente.loading,\r\n  updating: storeState.trimestreVigente.updating,\r\n  updateSuccess: storeState.trimestreVigente.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAnios,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrimestreVigenteUpdate);\r\n"]}]}