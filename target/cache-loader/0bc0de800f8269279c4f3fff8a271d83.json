{"remainingRequest":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-2!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\ts-loader\\index.js??ref--4-3!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\disponibilidad-competencias\\disponibilidad-competencias-detail.tsx","dependencies":[{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\disponibilidad-competencias\\disponibilidad-competencias-detail.tsx","mtime":1560957997401},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\react-hot-loader\\webpack.js","mtime":1505850161000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1560961486638},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\ts-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js","mtime":1519899048000}],"contextDependencies":[],"result":["import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { getEntity } from './disponibilidad-competencias.reducer';\r\nvar DisponibilidadCompetenciasDetail = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DisponibilidadCompetenciasDetail, _super);\r\n    function DisponibilidadCompetenciasDetail() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DisponibilidadCompetenciasDetail.prototype.componentDidMount = function () {\r\n        this.props.getEntity(this.props.match.params.id);\r\n    };\r\n    DisponibilidadCompetenciasDetail.prototype.render = function () {\r\n        var disponibilidadCompetenciasEntity = this.props.disponibilidadCompetenciasEntity;\r\n        return (React.createElement(Row, null,\r\n            React.createElement(Col, { md: \"8\" },\r\n                React.createElement(\"h2\", null,\r\n                    React.createElement(Translate, { contentKey: \"ghostceetApp.disponibilidadCompetencias.detail.title\" }, \"DisponibilidadCompetencias\"),\r\n                    \" [\",\r\n                    React.createElement(\"b\", null, disponibilidadCompetenciasEntity.id),\r\n                    \"]\"),\r\n                React.createElement(\"dl\", { className: \"jh-entity-details\" },\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"ghostceetApp.disponibilidadCompetencias.instructor\" }, \"Instructor\")),\r\n                    React.createElement(\"dd\", null, disponibilidadCompetenciasEntity.instructor ? disponibilidadCompetenciasEntity.instructor.id : ''),\r\n                    React.createElement(\"dt\", null,\r\n                        React.createElement(Translate, { contentKey: \"ghostceetApp.disponibilidadCompetencias.vinculacionInstructor\" }, \"Vinculacion Instructor\")),\r\n                    React.createElement(\"dd\", null, disponibilidadCompetenciasEntity.vinculacionInstructor ? disponibilidadCompetenciasEntity.vinculacionInstructor.id : '')),\r\n                React.createElement(Button, { tag: Link, to: \"/entity/disponibilidad-competencias\", replace: true, color: \"info\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"arrow-left\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.back\" }, \"Back\"))),\r\n                \"\\u00A0\",\r\n                React.createElement(Button, { tag: Link, to: \"/entity/disponibilidad-competencias/\" + disponibilidadCompetenciasEntity.id + \"/edit\", replace: true, color: \"primary\" },\r\n                    React.createElement(FontAwesomeIcon, { icon: \"pencil-alt\" }),\r\n                    ' ',\r\n                    React.createElement(\"span\", { className: \"d-none d-md-inline\" },\r\n                        React.createElement(Translate, { contentKey: \"entity.action.edit\" }, \"Edit\"))))));\r\n    };\r\n    return DisponibilidadCompetenciasDetail;\r\n}(React.Component));\r\nexport { DisponibilidadCompetenciasDetail };\r\nvar mapStateToProps = function (_a) {\r\n    var disponibilidadCompetencias = _a.disponibilidadCompetencias;\r\n    return ({\r\n        disponibilidadCompetenciasEntity: disponibilidadCompetencias.entity\r\n    });\r\n};\r\nvar mapDispatchToProps = { getEntity: getEntity };\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DisponibilidadCompetenciasDetail);\r\n",{"version":3,"file":"C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\disponibilidad-competencias\\disponibilidad-competencias-detail.tsx","sourceRoot":"","sources":["C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\node_modules\\tslint-loader\\index.js!C:\\Users\\agomez\\Documents\\temp\\jhipster\\JHIPSTER2\\src\\main\\webapp\\app\\entities\\disponibilidad-competencias\\disponibilidad-competencias-detail.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,IAAI,EAAuB,MAAM,kBAAkB,CAAC;AAC7D,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,YAAY,CAAC;AAC9C,8CAA8C;AAC9C,OAAO,EAAE,SAAS,EAAkB,MAAM,gBAAgB,CAAC;AAC3D,OAAO,EAAE,eAAe,EAAE,MAAM,gCAAgC,CAAC;AAGjE,OAAO,EAAE,SAAS,EAAE,MAAM,uCAAuC,CAAC;AAOlE;IAAsD,4DAAuD;IAA7G;;IA2CA,CAAC;IA1CC,4DAAiB,GAAjB;QACE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAED,iDAAM,GAAN;QACU,IAAA,8EAAgC,CAAgB;QACxD,OAAO,CACL,oBAAC,GAAG;YACF,oBAAC,GAAG,IAAC,EAAE,EAAC,GAAG;gBACT;oBACE,oBAAC,SAAS,IAAC,UAAU,EAAC,sDAAsD,iCAAuC;;oBACnH,+BAAI,gCAAgC,CAAC,EAAE,CAAK;wBACzC;gBACL,4BAAI,SAAS,EAAC,mBAAmB;oBAC/B;wBACE,oBAAC,SAAS,IAAC,UAAU,EAAC,oDAAoD,iBAAuB,CAC9F;oBACL,gCAAK,gCAAgC,CAAC,UAAU,CAAC,CAAC,CAAC,gCAAgC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAM;oBAC5G;wBACE,oBAAC,SAAS,IAAC,UAAU,EAAC,+DAA+D,6BAAmC,CACrH;oBACL,gCACG,gCAAgC,CAAC,qBAAqB,CAAC,CAAC,CAAC,gCAAgC,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CACrH,CACF;gBACL,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAC,qCAAqC,EAAC,OAAO,QAAC,KAAK,EAAC,MAAM;oBAC9E,oBAAC,eAAe,IAAC,IAAI,EAAC,YAAY,GAAG;oBAAC,GAAG;oBACzC,8BAAM,SAAS,EAAC,oBAAoB;wBAClC,oBAAC,SAAS,IAAC,UAAU,EAAC,oBAAoB,WAAiB,CACtD,CACA;;gBAET,oBAAC,MAAM,IAAC,GAAG,EAAE,IAAI,EAAE,EAAE,EAAE,yCAAuC,gCAAgC,CAAC,EAAE,UAAO,EAAE,OAAO,QAAC,KAAK,EAAC,SAAS;oBAC/H,oBAAC,eAAe,IAAC,IAAI,EAAC,YAAY,GAAG;oBAAC,GAAG;oBACzC,8BAAM,SAAS,EAAC,oBAAoB;wBAClC,oBAAC,SAAS,IAAC,UAAU,EAAC,oBAAoB,WAAiB,CACtD,CACA,CACL,CACF,CACP,CAAC;IACJ,CAAC;IACH,uCAAC;AAAD,CAAC,AA3CD,CAAsD,KAAK,CAAC,SAAS,GA2CpE;;AAED,IAAM,eAAe,GAAG,UAAC,EAA0C;QAAxC,0DAA0B;IAAmB,OAAA,CAAC;QACvE,gCAAgC,EAAE,0BAA0B,CAAC,MAAM;KACpE,CAAC;AAFsE,CAEtE,CAAC;AAEH,IAAM,kBAAkB,GAAG,EAAE,SAAS,WAAA,EAAE,CAAC;AAKzC,eAAe,OAAO,CACpB,eAAe,EACf,kBAAkB,CACnB,CAAC,gCAAgC,CAAC,CAAC","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './disponibilidad-competencias.reducer';\r\nimport { IDisponibilidadCompetencias } from 'app/shared/model/disponibilidad-competencias.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDisponibilidadCompetenciasDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DisponibilidadCompetenciasDetail extends React.Component<IDisponibilidadCompetenciasDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { disponibilidadCompetenciasEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.detail.title\">DisponibilidadCompetencias</Translate> [\r\n            <b>{disponibilidadCompetenciasEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.instructor\">Instructor</Translate>\r\n            </dt>\r\n            <dd>{disponibilidadCompetenciasEntity.instructor ? disponibilidadCompetenciasEntity.instructor.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.vinculacionInstructor\">Vinculacion Instructor</Translate>\r\n            </dt>\r\n            <dd>\r\n              {disponibilidadCompetenciasEntity.vinculacionInstructor ? disponibilidadCompetenciasEntity.vinculacionInstructor.id : ''}\r\n            </dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/disponibilidad-competencias\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/disponibilidad-competencias/${disponibilidadCompetenciasEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ disponibilidadCompetencias }: IRootState) => ({\r\n  disponibilidadCompetenciasEntity: disponibilidadCompetencias.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisponibilidadCompetenciasDetail);\r\n"]}]}