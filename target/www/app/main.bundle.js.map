{"version":3,"file":"app/main.bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/main/webapp/app/app.css","webpack:///./src/main/webapp/app/modules/home/ghostRegistroCss.css","webpack:///./src/main/webapp/app/modules/home/home.css","webpack:///./src/main/webapp/app/shared/layout/footer/footer.css","webpack:///./src/main/webapp/app/shared/layout/header/header.css","webpack:///./src/main/webapp/app/shared/layout/password/password-strength-bar.css","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///(webpack)/hot sync nonrecursive ^\\.\\/log$","webpack:///./src/main/webapp/app/app.css?232f","webpack:///./src/main/webapp/app/app.tsx","webpack:///./src/main/webapp/app/config/axios-interceptor.ts","webpack:///./src/main/webapp/app/config/constants.ts","webpack:///./src/main/webapp/app/config/devtools.tsx","webpack:///./src/main/webapp/app/config/error-middleware.ts","webpack:///./src/main/webapp/app/config/icon-loader.ts","webpack:///./src/main/webapp/app/config/logger-middleware.ts","webpack:///./src/main/webapp/app/config/notification-middleware.ts","webpack:///./src/main/webapp/app/config/store.ts","webpack:///./src/main/webapp/app/config/translation.ts","webpack:///./src/main/webapp/app/entities/actividad-proyecto/actividad-proyecto-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/actividad-proyecto/actividad-proyecto-detail.tsx","webpack:///./src/main/webapp/app/entities/actividad-proyecto/actividad-proyecto-update.tsx","webpack:///./src/main/webapp/app/entities/actividad-proyecto/actividad-proyecto.reducer.ts","webpack:///./src/main/webapp/app/entities/actividad-proyecto/actividad-proyecto.tsx","webpack:///./src/main/webapp/app/entities/actividad-proyecto/index.tsx","webpack:///./src/main/webapp/app/entities/ambiente/ambiente-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/ambiente/ambiente-detail.tsx","webpack:///./src/main/webapp/app/entities/ambiente/ambiente-update.tsx","webpack:///./src/main/webapp/app/entities/ambiente/ambiente.reducer.ts","webpack:///./src/main/webapp/app/entities/ambiente/ambiente.tsx","webpack:///./src/main/webapp/app/entities/ambiente/index.tsx","webpack:///./src/main/webapp/app/entities/anio/anio-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/anio/anio-detail.tsx","webpack:///./src/main/webapp/app/entities/anio/anio-update.tsx","webpack:///./src/main/webapp/app/entities/anio/anio.reducer.ts","webpack:///./src/main/webapp/app/entities/anio/anio.tsx","webpack:///./src/main/webapp/app/entities/anio/index.tsx","webpack:///./src/main/webapp/app/entities/area-instructor/area-instructor-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/area-instructor/area-instructor-detail.tsx","webpack:///./src/main/webapp/app/entities/area-instructor/area-instructor-update.tsx","webpack:///./src/main/webapp/app/entities/area-instructor/area-instructor.reducer.ts","webpack:///./src/main/webapp/app/entities/area-instructor/area-instructor.tsx","webpack:///./src/main/webapp/app/entities/area-instructor/index.tsx","webpack:///./src/main/webapp/app/entities/area/area-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/area/area-detail.tsx","webpack:///./src/main/webapp/app/entities/area/area-update.tsx","webpack:///./src/main/webapp/app/entities/area/area.reducer.ts","webpack:///./src/main/webapp/app/entities/area/area.tsx","webpack:///./src/main/webapp/app/entities/area/index.tsx","webpack:///./src/main/webapp/app/entities/cliente/cliente-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/cliente/cliente-detail.tsx","webpack:///./src/main/webapp/app/entities/cliente/cliente-update.tsx","webpack:///./src/main/webapp/app/entities/cliente/cliente.reducer.ts","webpack:///./src/main/webapp/app/entities/cliente/cliente.tsx","webpack:///./src/main/webapp/app/entities/cliente/index.tsx","webpack:///./src/main/webapp/app/entities/competencia/competencia-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/competencia/competencia-detail.tsx","webpack:///./src/main/webapp/app/entities/competencia/competencia-update.tsx","webpack:///./src/main/webapp/app/entities/competencia/competencia.reducer.ts","webpack:///./src/main/webapp/app/entities/competencia/competencia.tsx","webpack:///./src/main/webapp/app/entities/competencia/index.tsx","webpack:///./src/main/webapp/app/entities/dia-jornada/dia-jornada-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/dia-jornada/dia-jornada-detail.tsx","webpack:///./src/main/webapp/app/entities/dia-jornada/dia-jornada-update.tsx","webpack:///./src/main/webapp/app/entities/dia-jornada/dia-jornada.reducer.ts","webpack:///./src/main/webapp/app/entities/dia-jornada/dia-jornada.tsx","webpack:///./src/main/webapp/app/entities/dia-jornada/index.tsx","webpack:///./src/main/webapp/app/entities/dia/dia-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/dia/dia-detail.tsx","webpack:///./src/main/webapp/app/entities/dia/dia-update.tsx","webpack:///./src/main/webapp/app/entities/dia/dia.reducer.ts","webpack:///./src/main/webapp/app/entities/dia/dia.tsx","webpack:///./src/main/webapp/app/entities/dia/index.tsx","webpack:///./src/main/webapp/app/entities/disponibilidad-competencias/disponibilidad-competencias-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/disponibilidad-competencias/disponibilidad-competencias-detail.tsx","webpack:///./src/main/webapp/app/entities/disponibilidad-competencias/disponibilidad-competencias-update.tsx","webpack:///./src/main/webapp/app/entities/disponibilidad-competencias/disponibilidad-competencias.reducer.ts","webpack:///./src/main/webapp/app/entities/disponibilidad-competencias/disponibilidad-competencias.tsx","webpack:///./src/main/webapp/app/entities/disponibilidad-competencias/index.tsx","webpack:///./src/main/webapp/app/entities/disponibilidad-horaria/disponibilidad-horaria-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/disponibilidad-horaria/disponibilidad-horaria-detail.tsx","webpack:///./src/main/webapp/app/entities/disponibilidad-horaria/disponibilidad-horaria-update.tsx","webpack:///./src/main/webapp/app/entities/disponibilidad-horaria/disponibilidad-horaria.reducer.ts","webpack:///./src/main/webapp/app/entities/disponibilidad-horaria/disponibilidad-horaria.tsx","webpack:///./src/main/webapp/app/entities/disponibilidad-horaria/index.tsx","webpack:///./src/main/webapp/app/entities/documento/documento-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/documento/documento-detail.tsx","webpack:///./src/main/webapp/app/entities/documento/documento-update.tsx","webpack:///./src/main/webapp/app/entities/documento/documento.reducer.ts","webpack:///./src/main/webapp/app/entities/documento/documento.tsx","webpack:///./src/main/webapp/app/entities/documento/index.tsx","webpack:///./src/main/webapp/app/entities/estado-ficha/estado-ficha-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/estado-ficha/estado-ficha-detail.tsx","webpack:///./src/main/webapp/app/entities/estado-ficha/estado-ficha-update.tsx","webpack:///./src/main/webapp/app/entities/estado-ficha/estado-ficha.reducer.ts","webpack:///./src/main/webapp/app/entities/estado-ficha/estado-ficha.tsx","webpack:///./src/main/webapp/app/entities/estado-ficha/index.tsx","webpack:///./src/main/webapp/app/entities/fase-proyecto/fase-proyecto-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/fase-proyecto/fase-proyecto-detail.tsx","webpack:///./src/main/webapp/app/entities/fase-proyecto/fase-proyecto-update.tsx","webpack:///./src/main/webapp/app/entities/fase-proyecto/fase-proyecto.reducer.ts","webpack:///./src/main/webapp/app/entities/fase-proyecto/fase-proyecto.tsx","webpack:///./src/main/webapp/app/entities/fase-proyecto/index.tsx","webpack:///./src/main/webapp/app/entities/ficha-trimestre/ficha-trimestre-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/ficha-trimestre/ficha-trimestre-detail.tsx","webpack:///./src/main/webapp/app/entities/ficha-trimestre/ficha-trimestre-update.tsx","webpack:///./src/main/webapp/app/entities/ficha-trimestre/ficha-trimestre.reducer.ts","webpack:///./src/main/webapp/app/entities/ficha-trimestre/ficha-trimestre.tsx","webpack:///./src/main/webapp/app/entities/ficha-trimestre/index.tsx","webpack:///./src/main/webapp/app/entities/ficha/ficha-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/ficha/ficha-detail.tsx","webpack:///./src/main/webapp/app/entities/ficha/ficha-update.tsx","webpack:///./src/main/webapp/app/entities/ficha/ficha.reducer.ts","webpack:///./src/main/webapp/app/entities/ficha/ficha.tsx","webpack:///./src/main/webapp/app/entities/ficha/index.tsx","webpack:///./src/main/webapp/app/entities/horario/horario-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/horario/horario-detail.tsx","webpack:///./src/main/webapp/app/entities/horario/horario-update.tsx","webpack:///./src/main/webapp/app/entities/horario/horario.reducer.ts","webpack:///./src/main/webapp/app/entities/horario/horario.tsx","webpack:///./src/main/webapp/app/entities/horario/index.tsx","webpack:///./src/main/webapp/app/entities/index.tsx","webpack:///./src/main/webapp/app/entities/instructor/index.tsx","webpack:///./src/main/webapp/app/entities/instructor/instructor-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/instructor/instructor-detail.tsx","webpack:///./src/main/webapp/app/entities/instructor/instructor-update.tsx","webpack:///./src/main/webapp/app/entities/instructor/instructor.reducer.ts","webpack:///./src/main/webapp/app/entities/instructor/instructor.tsx","webpack:///./src/main/webapp/app/entities/jornada-instructor/index.tsx","webpack:///./src/main/webapp/app/entities/jornada-instructor/jornada-instructor-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/jornada-instructor/jornada-instructor-detail.tsx","webpack:///./src/main/webapp/app/entities/jornada-instructor/jornada-instructor-update.tsx","webpack:///./src/main/webapp/app/entities/jornada-instructor/jornada-instructor.reducer.ts","webpack:///./src/main/webapp/app/entities/jornada-instructor/jornada-instructor.tsx","webpack:///./src/main/webapp/app/entities/jornada/index.tsx","webpack:///./src/main/webapp/app/entities/jornada/jornada-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/jornada/jornada-detail.tsx","webpack:///./src/main/webapp/app/entities/jornada/jornada-update.tsx","webpack:///./src/main/webapp/app/entities/jornada/jornada.reducer.ts","webpack:///./src/main/webapp/app/entities/jornada/jornada.tsx","webpack:///./src/main/webapp/app/entities/limitacion-ambiente/index.tsx","webpack:///./src/main/webapp/app/entities/limitacion-ambiente/limitacion-ambiente-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/limitacion-ambiente/limitacion-ambiente-detail.tsx","webpack:///./src/main/webapp/app/entities/limitacion-ambiente/limitacion-ambiente-update.tsx","webpack:///./src/main/webapp/app/entities/limitacion-ambiente/limitacion-ambiente.reducer.ts","webpack:///./src/main/webapp/app/entities/limitacion-ambiente/limitacion-ambiente.tsx","webpack:///./src/main/webapp/app/entities/modalidad/index.tsx","webpack:///./src/main/webapp/app/entities/modalidad/modalidad-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/modalidad/modalidad-detail.tsx","webpack:///./src/main/webapp/app/entities/modalidad/modalidad-update.tsx","webpack:///./src/main/webapp/app/entities/modalidad/modalidad.reducer.ts","webpack:///./src/main/webapp/app/entities/modalidad/modalidad.tsx","webpack:///./src/main/webapp/app/entities/nivel-formacion/index.tsx","webpack:///./src/main/webapp/app/entities/nivel-formacion/nivel-formacion-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/nivel-formacion/nivel-formacion-detail.tsx","webpack:///./src/main/webapp/app/entities/nivel-formacion/nivel-formacion-update.tsx","webpack:///./src/main/webapp/app/entities/nivel-formacion/nivel-formacion.reducer.ts","webpack:///./src/main/webapp/app/entities/nivel-formacion/nivel-formacion.tsx","webpack:///./src/main/webapp/app/entities/planeacion-actividad/index.tsx","webpack:///./src/main/webapp/app/entities/planeacion-actividad/planeacion-actividad-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/planeacion-actividad/planeacion-actividad-detail.tsx","webpack:///./src/main/webapp/app/entities/planeacion-actividad/planeacion-actividad-update.tsx","webpack:///./src/main/webapp/app/entities/planeacion-actividad/planeacion-actividad.reducer.ts","webpack:///./src/main/webapp/app/entities/planeacion-actividad/planeacion-actividad.tsx","webpack:///./src/main/webapp/app/entities/planeacion-trimestre/index.tsx","webpack:///./src/main/webapp/app/entities/planeacion-trimestre/planeacion-trimestre-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/planeacion-trimestre/planeacion-trimestre-detail.tsx","webpack:///./src/main/webapp/app/entities/planeacion-trimestre/planeacion-trimestre-update.tsx","webpack:///./src/main/webapp/app/entities/planeacion-trimestre/planeacion-trimestre.reducer.ts","webpack:///./src/main/webapp/app/entities/planeacion-trimestre/planeacion-trimestre.tsx","webpack:///./src/main/webapp/app/entities/planeacion/index.tsx","webpack:///./src/main/webapp/app/entities/planeacion/planeacion-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/planeacion/planeacion-detail.tsx","webpack:///./src/main/webapp/app/entities/planeacion/planeacion-update.tsx","webpack:///./src/main/webapp/app/entities/planeacion/planeacion.reducer.ts","webpack:///./src/main/webapp/app/entities/planeacion/planeacion.tsx","webpack:///./src/main/webapp/app/entities/programa/index.tsx","webpack:///./src/main/webapp/app/entities/programa/programa-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/programa/programa-detail.tsx","webpack:///./src/main/webapp/app/entities/programa/programa-update.tsx","webpack:///./src/main/webapp/app/entities/programa/programa.reducer.ts","webpack:///./src/main/webapp/app/entities/programa/programa.tsx","webpack:///./src/main/webapp/app/entities/proyecto/index.tsx","webpack:///./src/main/webapp/app/entities/proyecto/proyecto-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/proyecto/proyecto-detail.tsx","webpack:///./src/main/webapp/app/entities/proyecto/proyecto-update.tsx","webpack:///./src/main/webapp/app/entities/proyecto/proyecto.reducer.ts","webpack:///./src/main/webapp/app/entities/proyecto/proyecto.tsx","webpack:///./src/main/webapp/app/entities/resultado-aprendizaje/index.tsx","webpack:///./src/main/webapp/app/entities/resultado-aprendizaje/resultado-aprendizaje-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/resultado-aprendizaje/resultado-aprendizaje-detail.tsx","webpack:///./src/main/webapp/app/entities/resultado-aprendizaje/resultado-aprendizaje-update.tsx","webpack:///./src/main/webapp/app/entities/resultado-aprendizaje/resultado-aprendizaje.reducer.ts","webpack:///./src/main/webapp/app/entities/resultado-aprendizaje/resultado-aprendizaje.tsx","webpack:///./src/main/webapp/app/entities/resultados-vistos/index.tsx","webpack:///./src/main/webapp/app/entities/resultados-vistos/resultados-vistos-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/resultados-vistos/resultados-vistos-detail.tsx","webpack:///./src/main/webapp/app/entities/resultados-vistos/resultados-vistos-update.tsx","webpack:///./src/main/webapp/app/entities/resultados-vistos/resultados-vistos.reducer.ts","webpack:///./src/main/webapp/app/entities/resultados-vistos/resultados-vistos.tsx","webpack:///./src/main/webapp/app/entities/sede/index.tsx","webpack:///./src/main/webapp/app/entities/sede/sede-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/sede/sede-detail.tsx","webpack:///./src/main/webapp/app/entities/sede/sede-update.tsx","webpack:///./src/main/webapp/app/entities/sede/sede.reducer.ts","webpack:///./src/main/webapp/app/entities/sede/sede.tsx","webpack:///./src/main/webapp/app/entities/tipo-ambiente/index.tsx","webpack:///./src/main/webapp/app/entities/tipo-ambiente/tipo-ambiente-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/tipo-ambiente/tipo-ambiente-detail.tsx","webpack:///./src/main/webapp/app/entities/tipo-ambiente/tipo-ambiente-update.tsx","webpack:///./src/main/webapp/app/entities/tipo-ambiente/tipo-ambiente.reducer.ts","webpack:///./src/main/webapp/app/entities/tipo-ambiente/tipo-ambiente.tsx","webpack:///./src/main/webapp/app/entities/trimestre-vigente/index.tsx","webpack:///./src/main/webapp/app/entities/trimestre-vigente/trimestre-vigente-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/trimestre-vigente/trimestre-vigente-detail.tsx","webpack:///./src/main/webapp/app/entities/trimestre-vigente/trimestre-vigente-update.tsx","webpack:///./src/main/webapp/app/entities/trimestre-vigente/trimestre-vigente.reducer.ts","webpack:///./src/main/webapp/app/entities/trimestre-vigente/trimestre-vigente.tsx","webpack:///./src/main/webapp/app/entities/trimestre/index.tsx","webpack:///./src/main/webapp/app/entities/trimestre/trimestre-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/trimestre/trimestre-detail.tsx","webpack:///./src/main/webapp/app/entities/trimestre/trimestre-update.tsx","webpack:///./src/main/webapp/app/entities/trimestre/trimestre.reducer.ts","webpack:///./src/main/webapp/app/entities/trimestre/trimestre.tsx","webpack:///./src/main/webapp/app/entities/version-horario/index.tsx","webpack:///./src/main/webapp/app/entities/version-horario/version-horario-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/version-horario/version-horario-detail.tsx","webpack:///./src/main/webapp/app/entities/version-horario/version-horario-update.tsx","webpack:///./src/main/webapp/app/entities/version-horario/version-horario.reducer.ts","webpack:///./src/main/webapp/app/entities/version-horario/version-horario.tsx","webpack:///./src/main/webapp/app/entities/vinculacion-instructor/index.tsx","webpack:///./src/main/webapp/app/entities/vinculacion-instructor/vinculacion-instructor-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/vinculacion-instructor/vinculacion-instructor-detail.tsx","webpack:///./src/main/webapp/app/entities/vinculacion-instructor/vinculacion-instructor-update.tsx","webpack:///./src/main/webapp/app/entities/vinculacion-instructor/vinculacion-instructor.reducer.ts","webpack:///./src/main/webapp/app/entities/vinculacion-instructor/vinculacion-instructor.tsx","webpack:///./src/main/webapp/app/entities/vinculacion/index.tsx","webpack:///./src/main/webapp/app/entities/vinculacion/vinculacion-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/vinculacion/vinculacion-detail.tsx","webpack:///./src/main/webapp/app/entities/vinculacion/vinculacion-update.tsx","webpack:///./src/main/webapp/app/entities/vinculacion/vinculacion.reducer.ts","webpack:///./src/main/webapp/app/entities/vinculacion/vinculacion.tsx","webpack:///./src/main/webapp/app/index.tsx","webpack:///./src/main/webapp/app/modules/account/activate/activate.reducer.ts","webpack:///./src/main/webapp/app/modules/account/activate/activate.tsx","webpack:///./src/main/webapp/app/modules/account/password-reset/finish/password-reset-finish.tsx","webpack:///./src/main/webapp/app/modules/account/password-reset/init/password-reset-init.tsx","webpack:///./src/main/webapp/app/modules/account/password-reset/password-reset.reducer.ts","webpack:///./src/main/webapp/app/modules/account/password/password.reducer.ts","webpack:///./src/main/webapp/app/modules/account/register/register.reducer.ts","webpack:///./src/main/webapp/app/modules/account/register/register.tsx","webpack:///./src/main/webapp/app/modules/account/settings/settings.reducer.ts","webpack:///./src/main/webapp/app/modules/administration/administration.reducer.ts","webpack:///./src/main/webapp/app/modules/administration/user-management/user-management.reducer.ts","webpack:///./src/main/webapp/app/modules/home/ghostRegistroCss.css?54f8","webpack:///./src/main/webapp/app/modules/home/home.css?07e9","webpack:///./src/main/webapp/app/modules/home/home.tsx","webpack:///./src/main/webapp/app/modules/login/login-modal.tsx","webpack:///./src/main/webapp/app/modules/login/login.tsx","webpack:///./src/main/webapp/app/modules/login/logout.tsx","webpack:///./src/main/webapp/app/routes.tsx","webpack:///./src/main/webapp/app/shared/auth/private-route.tsx","webpack:///./src/main/webapp/app/shared/error/error-boundary-route.tsx","webpack:///./src/main/webapp/app/shared/error/error-boundary.tsx","webpack:///./src/main/webapp/app/shared/layout/footer/footer.css?b323","webpack:///./src/main/webapp/app/shared/layout/footer/footer.tsx","webpack:///./src/main/webapp/app/shared/layout/header/header-components.tsx","webpack:///./src/main/webapp/app/shared/layout/header/header.css?1e42","webpack:///./src/main/webapp/app/shared/layout/header/header.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/account.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/admin.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/entities.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/index.ts","webpack:///./src/main/webapp/app/shared/layout/header/menus/instructor.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/lider.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/lider01.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/lider02.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/lider03.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/lider04.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/locale.tsx","webpack:///./src/main/webapp/app/shared/layout/password/password-strength-bar.css?1af0","webpack:///./src/main/webapp/app/shared/layout/password/password-strength-bar.tsx","webpack:///./src/main/webapp/app/shared/model/actividad-proyecto.model.ts","webpack:///./src/main/webapp/app/shared/model/ambiente.model.ts","webpack:///./src/main/webapp/app/shared/model/anio.model.ts","webpack:///./src/main/webapp/app/shared/model/area-instructor.model.ts","webpack:///./src/main/webapp/app/shared/model/area.model.ts","webpack:///./src/main/webapp/app/shared/model/cliente.model.ts","webpack:///./src/main/webapp/app/shared/model/competencia.model.ts","webpack:///./src/main/webapp/app/shared/model/dia-jornada.model.ts","webpack:///./src/main/webapp/app/shared/model/dia.model.ts","webpack:///./src/main/webapp/app/shared/model/disponibilidad-competencias.model.ts","webpack:///./src/main/webapp/app/shared/model/disponibilidad-horaria.model.ts","webpack:///./src/main/webapp/app/shared/model/documento.model.ts","webpack:///./src/main/webapp/app/shared/model/estado-ficha.model.ts","webpack:///./src/main/webapp/app/shared/model/fase-proyecto.model.ts","webpack:///./src/main/webapp/app/shared/model/ficha-trimestre.model.ts","webpack:///./src/main/webapp/app/shared/model/ficha.model.ts","webpack:///./src/main/webapp/app/shared/model/horario.model.ts","webpack:///./src/main/webapp/app/shared/model/instructor.model.ts","webpack:///./src/main/webapp/app/shared/model/jornada-instructor.model.ts","webpack:///./src/main/webapp/app/shared/model/jornada.model.ts","webpack:///./src/main/webapp/app/shared/model/limitacion-ambiente.model.ts","webpack:///./src/main/webapp/app/shared/model/modalidad.model.ts","webpack:///./src/main/webapp/app/shared/model/nivel-formacion.model.ts","webpack:///./src/main/webapp/app/shared/model/planeacion-actividad.model.ts","webpack:///./src/main/webapp/app/shared/model/planeacion-trimestre.model.ts","webpack:///./src/main/webapp/app/shared/model/planeacion.model.ts","webpack:///./src/main/webapp/app/shared/model/programa.model.ts","webpack:///./src/main/webapp/app/shared/model/proyecto.model.ts","webpack:///./src/main/webapp/app/shared/model/resultado-aprendizaje.model.ts","webpack:///./src/main/webapp/app/shared/model/resultados-vistos.model.ts","webpack:///./src/main/webapp/app/shared/model/sede.model.ts","webpack:///./src/main/webapp/app/shared/model/tipo-ambiente.model.ts","webpack:///./src/main/webapp/app/shared/model/trimestre-vigente.model.ts","webpack:///./src/main/webapp/app/shared/model/trimestre.model.ts","webpack:///./src/main/webapp/app/shared/model/user.model.ts","webpack:///./src/main/webapp/app/shared/model/version-horario.model.ts","webpack:///./src/main/webapp/app/shared/model/vinculacion-instructor.model.ts","webpack:///./src/main/webapp/app/shared/model/vinculacion.model.ts","webpack:///./src/main/webapp/app/shared/reducers/action-type.util.ts","webpack:///./src/main/webapp/app/shared/reducers/application-profile.ts","webpack:///./src/main/webapp/app/shared/reducers/authentication.ts","webpack:///./src/main/webapp/app/shared/reducers/index.ts","webpack:///./src/main/webapp/app/shared/reducers/locale.ts","webpack:///./src/main/webapp/app/shared/util/date-utils.ts","webpack:///./src/main/webapp/app/shared/util/entity-utils.ts","webpack:///./src/main/webapp/app/shared/util/pagination.constants.ts","webpack:///readable-stream (ignored)","webpack:///supports-color (ignored)","webpack:///chalk (ignored)","webpack:///fs (ignored)"],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\tif (null) script.crossOrigin = null;\n \t\tdocument.head.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentHash = \"cf3f8fe1f3a882e2976e\";\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule;\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParents = [];\n \t// eslint-disable-next-line no-unused-vars\n \tvar hotCurrentParentsTemp = [];\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (dep === undefined) hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (dep === undefined) hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t// eslint-disable-next-line no-lone-blocks\n \t\t\t{\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"app/\" + chunkId + \".chunk.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!bootstrap/dist/css/bootstrap.min.css\"), \"\");\n\n// module\nexports.push([module.id, \"/* ==============================================================\\r\\nBootstrap tweaks\\r\\n===============================================================*/\\r\\n\\r\\nbody,\\r\\nh1,\\r\\nh2,\\r\\nh3,\\r\\nh4 {\\r\\n  font-weight: 300;\\r\\n}\\r\\n\\r\\nbody {\\r\\n    background-color: #fff!important;}\\r\\na {\\r\\n  color: #fdffe3;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nBrowser Upgrade Prompt\\r\\n========================================================================== */\\r\\n.browserupgrade {\\r\\n  margin: 0.2em 0;\\r\\n  background: #7500cc;\\r\\n  color: #000;\\r\\n  padding: 0.2em 0;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nGeneric styles\\r\\n========================================================================== */\\r\\n\\r\\n/* Temporary workaround for availity-reactstrap-validation */\\r\\n.invalid-feedback {\\r\\n  display: inline;\\r\\n}\\r\\n\\r\\n/* other generic styles */\\r\\n\\r\\n.jh-card {\\r\\n  padding: 1.5%;\\r\\n  margin-top: 20px;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.error {\\r\\n  color: white;\\r\\n  background-color: #ff8c30;\\r\\n}\\r\\n\\r\\n.pad {\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n.w-40 {\\r\\n  width: 40% !important;\\r\\n}\\r\\n\\r\\n.w-60 {\\r\\n  width: 60% !important;\\r\\n}\\r\\n\\r\\n.break {\\r\\n  white-space: normal;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\n.preserve-space {\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.readonly {\\r\\n  background-color: #85deee;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n  border-top: 1px solid rgba(0, 0, 0, 0.125);\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nmake sure browsers use the pointer cursor for anchors, even with no href\\r\\n========================================================================== */\\r\\na:hover {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.hand,\\r\\n[jhisortby] {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nCustom alerts for notification\\r\\n========================================================================== */\\r\\n.alerts .alert {\\r\\n  text-overflow: ellipsis;\\r\\n}\\r\\n.alert pre {\\r\\n  background: none;\\r\\n  border: none;\\r\\n  font: inherit;\\r\\n  color: inherit;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n.alert .popover pre {\\r\\n  font-size: 10px;\\r\\n}\\r\\n\\r\\n.alerts .toast {\\r\\n  position: fixed;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.alerts .toast.left {\\r\\n  left: 5px;\\r\\n}\\r\\n\\r\\n.alerts .toast.right {\\r\\n  right: 5px;\\r\\n}\\r\\n\\r\\n.alerts .toast.top {\\r\\n  top: 55px;\\r\\n}\\r\\n\\r\\n.alerts .toast.bottom {\\r\\n  bottom: 55px;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 480px) {\\r\\n  .alerts .toast {\\r\\n    width: 50%;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nentity tables helpers\\r\\n========================================================================== */\\r\\n/* Remove Bootstrap padding from the element\\r\\nhttp://stackoverflow.com/questions/19562903/remove-padding-from-columns-in-bootstrap-3 */\\r\\n.no-padding-left {\\r\\n  padding-left: 0 !important;\\r\\n}\\r\\n.no-padding-right {\\r\\n  padding-right: 0 !important;\\r\\n}\\r\\n.no-padding-top {\\r\\n  padding-top: 0 !important;\\r\\n}\\r\\n.no-padding-bottom {\\r\\n  padding-bottom: 0 !important;\\r\\n}\\r\\n.no-padding {\\r\\n  padding: 0 !important;\\r\\n}\\r\\n\\r\\n/* bootstrap 3 input-group 100% width\\r\\nhttp://stackoverflow.com/questions/23436430/bootstrap-3-input-group-100-width */\\r\\n.width-min {\\r\\n  width: 1% !important;\\r\\n}\\r\\n\\r\\n/* Fix checkbox alignment\\r\\nhttps://github.com/jhipster/generator-jhipster/issues/8463 */\\r\\n.form-check-input {\\r\\n  margin-top: -0.5rem;\\r\\n}\\r\\n\\r\\n/* Makes toolbar not wrap on smaller screens\\r\\nhttp://www.sketchingwithcss.com/samplechapter/cheatsheet.html#right */\\r\\n.flex-btn-group-container {\\r\\n  display: -webkit-flex;\\r\\n  display: flex;\\r\\n  -webkit-flex-direction: row;\\r\\n  flex-direction: row;\\r\\n  -webkit-justify-content: flex-end;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nentity detail page css\\r\\n========================================================================== */\\r\\n.row.jh-entity-details > dd {\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 768px) {\\r\\n  .row.jh-entity-details > dt {\\r\\n    margin-bottom: 15px;\\r\\n  }\\r\\n\\r\\n  .row.jh-entity-details > dd {\\r\\n    border-bottom: 1px solid #eee;\\r\\n    padding-left: 180px;\\r\\n    margin-left: 0;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nui bootstrap tweaks\\r\\n========================================================================== */\\r\\n.nav,\\r\\n.pagination,\\r\\n.carousel,\\r\\n.card-title a {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.datetime-picker-dropdown > li.date-picker-menu div > table .btn-secondary,\\r\\n.uib-datepicker-popup > li > div.uib-datepicker > table .btn-secondary {\\r\\n  border: 0;\\r\\n}\\r\\n\\r\\n.datetime-picker-dropdown > li.date-picker-menu div > table:focus,\\r\\n.uib-datepicker-popup > li > div.uib-datepicker > table:focus {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.thread-dump-modal-lock {\\r\\n  max-width: 450px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  white-space: nowrap;\\r\\n}\\r\\n\\r\\n/* jhipster-needle-css-add-main JHipster will add new css style */\\r\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6,\\r\\npre, form, fieldset, input, textarea, p, blockquote, th, td {\\r\\n    padding:0;\\r\\n    margin:1;}\\r\\n\\r\\nfieldset, img {border:0}\\r\\n\\r\\nol, ul, li {list-style:none}\\r\\n\\r\\n:focus {outline:none}\\r\\n\\r\\nbody {\\r\\n    background-color: #120CFF;\\r\\n\\r\\n}\\r\\ninput,\\r\\ntextarea,\\r\\nselect {\\r\\n    font-family: 'Open Sans', sans-serif;\\r\\n    font-size: 16px;\\r\\n    color: #4c4c4c;\\r\\n}\\r\\n\\r\\np {\\r\\n    font-size: 12px;\\r\\n    width: 150px;\\r\\n    display: inline-block;\\r\\n    margin-left: 18px;\\r\\n}\\r\\nh1 {\\r\\n    font-size: 32px;\\r\\n    font-weight: 300;\\r\\n    color: #4c4c4c;\\r\\n    text-align: center;\\r\\n    padding-top: 10px;\\r\\n    margin-bottom: 10px;\\r\\n}\\r\\n\\r\\nhtml{\\r\\n    background-color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.cajaTexto {\\r\\n    position: relative;\\r\\n    margin: 20px auto;\\r\\n    width: 657px;\\r\\n    height: 524px;\\r\\n    -webkit-border-radius: 8px/7px;\\r\\n    -moz-border-radius: 8px/7px;\\r\\n    border-radius: 8px/7px;\\r\\n    background-color: #ebebeb;\\r\\n    -webkit-box-shadow: 1px 2px 5px rgba(0,0,0,.31);\\r\\n    -moz-box-shadow: 1px 2px 5px rgba(0,0,0,.31);\\r\\n    box-shadow: 1px 2px 5px rgba(0,0,0,.31);\\r\\n    border: solid 1px #cbc9c9;\\r\\n    right: -1px;\\r\\n    top: -190px;\\r\\n}\\r\\n.cajaTexto2a {\\r\\n    position: relative;\\r\\n    margin: 20px auto;\\r\\n    width: 657px;\\r\\n    height: 724px;\\r\\n    -webkit-border-radius: 8px/7px;\\r\\n    -moz-border-radius: 8px/7px;\\r\\n    border-radius: 8px/7px;\\r\\n    background-color: #ebebeb;\\r\\n    -webkit-box-shadow: 1px 2px 5px rgba(0,0,0,.31);\\r\\n    -moz-box-shadow: 1px 2px 5px rgba(0,0,0,.31);\\r\\n    box-shadow: 1px 2px 5px rgba(0,0,0,.31);\\r\\n    border: solid 1px #cbc9c9;\\r\\n    right: -11px;\\r\\n    top: -190px;\\r\\n}\\r\\n.cajaTexto2 {\\r\\n    position: relative;\\r\\n    background: white;  /*  #88b7d5  */\\r\\n    border: 4px solid #c2e1f5;\\r\\n    z-index: 600;\\r\\n    font-family: \\\"trebuchet MS\\\", sans-serif;\\r\\n    padding: 5px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    text-align: center;\\r\\n    display: none;\\r\\n    width: 425px;\\r\\n    height: 100px;\\r\\n    right: -191px;\\r\\n    top: -190px;\\r\\n}\\r\\n.asiento01 {\\r\\n{\\r\\n    position: relative;\\r\\n    background: white;  /*  #88b7d5  */\\r\\n    border: 4px solid #c2e1f5;\\r\\n    z-index: 600;\\r\\n    font-family: \\\"trebuchet MS\\\", sans-serif;\\r\\n    padding: 5px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    text-align: left;\\r\\n    display: none;\\r\\n    width: 325px;\\r\\n    right: -91px;\\r\\n    top: -53px;\\r\\n}\\r\\n}\\r\\n.arrow_box2 {\\r\\n    position: relative;\\r\\n    background: white;  /*  #88b7d5  */\\r\\n    border: 4px solid #c2e1f5;\\r\\n    z-index: 600;\\r\\n    font-family: \\\"trebuchet MS\\\", sans-serif;\\r\\n    padding: 5px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    text-align: left;\\r\\n    display: none;\\r\\n    width: 265px;\\r\\n    right: -999px;\\r\\n    top: -193px;\\r\\n}\\r\\n\\r\\n/*.arrow_box2:after, .arrow_box2:before {\\r\\n  right: 100%;\\r\\n  top: 30%;\\r\\n  border: solid transparent;\\r\\n  content: \\\" \\\";\\r\\n  height: 0;\\r\\n  width: 0;\\r\\n  position: absolute;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n.arrow_box2:after {\\r\\n  border-color: rgba(136, 183, 213, 0);\\r\\n  border-right-color: #c2e1f5;\\r\\n  border-width: 28px;\\r\\n  margin-top: -16px;\\r\\n}\\r\\n.arrow_box2:before {\\r\\n  border-color: rgba(194, 225, 245, 0);\\r\\n  border-right-color: #c2e1f5;\\r\\n  border-width: -61px;\\r\\n  margin-top: -30px;\\r\\n}\\r\\n\\r\\n.arrow_com_extra2 {\\r\\n  top: -45px;\\r\\n  right: 370px;\\r\\n}\\r\\n\\r\\n*/\\r\\n\\r\\n.arrow_box {\\r\\n    position: relative;\\r\\n    background: white;  /*  #88b7d5  */\\r\\n    border: 4px solid #c2e1f5;\\r\\n    z-index: 600;\\r\\n    font-family: \\\"trebuchet MS\\\", sans-serif;\\r\\n    padding: 5px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n    text-align: left;\\r\\n    display: none;\\r\\n    width: 325px;\\r\\n    right: -91px;\\r\\n    top: -53px;\\r\\n}\\r\\n\\r\\n.arrow_box:after, .arrow_box:before {\\r\\n    right: 100%;\\r\\n    top: 30%;\\r\\n    border: solid transparent;\\r\\n    content: \\\" \\\";\\r\\n    height: 0;\\r\\n    width: 0;\\r\\n    position: absolute;\\r\\n    pointer-events: none;\\r\\n}\\r\\n\\r\\n.arrow_box:after {\\r\\n    border-color: rgba(136, 183, 213, 0);\\r\\n    border-right-color: #c2e1f5;\\r\\n    border-width: 28px;\\r\\n    margin-top: -16px;\\r\\n}\\r\\n.arrow_box:before {\\r\\n    border-color: rgba(194, 225, 245, 0);\\r\\n    border-right-color: #c2e1f5;\\r\\n    border-width: -61px;\\r\\n    margin-top: -30px;\\r\\n}\\r\\n\\r\\n.arrow_com_extra {\\r\\n    top: -45px;\\r\\n    right: 370px;\\r\\n}\\r\\n\\r\\n.pop_window {\\r\\n    POSITION: relative;\\r\\n    width: 50px;\\r\\n    height: 30px;\\r\\n    padding: 5px;\\r\\n    BORDER: #6a7faa 3px solid;\\r\\n    BACKGROUND-COLOR: white;\\r\\n    z-index: 100;\\r\\n    bottom: 0.75em;\\r\\n    /*DISPLAY: none;*/\\r\\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n.mem_container, .com_container, .com_container_mem {\\r\\n    position: relative;\\r\\n    /* border: 1px solid gray;  */\\r\\n}\\r\\n\\r\\n.com_container {\\r\\n    padding-bottom: 20px;\\r\\n    padding-top: 20px;\\r\\n    width: 30%;\\r\\n    border-color: #E10000;\\r\\n    background-color: #21E321;\\r\\n}\\r\\n\\r\\n.com_container_mem {\\r\\n    display: inline;\\r\\n}\\r\\n.posicionRelativa {\\r\\n    position: sticky;\\r\\n\\r\\n}\\r\\n.menu1 {\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    width: 810px;\\r\\n    height: 57px;\\r\\n    list-style: none;\\r\\n    /*background-image: url(file:///C:/Users/zrgznk/Documents/archivos/proyecto/paginaGhost/img/fondoCabecera.png);\\r\\n    */background-repeat: no-repeat;\\r\\n\\r\\n    padding-top: 51px;\\r\\n    clear: both;\\r\\n    /*position: relative;*/\\r\\n    top: 35px;\\r\\n\\r\\n}\\r\\n.menu2 {\\r\\n    align-self: center;\\r\\n    width: 110px;\\r\\n    height: 27px;\\r\\n    list-style: none;\\r\\n    /*background-image: url(file:///C:/Users/zrgznk/Documents/archivos/proyecto/paginaGhost/img/fondoCabecera.png);\\r\\n    */background-repeat: no-repeat;\\r\\n    padding-left: 5px;\\r\\n    padding-top: 1px;\\r\\n    clear: both;\\r\\n    position: relative;\\r\\n    top: 15px;\\r\\n\\r\\n}\\r\\n.menu3 {\\r\\n    align-self: center;\\r\\n    width:  10px;\\r\\n    height: 17px;\\r\\n    list-style: none;\\r\\n\\r\\n    background-repeat: no-repeat;\\r\\n    padding-left: 250px;\\r\\n    padding-top: 1px;\\r\\n    clear: both;\\r\\n    position: relative;\\r\\n    top: 15px;\\r\\n\\r\\n}\\r\\n.cajaTexto2 {\\r\\n    margin: 20px auto;\\r\\n    width: 400px;\\r\\n    height: 450px;\\r\\n    -webkit-border-radius: 8px/7px;\\r\\n    -moz-border-radius: 8px/7px;\\r\\n    border-radius: 8px/7px;\\r\\n    background-color: #ebebeb;\\r\\n    -webkit-box-shadow: 1px 2px 5px rgba(0,0,0,.31);\\r\\n    -moz-box-shadow: 1px 2px 5px rgba(0,0,0,.31);\\r\\n    box-shadow: 1px 2px 5px rgba(0,0,0,.31);\\r\\n    border: solid 1px #cbc9c9;\\r\\n}\\r\\n\\r\\ninput[type=radio] {\\r\\n    visibility: hidden;\\r\\n}\\r\\n\\r\\nform{\\r\\n    margin: 0 30px;\\r\\n}\\r\\n\\r\\nlabel.radio {\\r\\n    cursor: pointer;\\r\\n    text-indent: 35px;\\r\\n    overflow: visible;\\r\\n    display: inline-block;\\r\\n    position: relative;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\nlabel.radio:before {\\r\\n    background: #3a57af;\\r\\n    content:'';\\r\\n    position: absolute;\\r\\n    top:2px;\\r\\n    left: 0;\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    border-radius: 100%;\\r\\n}\\r\\n\\r\\nlabel.radio:after {\\r\\n    opacity: 0;\\r\\n    content: '';\\r\\n    position: absolute;\\r\\n    width: 0.5em;\\r\\n    height: 0.25em;\\r\\n    background: transparent;\\r\\n    top: 7.5px;\\r\\n    left: 4.5px;\\r\\n    border: 3px solid #ffffff;\\r\\n    border-top: none;\\r\\n    border-right: none;\\r\\n\\r\\n    -webkit-transform: rotate(-45deg);\\r\\n    -moz-transform: rotate(-45deg);\\r\\n    -o-transform: rotate(-45deg);\\r\\n    -ms-transform: rotate(-45deg);\\r\\n    transform: rotate(-45deg);\\r\\n}\\r\\n\\r\\ninput[type=radio]:checked + label:after {\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\nhr{\\r\\n    color: #a9a9a9;\\r\\n    opacity: 0.3;\\r\\n}\\r\\n\\r\\ninput[type=text],input[type=password]{\\r\\n    width: 200px;\\r\\n    height: 39px;\\r\\n    -webkit-border-radius: 0px 4px 4px 0px/5px 5px 4px 4px;\\r\\n    -moz-border-radius: 0px 4px 4px 0px/0px 0px 4px 4px;\\r\\n    border-radius: 0px 4px 4px 0px/5px 5px 4px 4px;\\r\\n    background-color: #fff;\\r\\n    -webkit-box-shadow: 1px 2px 5px rgba(0,0,0,.09);\\r\\n    -moz-box-shadow: 1px 2px 5px rgba(0,0,0,.09);\\r\\n    box-shadow: 1px 2px 5px rgba(0,0,0,.09);\\r\\n    border: solid 1px #cbc9c9;\\r\\n    margin-left: -5px;\\r\\n    margin-top: 13px;\\r\\n    padding-left: 10px;\\r\\n}\\r\\n\\r\\ninput[type=password]{\\r\\n    margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n#icon {\\r\\n    display: inline-block;\\r\\n    width: 30px;\\r\\n    background-color: #3a57af;\\r\\n    padding: 8px 0px 8px 15px;\\r\\n    margin-left: 15px;\\r\\n    -webkit-border-radius: 4px 0px 0px 4px;\\r\\n    -moz-border-radius: 4px 0px 0px 4px;\\r\\n    border-radius: 4px 0px 0px 4px;\\r\\n    color: white;\\r\\n    -webkit-box-shadow: 1px 2px 5px rgba(0,0,0,.09);\\r\\n    -moz-box-shadow: 1px 2px 5px rgba(0,0,0,.09);\\r\\n    box-shadow: 1px 2px 5px rgba(0,0,0,.09);\\r\\n    border: solid 0px #cbc9c9;\\r\\n}\\r\\n\\r\\n.genero {\\r\\n    margin-left: 30px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.accounttype{\\r\\n    margin-left: 8px;\\r\\n    margin-top: 20px;\\r\\n}\\r\\n\\r\\na.button {\\r\\n    font-size: 14px;\\r\\n    font-weight: 600;\\r\\n    color: white;\\r\\n    padding: 6px 25px 0px 20px;\\r\\n    margin: 10px 8px 20px 0px;\\r\\n    display: inline-block;\\r\\n    float: right;\\r\\n    text-decoration: underline;\\r\\n    width: 50px; height: 27px;\\r\\n    -webkit-border-radius: 5px;\\r\\n    -moz-border-radius: 5px;\\r\\n    border-radius: 5px;\\r\\n    background-color: #3a57af;\\r\\n    -webkit-box-shadow: 0 3px rgba(58,87,175,.75);\\r\\n    -moz-box-shadow: 0 3px rgba(58,87,175,.75);\\r\\n    box-shadow: 0 3px rgba(58,87,175,.75);\\r\\n    transition: all 0.1s linear 0s;\\r\\n    top: 0px;\\r\\n    position: relative;\\r\\n}\\r\\n\\r\\na.button:hover {\\r\\n    top: 3px;\\r\\n    background-color:#2e458b;\\r\\n    -webkit-box-shadow: none;\\r\\n    -moz-box-shadow: none;\\r\\n    box-shadow: none;\\r\\n\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ==========================================================================\\r\\nMain page styles\\r\\n========================================================================== */\\r\\n.hipster {\\r\\n  display: inline-block;\\r\\n  width: 100%;\\r\\n  height: 497px;\\r\\n    /* background: url('../../../static/images/logo-jhipster.png') no-repeat center top;->*/\\r\\n\\r\\n  background-size: contain;\\r\\n\\r\\n}\\r\\n\\r\\n.navbar {\\r\\n    background: #000000;\\r\\n\\r\\n\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".footer {\\r\\n  height: 0px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ==========================================================================\\r\\nDevelopement Ribbon\\r\\n========================================================================== */\\r\\n.ribbon {\\r\\n  background-color: rgba(170, 0, 0, 0.5);\\r\\n  left: -3.5em;\\r\\n  -moz-transform: rotate(-45deg);\\r\\n  -ms-transform: rotate(-45deg);\\r\\n  -o-transform: rotate(-45deg);\\r\\n  -webkit-transform: rotate(-45deg);\\r\\n  transform: rotate(-45deg);\\r\\n  overflow: hidden;\\r\\n  position: absolute;\\r\\n  top: 30px;\\r\\n  white-space: nowrap;\\r\\n  width: 15em;\\r\\n  z-index: 99999;\\r\\n  pointer-events: none;\\r\\n  opacity: 0.75;\\r\\n}\\r\\n.ribbon a {\\r\\n  color: #fff;\\r\\n  display: block;\\r\\n  font-weight: 400;\\r\\n  margin: 1px 0;\\r\\n  padding: 10px 50px;\\r\\n  text-align: center;\\r\\n  text-decoration: none;\\r\\n  text-shadow: 0 0 5px #444;\\r\\n  pointer-events: none;\\r\\n}\\r\\n/* ==========================================================================\\r\\nNavbar styles\\r\\n========================================================================== */\\r\\n.jh-navbar {\\r\\n  background-color: #353d47;\\r\\n  padding: 0.2em 1em;\\r\\n}\\r\\n.jh-navbar .profile-image {\\r\\n  margin: -10px 0px;\\r\\n  height: 40px;\\r\\n  width: 40px;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n.jh-navbar .dropdown-item.active,\\r\\n.jh-navbar .dropdown-item.active:focus,\\r\\n.jh-navbar .dropdown-item.active:hover {\\r\\n  background-color: #353d47;\\r\\n}\\r\\n.jh-navbar .dropdown-toggle::after {\\r\\n  margin-left: 0.15em;\\r\\n}\\r\\n.jh-navbar ul.navbar-nav {\\r\\n  padding: 0.5em;\\r\\n}\\r\\n.jh-navbar ul.navbar-nav .nav-item {\\r\\n  margin-left: 1.5rem;\\r\\n}\\r\\n.jh-navbar a.nav-link {\\r\\n  font-weight: 400;\\r\\n}\\r\\n.jh-navbar a.nav-link > span {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n.jh-navbar .jh-navbar-toggler {\\r\\n  color: #ccc;\\r\\n  font-size: 1.5em;\\r\\n  padding: 10px;\\r\\n}\\r\\n.jh-navbar .jh-navbar-toggler:hover {\\r\\n  color: #fff;\\r\\n}\\r\\n.navbar-version {\\r\\n  font-size: 10px;\\r\\n  color: #0e0e10;\\r\\n  padding: 0 0 0 10px;\\r\\n}\\r\\n.brand-logo:hover {\\r\\n  text-decoration: none;\\r\\n}\\r\\n.brand-logo .brand-icon {\\r\\n  height: 35px;\\r\\n  width: auto;\\r\\n  display: inline-block;\\r\\n}\\r\\n.brand-logo .brand-icon img {\\r\\n  height: 45px;\\r\\n}\\r\\n.brand-title {\\r\\n  font-size: 24px;\\r\\n  color: #0e0e10;\\r\\n}\\r\\n.brand-title:hover {\\r\\n  color: #ccc;\\r\\n  text-decoration: none;\\r\\n}\\r\\n.loading-bar {\\r\\n  height: 3px;\\r\\n  background-color: #009cd8;\\r\\n  position: absolute;\\r\\n  top: 0px;\\r\\n  z-index: 1031;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ==========================================================================\\r\\nstart Password strength bar style\\r\\n========================================================================== */\\r\\nul#strengthBar {\\r\\n  display: inline;\\r\\n  list-style: none;\\r\\n  margin: 0;\\r\\n  margin-left: 15px;\\r\\n  padding: 0;\\r\\n  vertical-align: 2px;\\r\\n}\\r\\n\\r\\n.point:last-child {\\r\\n  margin: 0 !important;\\r\\n}\\r\\n.point {\\r\\n  background: #ddd;\\r\\n  border-radius: 2px;\\r\\n  display: inline-block;\\r\\n  height: 5px;\\r\\n  margin-right: 1px;\\r\\n  width: 20px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./log\": \"./node_modules/webpack/hot/log.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/webpack/hot sync ^\\\\.\\\\/log$\";","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./app.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./app.css\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./app.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import 'react-toastify/dist/ReactToastify.css';\r\nimport './app.css';\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from 'reactstrap';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { ToastContainer, ToastPosition, toast } from 'react-toastify';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getSession } from 'app/shared/reducers/authentication';\r\nimport { getProfile } from 'app/shared/reducers/application-profile';\r\nimport { setLocale } from 'app/shared/reducers/locale';\r\nimport Header from 'app/shared/layout/header/header';\r\nimport Footer from 'app/shared/layout/footer/footer';\r\nimport { hasAnyAuthority } from 'app/shared/auth/private-route';\r\nimport ErrorBoundary from 'app/shared/error/error-boundary';\r\nimport { AUTHORITIES } from 'app/config/constants';\r\nimport AppRoutes from 'app/routes';\r\n\r\nexport interface IAppProps extends StateProps, DispatchProps {}\r\n\r\nexport class App extends React.Component<IAppProps> {\r\n  componentDidMount() {\r\n    this.props.getSession();\r\n    this.props.getProfile();\r\n  }\r\n    componentWillMount() {\r\n        this.props.getSession();\r\n        this.state = {\r\n            isAprendizOpen: true,\r\n            isLoginOpen: false\r\n        };\r\n  }\r\n  render() {\r\n    const paddingTop = '60px';\r\n    return (\r\n      <Router>\r\n        <div className=\"app-container\" style={{ paddingTop }}>\r\n          <ToastContainer\r\n            position={toast.POSITION.TOP_LEFT as ToastPosition}\r\n            className=\"toastify-container\"\r\n            toastClassName=\"toastify-toast\"\r\n          />\r\n          <ErrorBoundary>\r\n            <Header\r\n              isAuthenticated={this.props.isAuthenticated}\r\n              isAdmin={this.props.isAdmin}\r\n              isInstructor={this.props.isInstructor}\r\n              isLider={this.props.isLider}\r\n              currentLocale={this.props.currentLocale}\r\n              onLocaleChange={this.props.setLocale}\r\n              ribbonEnv={this.props.ribbonEnv}\r\n              isInProduction={this.props.isInProduction}\r\n              isSwaggerEnabled={this.props.isSwaggerEnabled}\r\n            />\r\n          </ErrorBoundary>\r\n          <div className=\"container-fluid view-container\" id=\"app-view-container\">\r\n            <Card className=\"jh-card\">\r\n              <ErrorBoundary>\r\n                <AppRoutes />\r\n              </ErrorBoundary>\r\n            </Card>\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authentication, applicationProfile, locale }: IRootState) => ({\r\n  currentLocale: locale.currentLocale,\r\n  isAuthenticated: authentication.isAuthenticated,\r\n  isAdmin: hasAnyAuthority(authentication.account.authorities, [AUTHORITIES.ADMIN]),\r\n  isLider: hasAnyAuthority(authentication.account.authorities, [AUTHORITIES.LIDER]),\r\n  isInstructor: hasAnyAuthority(authentication.account.authorities, [AUTHORITIES.INSTRUCTOR]),\r\n  ribbonEnv: applicationProfile.ribbonEnv,\r\n  isInProduction: applicationProfile.inProduction,\r\n  isSwaggerEnabled: applicationProfile.isSwaggerEnabled\r\n});\r\n\r\nconst mapDispatchToProps = { setLocale, getSession, getProfile };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import axios from 'axios';\r\nimport { getBasePath, Storage } from 'react-jhipster';\r\n\r\nimport { SERVER_API_URL } from 'app/config/constants';\r\n\r\nconst TIMEOUT = 1 * 60 * 1000;\r\naxios.defaults.timeout = TIMEOUT;\r\naxios.defaults.baseURL = SERVER_API_URL;\r\n\r\nconst setupAxiosInterceptors = onUnauthenticated => {\r\n  const onRequestSuccess = config => {\r\n    const token = Storage.local.get('jhi-authenticationToken') || Storage.session.get('jhi-authenticationToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  };\r\n  const onResponseSuccess = response => response;\r\n  const onResponseError = err => {\r\n    const status = err.status || err.response.status;\r\n    if (status === 403 || status === 401) {\r\n      onUnauthenticated();\r\n    }\r\n    return Promise.reject(err);\r\n  };\r\n  axios.interceptors.request.use(onRequestSuccess);\r\n  axios.interceptors.response.use(onResponseSuccess, onResponseError);\r\n};\r\n\r\nexport default setupAxiosInterceptors;\r\n","const config = {\r\n  VERSION: process.env.VERSION\r\n};\r\n\r\nexport default config;\r\n\r\nexport const SERVER_API_URL = process.env.SERVER_API_URL;\r\n\r\nexport const AUTHORITIES = {\r\n  ADMIN: 'ROLE_ADMIN',\r\n  USER: 'ROLE_USER',\r\n  APRENDIZ: 'ROLE_APRENDIZ',\r\n  INSTRUCTOR: 'ROLE_INSTRUCTOR',\r\n  LIDER: 'ROLE_LIDER'\r\n};\r\n\r\nexport const messages = {\r\n  DATA_ERROR_ALERT: 'Internal Error'\r\n};\r\n\r\nexport const APP_DATE_FORMAT = 'DD/MM/YY HH:mm';\r\nexport const APP_TIMESTAMP_FORMAT = 'DD/MM/YY HH:mm:ss';\r\nexport const APP_LOCAL_DATE_FORMAT = 'DD/MM/YYYY';\r\nexport const APP_LOCAL_DATETIME_FORMAT = 'YYYY-MM-DDTHH:mm';\r\nexport const APP_LOCAL_DATETIME_FORMAT_Z = 'YYYY-MM-DDTHH:mm Z';\r\nexport const APP_WHOLE_NUMBER_FORMAT = '0,0';\r\nexport const APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT = '0,0.[00]';\r\n","import React from 'react';\r\nimport { createDevTools } from 'redux-devtools';\r\nimport LogMonitor from 'redux-devtools-log-monitor';\r\nimport DockMonitor from 'redux-devtools-dock-monitor';\r\n// You can toggle visibility of devTools with ctrl + H\r\n// and change their position with ctrl + Q\r\nexport default createDevTools(\r\n  <DockMonitor toggleVisibilityKey=\"ctrl-h\" changePositionKey=\"ctrl-q\" defaultIsVisible={false}>\r\n    <LogMonitor />\r\n  </DockMonitor>\r\n);\r\n","import { isPromise } from 'react-jhipster';\r\n\r\nconst getErrorMessage = errorData => {\r\n  let message = errorData.message;\r\n  if (errorData.fieldErrors) {\r\n    errorData.fieldErrors.forEach(fErr => {\r\n      message += `\\nfield: ${fErr.field},  Object: ${fErr.objectName}, message: ${fErr.message}\\n`;\r\n    });\r\n  }\r\n  return message;\r\n};\r\n\r\nexport default () => next => action => {\r\n  // If not a promise, continue on\r\n  if (!isPromise(action.payload)) {\r\n    return next(action);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * The error middleware serves to dispatch the initial pending promise to\r\n   * the promise middleware, but adds a `catch`.\r\n   * It need not run in production\r\n   */\r\n  if (process.env.NODE_ENV === 'development') {\r\n    // Dispatch initial pending promise, but catch any errors\r\n    return next(action).catch(error => {\r\n      console.error(`${action.type} caught at middleware with reason: ${JSON.stringify(error.message)}.`);\r\n      if (error && error.response && error.response.data) {\r\n        const message = getErrorMessage(error.response.data);\r\n        console.error(`Actual cause: ${message}`);\r\n      }\r\n\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n  return next(action);\r\n};\r\n","import { faSort } from '@fortawesome/free-solid-svg-icons/faSort';\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons/faEye';\r\nimport { faSync } from '@fortawesome/free-solid-svg-icons/faSync';\r\nimport { faBan } from '@fortawesome/free-solid-svg-icons/faBan';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons/faTrash';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons/faArrowLeft';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons/faSave';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons/faPlus';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons/faPencilAlt';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons/faUser';\r\nimport { faHdd } from '@fortawesome/free-solid-svg-icons/faHdd';\r\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons/faTachometerAlt';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons/faHeart';\r\nimport { faList } from '@fortawesome/free-solid-svg-icons/faList';\r\nimport { faTasks } from '@fortawesome/free-solid-svg-icons/faTasks';\r\nimport { faBook } from '@fortawesome/free-solid-svg-icons/faBook';\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons/faClock';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons/faSignInAlt';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons/faSignOutAlt';\r\nimport { faThList } from '@fortawesome/free-solid-svg-icons/faThList';\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons/faUserPlus';\r\nimport { faWrench } from '@fortawesome/free-solid-svg-icons/faWrench';\r\nimport { faAsterisk } from '@fortawesome/free-solid-svg-icons/faAsterisk';\r\nimport { faFlag } from '@fortawesome/free-solid-svg-icons/faFlag';\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons/faBell';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons/faHome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons/faTimesCircle';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons/faSearch';\r\nimport { faRoad } from '@fortawesome/free-solid-svg-icons/faRoad';\r\nimport { faCloud } from '@fortawesome/free-solid-svg-icons/faCloud';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nexport const loadIcons = () => {\r\n  library.add(\r\n    faSort,\r\n    faEye,\r\n    faSync,\r\n    faBan,\r\n    faTrash,\r\n    faArrowLeft,\r\n    faSave,\r\n    faPlus,\r\n    faPencilAlt,\r\n    faUser,\r\n    faTachometerAlt,\r\n    faHeart,\r\n    faList,\r\n    faTasks,\r\n    faBook,\r\n    faHdd,\r\n    faClock,\r\n    faSignInAlt,\r\n    faSignOutAlt,\r\n    faWrench,\r\n    faThList,\r\n    faUserPlus,\r\n    faAsterisk,\r\n    faFlag,\r\n    faBell,\r\n    faHome,\r\n    faRoad,\r\n    faCloud,\r\n    faTimesCircle,\r\n    faSearch\r\n  );\r\n};\r\n","export default () => next => action => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { type, payload, meta } = action;\r\n\r\n    console.groupCollapsed(type);\r\n    // tslint:disable-next-line\r\n    console.log('Payload:', payload);\r\n    // tslint:disable-next-line\r\n    console.log('Meta:', meta);\r\n    console.groupEnd();\r\n  }\r\n\r\n  return next(action);\r\n};\r\n","import { isPromise, translate } from 'react-jhipster';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst addErrorAlert = (message, key?, data?) => {\r\n  key = key ? key : message;\r\n  toast.error(translate(key, data));\r\n};\r\nexport default () => next => action => {\r\n  // If not a promise, continue on\r\n  if (!isPromise(action.payload)) {\r\n    return next(action);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * The notification middleware serves to dispatch the initial pending promise to\r\n   * the promise middleware, but adds a `then` and `catch.\r\n   */\r\n  return next(action)\r\n    .then(response => {\r\n      if (action.meta && action.meta.successMessage) {\r\n        toast.success(action.meta.successMessage);\r\n      } else if (response && response.action && response.action.payload && response.action.payload.headers) {\r\n        const headers = response.action.payload.headers;\r\n        let alert: string = null;\r\n        let alertParams: string = null;\r\n        Object.entries(headers).forEach(([k, v]: [string, string]) => {\r\n          if (k.toLowerCase().endsWith('app-alert')) {\r\n            alert = v;\r\n          } else if (k.toLowerCase().endsWith('app-params')) {\r\n            alertParams = v;\r\n          }\r\n        });\r\n        if (alert) {\r\n          const alertParam = alertParams;\r\n          toast.success(translate(alert, { param: alertParam }));\r\n        }\r\n      }\r\n      return Promise.resolve(response);\r\n    })\r\n    .catch(error => {\r\n      if (action.meta && action.meta.errorMessage) {\r\n        toast.error(action.meta.errorMessage);\r\n      } else if (error && error.response) {\r\n        const response = error.response;\r\n        const data = response.data;\r\n        if (!(response.status === 401 && (error.message === '' || (data && data.path && data.path.includes('/api/account'))))) {\r\n          let i;\r\n          switch (response.status) {\r\n            // connection refused, server not reachable\r\n            case 0:\r\n              addErrorAlert('Server not reachable', 'error.server.not.reachable');\r\n              break;\r\n\r\n            case 400:\r\n              const headers = Object.entries(response.headers);\r\n              let errorHeader = null;\r\n              let entityKey = null;\r\n              headers.forEach(([k, v]: [string, string]) => {\r\n                if (k.toLowerCase().endsWith('app-error')) {\r\n                  errorHeader = v;\r\n                } else if (k.toLowerCase().endsWith('app-params')) {\r\n                  entityKey = v;\r\n                }\r\n              });\r\n              if (errorHeader) {\r\n                const entityName = translate('global.menu.entities.' + entityKey);\r\n                addErrorAlert(errorHeader, errorHeader, { entityName });\r\n              } else if (data !== '' && data.fieldErrors) {\r\n                const fieldErrors = data.fieldErrors;\r\n                for (i = 0; i < fieldErrors.length; i++) {\r\n                  const fieldError = fieldErrors[i];\r\n                  if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\r\n                    fieldError.message = 'Size';\r\n                  }\r\n                  // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\r\n                  const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\r\n                  const fieldName = translate(`ghostceetApp.${fieldError.objectName}.${convertedField}`);\r\n                  addErrorAlert(`Error on field \"${fieldName}\"`, `error.${fieldError.message}`, { fieldName });\r\n                }\r\n              } else if (data !== '' && data.message) {\r\n                addErrorAlert(data.message, data.message, data.params);\r\n              } else {\r\n                addErrorAlert(data);\r\n              }\r\n              break;\r\n\r\n            case 404:\r\n              addErrorAlert('Not found', 'error.url.not.found');\r\n              break;\r\n\r\n            default:\r\n              if (data !== '' && data.message) {\r\n                addErrorAlert(data.message);\r\n              } else {\r\n                addErrorAlert(data);\r\n              }\r\n          }\r\n        }\r\n      } else if (error && error.message) {\r\n        toast.error(error.message);\r\n      } else {\r\n        toast.error('Unknown error!');\r\n      }\r\n      return Promise.reject(error);\r\n    });\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport promiseMiddleware from 'redux-promise-middleware';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer, { IRootState } from 'app/shared/reducers';\r\nimport DevTools from './devtools';\r\nimport errorMiddleware from './error-middleware';\r\nimport notificationMiddleware from './notification-middleware';\r\nimport loggerMiddleware from './logger-middleware';\r\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\r\n\r\nconst defaultMiddlewares = [\r\n  thunkMiddleware,\r\n  errorMiddleware,\r\n  notificationMiddleware,\r\n  promiseMiddleware(),\r\n  loadingBarMiddleware(),\r\n  loggerMiddleware\r\n];\r\nconst composedMiddlewares = middlewares =>\r\n  process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(...defaultMiddlewares, ...middlewares),\r\n        DevTools.instrument()\r\n      )\r\n    : compose(applyMiddleware(...defaultMiddlewares, ...middlewares));\r\n\r\nconst initialize = (initialState?: IRootState, middlewares = []) => createStore(reducer, initialState, composedMiddlewares(middlewares));\r\n\r\nexport default initialize;\r\n","import { TranslatorContext, Storage } from 'react-jhipster';\r\n\r\nimport { setLocale } from 'app/shared/reducers/locale';\r\n\r\nTranslatorContext.setDefaultLocale('es');\r\nTranslatorContext.setRenderInnerTextForMissingKeys(false);\r\n\r\nexport const languages: any = {\r\n  es: { name: 'Español' }\r\n  // jhipster-needle-i18n-language-key-pipe - JHipster will add/remove languages in this object\r\n};\r\n\r\nexport const locales = Object.keys(languages).sort();\r\n\r\nexport const registerLocale = store => {\r\n  store.dispatch(setLocale(Storage.session.get('locale', 'es')));\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IActividadProyecto } from 'app/shared/model/actividad-proyecto.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './actividad-proyecto.reducer';\r\n\r\nexport interface IActividadProyectoDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ActividadProyectoDeleteDialog extends React.Component<IActividadProyectoDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.actividadProyectoEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { actividadProyectoEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.actividadProyecto.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.actividadProyecto.delete.question\" interpolate={{ id: actividadProyectoEntity.id }}>\r\n            Are you sure you want to delete this ActividadProyecto?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-actividadProyecto\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ actividadProyecto }: IRootState) => ({\r\n  actividadProyectoEntity: actividadProyecto.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActividadProyectoDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './actividad-proyecto.reducer';\r\nimport { IActividadProyecto } from 'app/shared/model/actividad-proyecto.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IActividadProyectoDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ActividadProyectoDetail extends React.Component<IActividadProyectoDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { actividadProyectoEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.actividadProyecto.detail.title\">ActividadProyecto</Translate> [\r\n            <b>{actividadProyectoEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"numeroActividad\">\r\n                <Translate contentKey=\"ghostceetApp.actividadProyecto.numeroActividad\">Numero Actividad</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{actividadProyectoEntity.numeroActividad}</dd>\r\n            <dt>\r\n              <span id=\"nombreActividad\">\r\n                <Translate contentKey=\"ghostceetApp.actividadProyecto.nombreActividad\">Nombre Actividad</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{actividadProyectoEntity.nombreActividad}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.actividadProyecto.faseProyecto\">Fase Proyecto</Translate>\r\n            </dt>\r\n            <dd>{actividadProyectoEntity.faseProyecto ? actividadProyectoEntity.faseProyecto.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/actividad-proyecto\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/actividad-proyecto/${actividadProyectoEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ actividadProyecto }: IRootState) => ({\r\n  actividadProyectoEntity: actividadProyecto.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActividadProyectoDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IFaseProyecto } from 'app/shared/model/fase-proyecto.model';\r\nimport { getEntities as getFaseProyectos } from 'app/entities/fase-proyecto/fase-proyecto.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './actividad-proyecto.reducer';\r\nimport { IActividadProyecto } from 'app/shared/model/actividad-proyecto.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IActividadProyectoUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IActividadProyectoUpdateState {\r\n  isNew: boolean;\r\n  faseProyectoId: string;\r\n}\r\n\r\nexport class ActividadProyectoUpdate extends React.Component<IActividadProyectoUpdateProps, IActividadProyectoUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      faseProyectoId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getFaseProyectos();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { actividadProyectoEntity } = this.props;\r\n      const entity = {\r\n        ...actividadProyectoEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/actividad-proyecto');\r\n  };\r\n\r\n  render() {\r\n    const { actividadProyectoEntity, faseProyectos, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.actividadProyecto.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.actividadProyecto.home.createOrEditLabel\">Create or edit a ActividadProyecto</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : actividadProyectoEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"actividad-proyecto-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"numeroActividadLabel\" for=\"numeroActividad\">\r\n                    <Translate contentKey=\"ghostceetApp.actividadProyecto.numeroActividad\">Numero Actividad</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"actividad-proyecto-numeroActividad\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"numeroActividad\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"nombreActividadLabel\" for=\"nombreActividad\">\r\n                    <Translate contentKey=\"ghostceetApp.actividadProyecto.nombreActividad\">Nombre Actividad</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"actividad-proyecto-nombreActividad\"\r\n                    type=\"text\"\r\n                    name=\"nombreActividad\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 300, errorMessage: translate('entity.validation.maxlength', { max: 300 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"faseProyecto.id\">\r\n                    <Translate contentKey=\"ghostceetApp.actividadProyecto.faseProyecto\">Fase Proyecto</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"actividad-proyecto-faseProyecto\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"faseProyecto.id\"\r\n                    value={isNew ? faseProyectos[0] && faseProyectos[0].id : actividadProyectoEntity.faseProyecto.id}\r\n                  >\r\n                    {faseProyectos\r\n                      ? faseProyectos.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/actividad-proyecto\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  faseProyectos: storeState.faseProyecto.entities,\r\n  actividadProyectoEntity: storeState.actividadProyecto.entity,\r\n  loading: storeState.actividadProyecto.loading,\r\n  updating: storeState.actividadProyecto.updating,\r\n  updateSuccess: storeState.actividadProyecto.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getFaseProyectos,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActividadProyectoUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IActividadProyecto, defaultValue } from 'app/shared/model/actividad-proyecto.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_ACTIVIDADPROYECTO_LIST: 'actividadProyecto/FETCH_ACTIVIDADPROYECTO_LIST',\r\n  FETCH_ACTIVIDADPROYECTO: 'actividadProyecto/FETCH_ACTIVIDADPROYECTO',\r\n  CREATE_ACTIVIDADPROYECTO: 'actividadProyecto/CREATE_ACTIVIDADPROYECTO',\r\n  UPDATE_ACTIVIDADPROYECTO: 'actividadProyecto/UPDATE_ACTIVIDADPROYECTO',\r\n  DELETE_ACTIVIDADPROYECTO: 'actividadProyecto/DELETE_ACTIVIDADPROYECTO',\r\n  RESET: 'actividadProyecto/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IActividadProyecto>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type ActividadProyectoState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: ActividadProyectoState = initialState, action): ActividadProyectoState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_ACTIVIDADPROYECTO_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_ACTIVIDADPROYECTO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_ACTIVIDADPROYECTO):\r\n    case REQUEST(ACTION_TYPES.UPDATE_ACTIVIDADPROYECTO):\r\n    case REQUEST(ACTION_TYPES.DELETE_ACTIVIDADPROYECTO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_ACTIVIDADPROYECTO_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_ACTIVIDADPROYECTO):\r\n    case FAILURE(ACTION_TYPES.CREATE_ACTIVIDADPROYECTO):\r\n    case FAILURE(ACTION_TYPES.UPDATE_ACTIVIDADPROYECTO):\r\n    case FAILURE(ACTION_TYPES.DELETE_ACTIVIDADPROYECTO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_ACTIVIDADPROYECTO_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_ACTIVIDADPROYECTO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_ACTIVIDADPROYECTO):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_ACTIVIDADPROYECTO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_ACTIVIDADPROYECTO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/actividad-proyectos';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IActividadProyecto> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_ACTIVIDADPROYECTO_LIST,\r\n    payload: axios.get<IActividadProyecto>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IActividadProyecto> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_ACTIVIDADPROYECTO,\r\n    payload: axios.get<IActividadProyecto>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IActividadProyecto> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_ACTIVIDADPROYECTO,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IActividadProyecto> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_ACTIVIDADPROYECTO,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IActividadProyecto> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_ACTIVIDADPROYECTO,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './actividad-proyecto.reducer';\r\nimport { IActividadProyecto } from 'app/shared/model/actividad-proyecto.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IActividadProyectoProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IActividadProyectoState = IPaginationBaseState;\r\n\r\nexport class ActividadProyecto extends React.Component<IActividadProyectoProps, IActividadProyectoState> {\r\n  state: IActividadProyectoState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { actividadProyectoList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"actividad-proyecto-heading\">\r\n          <Translate contentKey=\"ghostceetApp.actividadProyecto.home.title\">Actividad Proyectos</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.actividadProyecto.home.createLabel\">Create new Actividad Proyecto</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('numeroActividad')}>\r\n                  <Translate contentKey=\"ghostceetApp.actividadProyecto.numeroActividad\">Numero Actividad</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('nombreActividad')}>\r\n                  <Translate contentKey=\"ghostceetApp.actividadProyecto.nombreActividad\">Nombre Actividad</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.actividadProyecto.faseProyecto\">Fase Proyecto</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {actividadProyectoList.map((actividadProyecto, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${actividadProyecto.id}`} color=\"link\" size=\"sm\">\r\n                      {actividadProyecto.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{actividadProyecto.numeroActividad}</td>\r\n                  <td>{actividadProyecto.nombreActividad}</td>\r\n                  <td>\r\n                    {actividadProyecto.faseProyecto ? (\r\n                      <Link to={`fase-proyecto/${actividadProyecto.faseProyecto.id}`}>{actividadProyecto.faseProyecto.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${actividadProyecto.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${actividadProyecto.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${actividadProyecto.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ actividadProyecto }: IRootState) => ({\r\n  actividadProyectoList: actividadProyecto.entities,\r\n  totalItems: actividadProyecto.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActividadProyecto);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport ActividadProyecto from './actividad-proyecto';\r\nimport ActividadProyectoDetail from './actividad-proyecto-detail';\r\nimport ActividadProyectoUpdate from './actividad-proyecto-update';\r\nimport ActividadProyectoDeleteDialog from './actividad-proyecto-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={ActividadProyectoUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={ActividadProyectoUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={ActividadProyectoDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={ActividadProyecto} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={ActividadProyectoDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IAmbiente } from 'app/shared/model/ambiente.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './ambiente.reducer';\r\n\r\nexport interface IAmbienteDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class AmbienteDeleteDialog extends React.Component<IAmbienteDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.ambienteEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { ambienteEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.ambiente.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.ambiente.delete.question\" interpolate={{ id: ambienteEntity.id }}>\r\n            Are you sure you want to delete this Ambiente?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-ambiente\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ ambiente }: IRootState) => ({\r\n  ambienteEntity: ambiente.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AmbienteDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './ambiente.reducer';\r\nimport { IAmbiente } from 'app/shared/model/ambiente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IAmbienteDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class AmbienteDetail extends React.Component<IAmbienteDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { ambienteEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.ambiente.detail.title\">Ambiente</Translate> [<b>{ambienteEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"numeroAmbiente\">\r\n                <Translate contentKey=\"ghostceetApp.ambiente.numeroAmbiente\">Numero Ambiente</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{ambienteEntity.numeroAmbiente}</dd>\r\n            <dt>\r\n              <span id=\"descripcion\">\r\n                <Translate contentKey=\"ghostceetApp.ambiente.descripcion\">Descripcion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{ambienteEntity.descripcion}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.ambiente.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{ambienteEntity.estado}</dd>\r\n            <dt>\r\n              <span id=\"limitacion\">\r\n                <Translate contentKey=\"ghostceetApp.ambiente.limitacion\">Limitacion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{ambienteEntity.limitacion}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.ambiente.tipoAmbiente\">Tipo Ambiente</Translate>\r\n            </dt>\r\n            <dd>{ambienteEntity.tipoAmbiente ? ambienteEntity.tipoAmbiente.tipo : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.ambiente.sede\">Sede</Translate>\r\n            </dt>\r\n            <dd>{ambienteEntity.sede ? ambienteEntity.sede.nombreSede : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/ambiente\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/ambiente/${ambienteEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ ambiente }: IRootState) => ({\r\n  ambienteEntity: ambiente.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AmbienteDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { ITipoAmbiente } from 'app/shared/model/tipo-ambiente.model';\r\nimport { getEntities as getTipoAmbientes } from 'app/entities/tipo-ambiente/tipo-ambiente.reducer';\r\nimport { ISede } from 'app/shared/model/sede.model';\r\nimport { getEntities as getSedes } from 'app/entities/sede/sede.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './ambiente.reducer';\r\nimport { IAmbiente } from 'app/shared/model/ambiente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IAmbienteUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IAmbienteUpdateState {\r\n  isNew: boolean;\r\n  tipoAmbienteId: string;\r\n  sedeId: string;\r\n}\r\n\r\nexport class AmbienteUpdate extends React.Component<IAmbienteUpdateProps, IAmbienteUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tipoAmbienteId: '0',\r\n      sedeId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getTipoAmbientes();\r\n    this.props.getSedes();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { ambienteEntity } = this.props;\r\n      const entity = {\r\n        ...ambienteEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/ambiente');\r\n  };\r\n\r\n  render() {\r\n    const { ambienteEntity, tipoAmbientes, sedes, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.ambiente.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.ambiente.home.createOrEditLabel\">Create or edit a Ambiente</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : ambienteEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"ambiente-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"numeroAmbienteLabel\" for=\"numeroAmbiente\">\r\n                    <Translate contentKey=\"ghostceetApp.ambiente.numeroAmbiente\">Numero Ambiente</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"ambiente-numeroAmbiente\"\r\n                    type=\"text\"\r\n                    name=\"numeroAmbiente\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 10, errorMessage: translate('entity.validation.maxlength', { max: 10 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"descripcionLabel\" for=\"descripcion\">\r\n                    <Translate contentKey=\"ghostceetApp.ambiente.descripcion\">Descripcion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"ambiente-descripcion\"\r\n                    type=\"text\"\r\n                    name=\"descripcion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 45, errorMessage: translate('entity.validation.maxlength', { max: 45 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.ambiente.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"ambiente-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && ambienteEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"limitacionLabel\" for=\"limitacion\">\r\n                    <Translate contentKey=\"ghostceetApp.ambiente.limitacion\">Limitacion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"ambiente-limitacion\"\r\n                    type=\"text\"\r\n                    name=\"limitacion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"tipoAmbiente.tipo\">\r\n                    <Translate contentKey=\"ghostceetApp.ambiente.tipoAmbiente\">Tipo Ambiente</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"ambiente-tipoAmbiente\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"tipoAmbiente.id\"\r\n                    value={isNew ? tipoAmbientes[0] && tipoAmbientes[0].id : ambienteEntity.tipoAmbiente.id}\r\n                  >\r\n                    {tipoAmbientes\r\n                      ? tipoAmbientes.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.tipo}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"sede.nombreSede\">\r\n                    <Translate contentKey=\"ghostceetApp.ambiente.sede\">Sede</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"ambiente-sede\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"sede.id\"\r\n                    value={isNew ? sedes[0] && sedes[0].id : ambienteEntity.sede.id}\r\n                  >\r\n                    {sedes\r\n                      ? sedes.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombreSede}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/ambiente\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  tipoAmbientes: storeState.tipoAmbiente.entities,\r\n  sedes: storeState.sede.entities,\r\n  ambienteEntity: storeState.ambiente.entity,\r\n  loading: storeState.ambiente.loading,\r\n  updating: storeState.ambiente.updating,\r\n  updateSuccess: storeState.ambiente.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getTipoAmbientes,\r\n  getSedes,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AmbienteUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IAmbiente, defaultValue } from 'app/shared/model/ambiente.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_AMBIENTE_LIST: 'ambiente/FETCH_AMBIENTE_LIST',\r\n  FETCH_AMBIENTE: 'ambiente/FETCH_AMBIENTE',\r\n  CREATE_AMBIENTE: 'ambiente/CREATE_AMBIENTE',\r\n  UPDATE_AMBIENTE: 'ambiente/UPDATE_AMBIENTE',\r\n  DELETE_AMBIENTE: 'ambiente/DELETE_AMBIENTE',\r\n  RESET: 'ambiente/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IAmbiente>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type AmbienteState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: AmbienteState = initialState, action): AmbienteState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_AMBIENTE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_AMBIENTE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_AMBIENTE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_AMBIENTE):\r\n    case REQUEST(ACTION_TYPES.DELETE_AMBIENTE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_AMBIENTE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_AMBIENTE):\r\n    case FAILURE(ACTION_TYPES.CREATE_AMBIENTE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_AMBIENTE):\r\n    case FAILURE(ACTION_TYPES.DELETE_AMBIENTE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_AMBIENTE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_AMBIENTE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_AMBIENTE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_AMBIENTE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_AMBIENTE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/ambientes';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IAmbiente> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_AMBIENTE_LIST,\r\n    payload: axios.get<IAmbiente>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IAmbiente> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_AMBIENTE,\r\n    payload: axios.get<IAmbiente>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IAmbiente> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_AMBIENTE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IAmbiente> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_AMBIENTE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IAmbiente> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_AMBIENTE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './ambiente.reducer';\r\nimport { IAmbiente } from 'app/shared/model/ambiente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IAmbienteProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IAmbienteState = IPaginationBaseState;\r\n\r\nexport class Ambiente extends React.Component<IAmbienteProps, IAmbienteState> {\r\n  state: IAmbienteState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { ambienteList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"ambiente-heading\">\r\n          <Translate contentKey=\"ghostceetApp.ambiente.home.title\">Ambientes</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.ambiente.home.createLabel\">Create new Ambiente</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('numeroAmbiente')}>\r\n                  <Translate contentKey=\"ghostceetApp.ambiente.numeroAmbiente\">Numero Ambiente</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('descripcion')}>\r\n                  <Translate contentKey=\"ghostceetApp.ambiente.descripcion\">Descripcion</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.ambiente.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('limitacion')}>\r\n                  <Translate contentKey=\"ghostceetApp.ambiente.limitacion\">Limitacion</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.ambiente.tipoAmbiente\">Tipo Ambiente</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.ambiente.sede\">Sede</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {ambienteList.map((ambiente, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${ambiente.id}`} color=\"link\" size=\"sm\">\r\n                      {ambiente.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{ambiente.numeroAmbiente}</td>\r\n                  <td>{ambiente.descripcion}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${ambiente.estado}`} />\r\n                  </td>\r\n                  <td>{ambiente.limitacion}</td>\r\n                  <td>\r\n                    {ambiente.tipoAmbiente ? (\r\n                      <Link to={`tipo-ambiente/${ambiente.tipoAmbiente.id}`}>{ambiente.tipoAmbiente.tipo}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>{ambiente.sede ? <Link to={`sede/${ambiente.sede.id}`}>{ambiente.sede.nombreSede}</Link> : ''}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${ambiente.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${ambiente.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${ambiente.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ ambiente }: IRootState) => ({\r\n  ambienteList: ambiente.entities,\r\n  totalItems: ambiente.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Ambiente);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Ambiente from './ambiente';\r\nimport AmbienteDetail from './ambiente-detail';\r\nimport AmbienteUpdate from './ambiente-update';\r\nimport AmbienteDeleteDialog from './ambiente-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={AmbienteUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={AmbienteUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={AmbienteDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Ambiente} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={AmbienteDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IAnio } from 'app/shared/model/anio.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './anio.reducer';\r\n\r\nexport interface IAnioDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class AnioDeleteDialog extends React.Component<IAnioDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.anioEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { anioEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.anio.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.anio.delete.question\" interpolate={{ id: anioEntity.id }}>\r\n            Are you sure you want to delete this Anio?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-anio\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ anio }: IRootState) => ({\r\n  anioEntity: anio.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AnioDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './anio.reducer';\r\nimport { IAnio } from 'app/shared/model/anio.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IAnioDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class AnioDetail extends React.Component<IAnioDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { anioEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.anio.detail.title\">Anio</Translate> [<b>{anioEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"numeroAnio\">\r\n                <Translate contentKey=\"ghostceetApp.anio.numeroAnio\">Numero Anio</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{anioEntity.numeroAnio}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.anio.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{anioEntity.estado}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/anio\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/anio/${anioEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ anio }: IRootState) => ({\r\n  anioEntity: anio.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AnioDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './anio.reducer';\r\nimport { IAnio } from 'app/shared/model/anio.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IAnioUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IAnioUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class AnioUpdate extends React.Component<IAnioUpdateProps, IAnioUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { anioEntity } = this.props;\r\n      const entity = {\r\n        ...anioEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/anio');\r\n  };\r\n\r\n  render() {\r\n    const { anioEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.anio.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.anio.home.createOrEditLabel\">Create or edit a Anio</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : anioEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"anio-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"numeroAnioLabel\" for=\"numeroAnio\">\r\n                    <Translate contentKey=\"ghostceetApp.anio.numeroAnio\">Numero Anio</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"anio-numeroAnio\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"numeroAnio\"\r\n                    validate={{\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.anio.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"anio-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && anioEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/anio\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  anioEntity: storeState.anio.entity,\r\n  loading: storeState.anio.loading,\r\n  updating: storeState.anio.updating,\r\n  updateSuccess: storeState.anio.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AnioUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IAnio, defaultValue } from 'app/shared/model/anio.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_ANIO_LIST: 'anio/FETCH_ANIO_LIST',\r\n  FETCH_ANIO: 'anio/FETCH_ANIO',\r\n  CREATE_ANIO: 'anio/CREATE_ANIO',\r\n  UPDATE_ANIO: 'anio/UPDATE_ANIO',\r\n  DELETE_ANIO: 'anio/DELETE_ANIO',\r\n  RESET: 'anio/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IAnio>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type AnioState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: AnioState = initialState, action): AnioState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_ANIO_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_ANIO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_ANIO):\r\n    case REQUEST(ACTION_TYPES.UPDATE_ANIO):\r\n    case REQUEST(ACTION_TYPES.DELETE_ANIO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_ANIO_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_ANIO):\r\n    case FAILURE(ACTION_TYPES.CREATE_ANIO):\r\n    case FAILURE(ACTION_TYPES.UPDATE_ANIO):\r\n    case FAILURE(ACTION_TYPES.DELETE_ANIO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_ANIO_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_ANIO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_ANIO):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_ANIO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_ANIO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/anios';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IAnio> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_ANIO_LIST,\r\n    payload: axios.get<IAnio>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IAnio> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_ANIO,\r\n    payload: axios.get<IAnio>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IAnio> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_ANIO,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IAnio> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_ANIO,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IAnio> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_ANIO,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './anio.reducer';\r\nimport { IAnio } from 'app/shared/model/anio.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IAnioProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IAnioState = IPaginationBaseState;\r\n\r\nexport class Anio extends React.Component<IAnioProps, IAnioState> {\r\n  state: IAnioState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { anioList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"anio-heading\">\r\n          <Translate contentKey=\"ghostceetApp.anio.home.title\">Anios</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.anio.home.createLabel\">Create new Anio</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('numeroAnio')}>\r\n                  <Translate contentKey=\"ghostceetApp.anio.numeroAnio\">Numero Anio</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.anio.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {anioList.map((anio, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${anio.id}`} color=\"link\" size=\"sm\">\r\n                      {anio.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{anio.numeroAnio}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${anio.estado}`} />\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${anio.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${anio.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${anio.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ anio }: IRootState) => ({\r\n  anioList: anio.entities,\r\n  totalItems: anio.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Anio);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Anio from './anio';\r\nimport AnioDetail from './anio-detail';\r\nimport AnioUpdate from './anio-update';\r\nimport AnioDeleteDialog from './anio-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={AnioUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={AnioUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={AnioDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Anio} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={AnioDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IAreaInstructor } from 'app/shared/model/area-instructor.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './area-instructor.reducer';\r\n\r\nexport interface IAreaInstructorDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class AreaInstructorDeleteDialog extends React.Component<IAreaInstructorDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.areaInstructorEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { areaInstructorEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.areaInstructor.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.areaInstructor.delete.question\" interpolate={{ id: areaInstructorEntity.id }}>\r\n            Are you sure you want to delete this AreaInstructor?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-areaInstructor\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ areaInstructor }: IRootState) => ({\r\n  areaInstructorEntity: areaInstructor.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AreaInstructorDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './area-instructor.reducer';\r\nimport { IAreaInstructor } from 'app/shared/model/area-instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IAreaInstructorDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class AreaInstructorDetail extends React.Component<IAreaInstructorDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { areaInstructorEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.areaInstructor.detail.title\">AreaInstructor</Translate> [<b>{areaInstructorEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.areaInstructor.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{areaInstructorEntity.estado}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.areaInstructor.area\">Area</Translate>\r\n            </dt>\r\n            <dd>{areaInstructorEntity.area ? areaInstructorEntity.area.nombreArea : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.areaInstructor.instructor\">Instructor</Translate>\r\n            </dt>\r\n            <dd>{areaInstructorEntity.instructor ? areaInstructorEntity.instructor.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/area-instructor\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/area-instructor/${areaInstructorEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ areaInstructor }: IRootState) => ({\r\n  areaInstructorEntity: areaInstructor.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AreaInstructorDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IArea } from 'app/shared/model/area.model';\r\nimport { getEntities as getAreas } from 'app/entities/area/area.reducer';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { getEntities as getInstructors } from 'app/entities/instructor/instructor.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './area-instructor.reducer';\r\nimport { IAreaInstructor } from 'app/shared/model/area-instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IAreaInstructorUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IAreaInstructorUpdateState {\r\n  isNew: boolean;\r\n  areaId: string;\r\n  instructorId: string;\r\n}\r\n\r\nexport class AreaInstructorUpdate extends React.Component<IAreaInstructorUpdateProps, IAreaInstructorUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      areaId: '0',\r\n      instructorId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getAreas();\r\n    this.props.getInstructors();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { areaInstructorEntity } = this.props;\r\n      const entity = {\r\n        ...areaInstructorEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/area-instructor');\r\n  };\r\n\r\n  render() {\r\n    const { areaInstructorEntity, areas, instructors, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.areaInstructor.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.areaInstructor.home.createOrEditLabel\">Create or edit a AreaInstructor</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : areaInstructorEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"area-instructor-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.areaInstructor.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"area-instructor-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && areaInstructorEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"area.nombreArea\">\r\n                    <Translate contentKey=\"ghostceetApp.areaInstructor.area\">Area</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"area-instructor-area\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"area.id\"\r\n                    value={isNew ? areas[0] && areas[0].id : areaInstructorEntity.area.id}\r\n                  >\r\n                    {areas\r\n                      ? areas.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombreArea}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"instructor.id\">\r\n                    <Translate contentKey=\"ghostceetApp.areaInstructor.instructor\">Instructor</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"area-instructor-instructor\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"instructor.id\"\r\n                    value={isNew ? instructors[0] && instructors[0].id : areaInstructorEntity.instructor.id}\r\n                  >\r\n                    {instructors\r\n                      ? instructors.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/area-instructor\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  areas: storeState.area.entities,\r\n  instructors: storeState.instructor.entities,\r\n  areaInstructorEntity: storeState.areaInstructor.entity,\r\n  loading: storeState.areaInstructor.loading,\r\n  updating: storeState.areaInstructor.updating,\r\n  updateSuccess: storeState.areaInstructor.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAreas,\r\n  getInstructors,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AreaInstructorUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IAreaInstructor, defaultValue } from 'app/shared/model/area-instructor.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_AREAINSTRUCTOR_LIST: 'areaInstructor/FETCH_AREAINSTRUCTOR_LIST',\r\n  FETCH_AREAINSTRUCTOR: 'areaInstructor/FETCH_AREAINSTRUCTOR',\r\n  CREATE_AREAINSTRUCTOR: 'areaInstructor/CREATE_AREAINSTRUCTOR',\r\n  UPDATE_AREAINSTRUCTOR: 'areaInstructor/UPDATE_AREAINSTRUCTOR',\r\n  DELETE_AREAINSTRUCTOR: 'areaInstructor/DELETE_AREAINSTRUCTOR',\r\n  RESET: 'areaInstructor/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IAreaInstructor>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type AreaInstructorState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: AreaInstructorState = initialState, action): AreaInstructorState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_AREAINSTRUCTOR_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_AREAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_AREAINSTRUCTOR):\r\n    case REQUEST(ACTION_TYPES.UPDATE_AREAINSTRUCTOR):\r\n    case REQUEST(ACTION_TYPES.DELETE_AREAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_AREAINSTRUCTOR_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_AREAINSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.CREATE_AREAINSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.UPDATE_AREAINSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.DELETE_AREAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_AREAINSTRUCTOR_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_AREAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_AREAINSTRUCTOR):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_AREAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_AREAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/area-instructors';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IAreaInstructor> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_AREAINSTRUCTOR_LIST,\r\n  payload: axios.get<IAreaInstructor>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IAreaInstructor> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_AREAINSTRUCTOR,\r\n    payload: axios.get<IAreaInstructor>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IAreaInstructor> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_AREAINSTRUCTOR,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IAreaInstructor> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_AREAINSTRUCTOR,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IAreaInstructor> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_AREAINSTRUCTOR,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './area-instructor.reducer';\r\nimport { IAreaInstructor } from 'app/shared/model/area-instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IAreaInstructorProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class AreaInstructor extends React.Component<IAreaInstructorProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { areaInstructorList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"area-instructor-heading\">\r\n          <Translate contentKey=\"ghostceetApp.areaInstructor.home.title\">Area Instructors</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.areaInstructor.home.createLabel\">Create new Area Instructor</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.areaInstructor.estado\">Estado</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.areaInstructor.area\">Area</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.areaInstructor.instructor\">Instructor</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {areaInstructorList.map((areaInstructor, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${areaInstructor.id}`} color=\"link\" size=\"sm\">\r\n                      {areaInstructor.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${areaInstructor.estado}`} />\r\n                  </td>\r\n                  <td>{areaInstructor.area ? <Link to={`area/${areaInstructor.area.id}`}>{areaInstructor.area.nombreArea}</Link> : ''}</td>\r\n                  <td>\r\n                    {areaInstructor.instructor ? (\r\n                      <Link to={`instructor/${areaInstructor.instructor.id}`}>{areaInstructor.instructor.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${areaInstructor.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${areaInstructor.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${areaInstructor.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ areaInstructor }: IRootState) => ({\r\n  areaInstructorList: areaInstructor.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AreaInstructor);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport AreaInstructor from './area-instructor';\r\nimport AreaInstructorDetail from './area-instructor-detail';\r\nimport AreaInstructorUpdate from './area-instructor-update';\r\nimport AreaInstructorDeleteDialog from './area-instructor-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={AreaInstructorUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={AreaInstructorUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={AreaInstructorDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={AreaInstructor} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={AreaInstructorDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IArea } from 'app/shared/model/area.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './area.reducer';\r\n\r\nexport interface IAreaDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class AreaDeleteDialog extends React.Component<IAreaDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.areaEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { areaEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.area.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.area.delete.question\" interpolate={{ id: areaEntity.id }}>\r\n            Are you sure you want to delete this Area?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-area\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ area }: IRootState) => ({\r\n  areaEntity: area.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AreaDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './area.reducer';\r\nimport { IArea } from 'app/shared/model/area.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IAreaDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class AreaDetail extends React.Component<IAreaDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { areaEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.area.detail.title\">Area</Translate> [<b>{areaEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"nombreArea\">\r\n                <Translate contentKey=\"ghostceetApp.area.nombreArea\">Nombre Area</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{areaEntity.nombreArea}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.area.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{areaEntity.estado}</dd>\r\n            <dt>\r\n              <span id=\"urlLogo\">\r\n                <Translate contentKey=\"ghostceetApp.area.urlLogo\">Url Logo</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{areaEntity.urlLogo}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/area\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/area/${areaEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ area }: IRootState) => ({\r\n  areaEntity: area.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AreaDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './area.reducer';\r\nimport { IArea } from 'app/shared/model/area.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IAreaUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IAreaUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class AreaUpdate extends React.Component<IAreaUpdateProps, IAreaUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { areaEntity } = this.props;\r\n      const entity = {\r\n        ...areaEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/area');\r\n  };\r\n\r\n  render() {\r\n    const { areaEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.area.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.area.home.createOrEditLabel\">Create or edit a Area</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : areaEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"area-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nombreAreaLabel\" for=\"nombreArea\">\r\n                    <Translate contentKey=\"ghostceetApp.area.nombreArea\">Nombre Area</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"area-nombreArea\"\r\n                    type=\"text\"\r\n                    name=\"nombreArea\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.area.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"area-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && areaEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"urlLogoLabel\" for=\"urlLogo\">\r\n                    <Translate contentKey=\"ghostceetApp.area.urlLogo\">Url Logo</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"area-urlLogo\"\r\n                    type=\"text\"\r\n                    name=\"urlLogo\"\r\n                    validate={{\r\n                      maxLength: { value: 400, errorMessage: translate('entity.validation.maxlength', { max: 400 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/area\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  areaEntity: storeState.area.entity,\r\n  loading: storeState.area.loading,\r\n  updating: storeState.area.updating,\r\n  updateSuccess: storeState.area.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(AreaUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IArea, defaultValue } from 'app/shared/model/area.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_AREA_LIST: 'area/FETCH_AREA_LIST',\r\n  FETCH_AREA: 'area/FETCH_AREA',\r\n  CREATE_AREA: 'area/CREATE_AREA',\r\n  UPDATE_AREA: 'area/UPDATE_AREA',\r\n  DELETE_AREA: 'area/DELETE_AREA',\r\n  RESET: 'area/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IArea>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type AreaState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: AreaState = initialState, action): AreaState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_AREA_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_AREA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_AREA):\r\n    case REQUEST(ACTION_TYPES.UPDATE_AREA):\r\n    case REQUEST(ACTION_TYPES.DELETE_AREA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_AREA_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_AREA):\r\n    case FAILURE(ACTION_TYPES.CREATE_AREA):\r\n    case FAILURE(ACTION_TYPES.UPDATE_AREA):\r\n    case FAILURE(ACTION_TYPES.DELETE_AREA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_AREA_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_AREA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_AREA):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_AREA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_AREA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/areas';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IArea> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_AREA_LIST,\r\n    payload: axios.get<IArea>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IArea> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_AREA,\r\n    payload: axios.get<IArea>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IArea> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_AREA,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IArea> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_AREA,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IArea> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_AREA,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './area.reducer';\r\nimport { IArea } from 'app/shared/model/area.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IAreaProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IAreaState = IPaginationBaseState;\r\n\r\nexport class Area extends React.Component<IAreaProps, IAreaState> {\r\n  state: IAreaState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { areaList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"area-heading\">\r\n          <Translate contentKey=\"ghostceetApp.area.home.title\">Areas</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.area.home.createLabel\">Create new Area</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('nombreArea')}>\r\n                  <Translate contentKey=\"ghostceetApp.area.nombreArea\">Nombre Area</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.area.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('urlLogo')}>\r\n                  <Translate contentKey=\"ghostceetApp.area.urlLogo\">Url Logo</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {areaList.map((area, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${area.id}`} color=\"link\" size=\"sm\">\r\n                      {area.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{area.nombreArea}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${area.estado}`} />\r\n                  </td>\r\n                  <td>{area.urlLogo}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${area.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${area.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${area.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ area }: IRootState) => ({\r\n  areaList: area.entities,\r\n  totalItems: area.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Area);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Area from './area';\r\nimport AreaDetail from './area-detail';\r\nimport AreaUpdate from './area-update';\r\nimport AreaDeleteDialog from './area-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={AreaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={AreaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={AreaDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Area} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={AreaDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ICliente } from 'app/shared/model/cliente.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './cliente.reducer';\r\n\r\nexport interface IClienteDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ClienteDeleteDialog extends React.Component<IClienteDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.clienteEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { clienteEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.cliente.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.cliente.delete.question\" interpolate={{ id: clienteEntity.id }}>\r\n            Are you sure you want to delete this Cliente?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-cliente\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ cliente }: IRootState) => ({\r\n  clienteEntity: cliente.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ClienteDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './cliente.reducer';\r\nimport { ICliente } from 'app/shared/model/cliente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IClienteDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ClienteDetail extends React.Component<IClienteDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { clienteEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.cliente.detail.title\">Cliente</Translate> [<b>{clienteEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"numeroDocumento\">\r\n                <Translate contentKey=\"ghostceetApp.cliente.numeroDocumento\">Numero Documento</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{clienteEntity.numeroDocumento}</dd>\r\n            <dt>\r\n              <span id=\"primerNombre\">\r\n                <Translate contentKey=\"ghostceetApp.cliente.primerNombre\">Primer Nombre</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{clienteEntity.primerNombre}</dd>\r\n            <dt>\r\n              <span id=\"segundoNombre\">\r\n                <Translate contentKey=\"ghostceetApp.cliente.segundoNombre\">Segundo Nombre</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{clienteEntity.segundoNombre}</dd>\r\n            <dt>\r\n              <span id=\"primerApellido\">\r\n                <Translate contentKey=\"ghostceetApp.cliente.primerApellido\">Primer Apellido</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{clienteEntity.primerApellido}</dd>\r\n            <dt>\r\n              <span id=\"segundoApellido\">\r\n                <Translate contentKey=\"ghostceetApp.cliente.segundoApellido\">Segundo Apellido</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{clienteEntity.segundoApellido}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.cliente.documento\">Documento</Translate>\r\n            </dt>\r\n            <dd>{clienteEntity.documento ? clienteEntity.documento.nombre : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/cliente\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/cliente/${clienteEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ cliente }: IRootState) => ({\r\n  clienteEntity: cliente.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ClienteDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IDocumento } from 'app/shared/model/documento.model';\r\nimport { getEntities as getDocumentos } from 'app/entities/documento/documento.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './cliente.reducer';\r\nimport { ICliente } from 'app/shared/model/cliente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IClienteUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IClienteUpdateState {\r\n  isNew: boolean;\r\n  documentoId: string;\r\n}\r\n\r\nexport class ClienteUpdate extends React.Component<IClienteUpdateProps, IClienteUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      documentoId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getDocumentos();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { clienteEntity } = this.props;\r\n      const entity = {\r\n        ...clienteEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/cliente');\r\n  };\r\n\r\n  render() {\r\n    const { clienteEntity, documentos, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.cliente.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.cliente.home.createOrEditLabel\">Create or edit a Cliente</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : clienteEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"cliente-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"numeroDocumentoLabel\" for=\"numeroDocumento\">\r\n                    <Translate contentKey=\"ghostceetApp.cliente.numeroDocumento\">Numero Documento</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"cliente-numeroDocumento\"\r\n                    type=\"text\"\r\n                    name=\"numeroDocumento\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 15, errorMessage: translate('entity.validation.maxlength', { max: 15 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"primerNombreLabel\" for=\"primerNombre\">\r\n                    <Translate contentKey=\"ghostceetApp.cliente.primerNombre\">Primer Nombre</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"cliente-primerNombre\"\r\n                    type=\"text\"\r\n                    name=\"primerNombre\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 20, errorMessage: translate('entity.validation.maxlength', { max: 20 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"segundoNombreLabel\" for=\"segundoNombre\">\r\n                    <Translate contentKey=\"ghostceetApp.cliente.segundoNombre\">Segundo Nombre</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"cliente-segundoNombre\"\r\n                    type=\"text\"\r\n                    name=\"segundoNombre\"\r\n                    validate={{\r\n                      maxLength: { value: 20, errorMessage: translate('entity.validation.maxlength', { max: 20 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"primerApellidoLabel\" for=\"primerApellido\">\r\n                    <Translate contentKey=\"ghostceetApp.cliente.primerApellido\">Primer Apellido</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"cliente-primerApellido\"\r\n                    type=\"text\"\r\n                    name=\"primerApellido\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 20, errorMessage: translate('entity.validation.maxlength', { max: 20 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"segundoApellidoLabel\" for=\"segundoApellido\">\r\n                    <Translate contentKey=\"ghostceetApp.cliente.segundoApellido\">Segundo Apellido</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"cliente-segundoApellido\"\r\n                    type=\"text\"\r\n                    name=\"segundoApellido\"\r\n                    validate={{\r\n                      maxLength: { value: 20, errorMessage: translate('entity.validation.maxlength', { max: 20 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"documento.nombre\">\r\n                    <Translate contentKey=\"ghostceetApp.cliente.documento\">Documento</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"cliente-documento\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"documento.id\"\r\n                    value={isNew ? documentos[0] && documentos[0].id : clienteEntity.documento.id}\r\n                  >\r\n                    {documentos\r\n                      ? documentos.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombre}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/cliente\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  documentos: storeState.documento.entities,\r\n  clienteEntity: storeState.cliente.entity,\r\n  loading: storeState.cliente.loading,\r\n  updating: storeState.cliente.updating,\r\n  updateSuccess: storeState.cliente.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getDocumentos,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ClienteUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { ICliente, defaultValue } from 'app/shared/model/cliente.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_CLIENTE_LIST: 'cliente/FETCH_CLIENTE_LIST',\r\n  FETCH_CLIENTE: 'cliente/FETCH_CLIENTE',\r\n  CREATE_CLIENTE: 'cliente/CREATE_CLIENTE',\r\n  UPDATE_CLIENTE: 'cliente/UPDATE_CLIENTE',\r\n  DELETE_CLIENTE: 'cliente/DELETE_CLIENTE',\r\n  RESET: 'cliente/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<ICliente>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type ClienteState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: ClienteState = initialState, action): ClienteState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_CLIENTE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_CLIENTE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_CLIENTE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_CLIENTE):\r\n    case REQUEST(ACTION_TYPES.DELETE_CLIENTE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_CLIENTE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_CLIENTE):\r\n    case FAILURE(ACTION_TYPES.CREATE_CLIENTE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_CLIENTE):\r\n    case FAILURE(ACTION_TYPES.DELETE_CLIENTE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_CLIENTE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_CLIENTE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_CLIENTE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_CLIENTE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_CLIENTE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/clientes';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<ICliente> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_CLIENTE_LIST,\r\n    payload: axios.get<ICliente>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<ICliente> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_CLIENTE,\r\n    payload: axios.get<ICliente>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<ICliente> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_CLIENTE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<ICliente> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_CLIENTE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<ICliente> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_CLIENTE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Button, Col, Row, Table } from 'reactstrap';\n// tslint:disable-next-line:no-unused-variable\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { getEntities } from './cliente.reducer';\nimport { ICliente } from 'app/shared/model/cliente.model';\n// tslint:disable-next-line:no-unused-variable\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\n\nexport interface IClienteProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\n\nexport type IClienteState = IPaginationBaseState;\n\nexport class Cliente extends React.Component<IClienteProps, IClienteState> {\n  state: IClienteState = {\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\n  };\n\n  componentDidMount() {\n    this.getEntities();\n  }\n\n  sort = prop => () => {\n    this.setState(\n      {\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\n        sort: prop\n      },\n      () => this.sortEntities()\n    );\n  };\n\n  sortEntities() {\n    this.getEntities();\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\n  }\n\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\n\n  getEntities = () => {\n    const { activePage, itemsPerPage, sort, order } = this.state;\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\n  };\n\n  render() {\n    const { clienteList, match, totalItems } = this.props;\n    return (\n      <div>\n        <h2 id=\"cliente-heading\">\n          <Translate contentKey=\"ghostceetApp.cliente.home.title\">Clientes</Translate>\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\n            <FontAwesomeIcon icon=\"plus\" />\n            &nbsp;\n            <Translate contentKey=\"ghostceetApp.cliente.home.createLabel\">Create new Cliente</Translate>\n          </Link>\n        </h2>\n        <div className=\"table-responsive\">\n          <Table responsive>\n            <thead>\n              <tr>\n                <th className=\"hand\" onClick={this.sort('id')}>\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('numeroDocumento')}>\n                  <Translate contentKey=\"ghostceetApp.cliente.numeroDocumento\">Numero Documento</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('primerNombre')}>\n                  <Translate contentKey=\"ghostceetApp.cliente.primerNombre\">Primer Nombre</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('segundoNombre')}>\n                  <Translate contentKey=\"ghostceetApp.cliente.segundoNombre\">Segundo Nombre</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('primerApellido')}>\n                  <Translate contentKey=\"ghostceetApp.cliente.primerApellido\">Primer Apellido</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th className=\"hand\" onClick={this.sort('segundoApellido')}>\n                  <Translate contentKey=\"ghostceetApp.cliente.segundoApellido\">Segundo Apellido</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th>\n                  <Translate contentKey=\"ghostceetApp.cliente.documento\">Documento</Translate> <FontAwesomeIcon icon=\"sort\" />\n                </th>\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {clienteList.map((cliente, i) => (\n                <tr key={`entity-${i}`}>\n                  <td>\n                    <Button tag={Link} to={`${match.url}/${cliente.id}`} color=\"link\" size=\"sm\">\n                      {cliente.id}\n                    </Button>\n                  </td>\n                  <td>{cliente.numeroDocumento}</td>\n                  <td>{cliente.primerNombre}</td>\n                  <td>{cliente.segundoNombre}</td>\n                  <td>{cliente.primerApellido}</td>\n                  <td>{cliente.segundoApellido}</td>\n                  <td>{cliente.documento ? <Link to={`documento/${cliente.documento.id}`}>{cliente.documento.nombre}</Link> : ''}</td>\n                  <td className=\"text-right\">\n                    <div className=\"btn-group flex-btn-group-container\">\n                      <Button tag={Link} to={`${match.url}/${cliente.id}`} color=\"info\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${cliente.id}/edit`} color=\"primary\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\n                        </span>\n                      </Button>\n                      <Button tag={Link} to={`${match.url}/${cliente.id}/delete`} color=\"danger\" size=\"sm\">\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\n                        <span className=\"d-none d-md-inline\">\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\n                        </span>\n                      </Button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </div>\n        <Row className=\"justify-content-center\">\n          <JhiPagination\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\n            activePage={this.state.activePage}\n            onSelect={this.handlePagination}\n            maxButtons={5}\n          />\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ cliente }: IRootState) => ({\n  clienteList: cliente.entities,\n  totalItems: cliente.totalItems\n});\n\nconst mapDispatchToProps = {\n  getEntities\n};\nfunction f(r) {\n    if (r === null) {\n        return false;\n    } else {\n        return true;\n    }\n}\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cliente);\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Cliente from './cliente';\r\nimport ClienteDetail from './cliente-detail';\r\nimport ClienteUpdate from './cliente-update';\r\nimport ClienteDeleteDialog from './cliente-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={ClienteUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={ClienteUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={ClienteDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Cliente} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={ClienteDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ICompetencia } from 'app/shared/model/competencia.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './competencia.reducer';\r\n\r\nexport interface ICompetenciaDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class CompetenciaDeleteDialog extends React.Component<ICompetenciaDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.competenciaEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { competenciaEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.competencia.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.competencia.delete.question\" interpolate={{ id: competenciaEntity.id }}>\r\n            Are you sure you want to delete this Competencia?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-competencia\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ competencia }: IRootState) => ({\r\n  competenciaEntity: competencia.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CompetenciaDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './competencia.reducer';\r\nimport { ICompetencia } from 'app/shared/model/competencia.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface ICompetenciaDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class CompetenciaDetail extends React.Component<ICompetenciaDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { competenciaEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.competencia.detail.title\">Competencia</Translate> [<b>{competenciaEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"codigo\">\r\n                <Translate contentKey=\"ghostceetApp.competencia.codigo\">Codigo</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{competenciaEntity.codigo}</dd>\r\n            <dt>\r\n              <span id=\"descripcion\">\r\n                <Translate contentKey=\"ghostceetApp.competencia.descripcion\">Descripcion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{competenciaEntity.descripcion}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.competencia.programa\">Programa</Translate>\r\n            </dt>\r\n            <dd>{competenciaEntity.programa ? competenciaEntity.programa.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/competencia\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/competencia/${competenciaEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ competencia }: IRootState) => ({\r\n  competenciaEntity: competencia.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CompetenciaDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IPrograma } from 'app/shared/model/programa.model';\r\nimport { getEntities as getProgramas } from 'app/entities/programa/programa.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './competencia.reducer';\r\nimport { ICompetencia } from 'app/shared/model/competencia.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface ICompetenciaUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface ICompetenciaUpdateState {\r\n  isNew: boolean;\r\n  programaId: string;\r\n}\r\n\r\nexport class CompetenciaUpdate extends React.Component<ICompetenciaUpdateProps, ICompetenciaUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      programaId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getProgramas();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { competenciaEntity } = this.props;\r\n      const entity = {\r\n        ...competenciaEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/competencia');\r\n  };\r\n\r\n  render() {\r\n    const { competenciaEntity, programas, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.competencia.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.competencia.home.createOrEditLabel\">Create or edit a Competencia</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : competenciaEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"competencia-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"codigoLabel\" for=\"codigo\">\r\n                    <Translate contentKey=\"ghostceetApp.competencia.codigo\">Codigo</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"competencia-codigo\"\r\n                    type=\"text\"\r\n                    name=\"codigo\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 50, errorMessage: translate('entity.validation.maxlength', { max: 50 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"descripcionLabel\" for=\"descripcion\">\r\n                    <Translate contentKey=\"ghostceetApp.competencia.descripcion\">Descripcion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"competencia-descripcion\"\r\n                    type=\"text\"\r\n                    name=\"descripcion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 1000, errorMessage: translate('entity.validation.maxlength', { max: 1000 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"programa.id\">\r\n                    <Translate contentKey=\"ghostceetApp.competencia.programa\">Programa</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"competencia-programa\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"programa.id\"\r\n                    value={isNew ? programas[0] && programas[0].id : competenciaEntity.programa.id}\r\n                  >\r\n                    {programas\r\n                      ? programas.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/competencia\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  programas: storeState.programa.entities,\r\n  competenciaEntity: storeState.competencia.entity,\r\n  loading: storeState.competencia.loading,\r\n  updating: storeState.competencia.updating,\r\n  updateSuccess: storeState.competencia.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProgramas,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CompetenciaUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { ICompetencia, defaultValue } from 'app/shared/model/competencia.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_COMPETENCIA_LIST: 'competencia/FETCH_COMPETENCIA_LIST',\r\n  FETCH_COMPETENCIA: 'competencia/FETCH_COMPETENCIA',\r\n  CREATE_COMPETENCIA: 'competencia/CREATE_COMPETENCIA',\r\n  UPDATE_COMPETENCIA: 'competencia/UPDATE_COMPETENCIA',\r\n  DELETE_COMPETENCIA: 'competencia/DELETE_COMPETENCIA',\r\n  RESET: 'competencia/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<ICompetencia>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type CompetenciaState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: CompetenciaState = initialState, action): CompetenciaState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_COMPETENCIA_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_COMPETENCIA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_COMPETENCIA):\r\n    case REQUEST(ACTION_TYPES.UPDATE_COMPETENCIA):\r\n    case REQUEST(ACTION_TYPES.DELETE_COMPETENCIA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_COMPETENCIA_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_COMPETENCIA):\r\n    case FAILURE(ACTION_TYPES.CREATE_COMPETENCIA):\r\n    case FAILURE(ACTION_TYPES.UPDATE_COMPETENCIA):\r\n    case FAILURE(ACTION_TYPES.DELETE_COMPETENCIA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_COMPETENCIA_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_COMPETENCIA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_COMPETENCIA):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_COMPETENCIA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_COMPETENCIA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/competencias';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<ICompetencia> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_COMPETENCIA_LIST,\r\n    payload: axios.get<ICompetencia>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<ICompetencia> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_COMPETENCIA,\r\n    payload: axios.get<ICompetencia>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<ICompetencia> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_COMPETENCIA,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<ICompetencia> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_COMPETENCIA,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<ICompetencia> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_COMPETENCIA,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './competencia.reducer';\r\nimport { ICompetencia } from 'app/shared/model/competencia.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface ICompetenciaProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type ICompetenciaState = IPaginationBaseState;\r\n\r\nexport class Competencia extends React.Component<ICompetenciaProps, ICompetenciaState> {\r\n  state: ICompetenciaState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { competenciaList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"competencia-heading\">\r\n          <Translate contentKey=\"ghostceetApp.competencia.home.title\">Competencias</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.competencia.home.createLabel\">Create new Competencia</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('codigo')}>\r\n                  <Translate contentKey=\"ghostceetApp.competencia.codigo\">Codigo</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('descripcion')}>\r\n                  <Translate contentKey=\"ghostceetApp.competencia.descripcion\">Descripcion</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.competencia.programa\">Programa</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {competenciaList.map((competencia, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${competencia.id}`} color=\"link\" size=\"sm\">\r\n                      {competencia.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{competencia.codigo}</td>\r\n                  <td>{competencia.descripcion}</td>\r\n                  <td>{competencia.programa ? <Link to={`programa/${competencia.programa.id}`}>{competencia.programa.id}</Link> : ''}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${competencia.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${competencia.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${competencia.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ competencia }: IRootState) => ({\r\n  competenciaList: competencia.entities,\r\n  totalItems: competencia.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Competencia);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Competencia from './competencia';\r\nimport CompetenciaDetail from './competencia-detail';\r\nimport CompetenciaUpdate from './competencia-update';\r\nimport CompetenciaDeleteDialog from './competencia-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={CompetenciaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={CompetenciaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={CompetenciaDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Competencia} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={CompetenciaDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IDiaJornada } from 'app/shared/model/dia-jornada.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './dia-jornada.reducer';\r\n\r\nexport interface IDiaJornadaDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DiaJornadaDeleteDialog extends React.Component<IDiaJornadaDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.diaJornadaEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { diaJornadaEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.diaJornada.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.diaJornada.delete.question\" interpolate={{ id: diaJornadaEntity.id }}>\r\n            Are you sure you want to delete this DiaJornada?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-diaJornada\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ diaJornada }: IRootState) => ({\r\n  diaJornadaEntity: diaJornada.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DiaJornadaDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './dia-jornada.reducer';\r\nimport { IDiaJornada } from 'app/shared/model/dia-jornada.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDiaJornadaDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DiaJornadaDetail extends React.Component<IDiaJornadaDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { diaJornadaEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.diaJornada.detail.title\">DiaJornada</Translate> [<b>{diaJornadaEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"horaInicio\">\r\n                <Translate contentKey=\"ghostceetApp.diaJornada.horaInicio\">Hora Inicio</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{diaJornadaEntity.horaInicio}</dd>\r\n            <dt>\r\n              <span id=\"horaFin\">\r\n                <Translate contentKey=\"ghostceetApp.diaJornada.horaFin\">Hora Fin</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{diaJornadaEntity.horaFin}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.diaJornada.jornadaInstructor\">Jornada Instructor</Translate>\r\n            </dt>\r\n            <dd>{diaJornadaEntity.jornadaInstructor ? diaJornadaEntity.jornadaInstructor.nombreJornada : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/dia-jornada\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/dia-jornada/${diaJornadaEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ diaJornada }: IRootState) => ({\r\n  diaJornadaEntity: diaJornada.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DiaJornadaDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IJornadaInstructor } from 'app/shared/model/jornada-instructor.model';\r\nimport { getEntities as getJornadaInstructors } from 'app/entities/jornada-instructor/jornada-instructor.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './dia-jornada.reducer';\r\nimport { IDiaJornada } from 'app/shared/model/dia-jornada.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IDiaJornadaUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IDiaJornadaUpdateState {\r\n  isNew: boolean;\r\n  jornadaInstructorId: string;\r\n}\r\n\r\nexport class DiaJornadaUpdate extends React.Component<IDiaJornadaUpdateProps, IDiaJornadaUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jornadaInstructorId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getJornadaInstructors();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { diaJornadaEntity } = this.props;\r\n      const entity = {\r\n        ...diaJornadaEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/dia-jornada');\r\n  };\r\n\r\n  render() {\r\n    const { diaJornadaEntity, jornadaInstructors, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.diaJornada.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.diaJornada.home.createOrEditLabel\">Create or edit a DiaJornada</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : diaJornadaEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"dia-jornada-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"horaInicioLabel\" for=\"horaInicio\">\r\n                    <Translate contentKey=\"ghostceetApp.diaJornada.horaInicio\">Hora Inicio</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"dia-jornada-horaInicio\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"horaInicio\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"horaFinLabel\" for=\"horaFin\">\r\n                    <Translate contentKey=\"ghostceetApp.diaJornada.horaFin\">Hora Fin</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"dia-jornada-horaFin\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"horaFin\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"jornadaInstructor.nombreJornada\">\r\n                    <Translate contentKey=\"ghostceetApp.diaJornada.jornadaInstructor\">Jornada Instructor</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"dia-jornada-jornadaInstructor\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"jornadaInstructor.id\"\r\n                    value={isNew ? jornadaInstructors[0] && jornadaInstructors[0].id : diaJornadaEntity.jornadaInstructor.id}\r\n                  >\r\n                    {jornadaInstructors\r\n                      ? jornadaInstructors.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombreJornada}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/dia-jornada\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  jornadaInstructors: storeState.jornadaInstructor.entities,\r\n  diaJornadaEntity: storeState.diaJornada.entity,\r\n  loading: storeState.diaJornada.loading,\r\n  updating: storeState.diaJornada.updating,\r\n  updateSuccess: storeState.diaJornada.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getJornadaInstructors,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DiaJornadaUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IDiaJornada, defaultValue } from 'app/shared/model/dia-jornada.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_DIAJORNADA_LIST: 'diaJornada/FETCH_DIAJORNADA_LIST',\r\n  FETCH_DIAJORNADA: 'diaJornada/FETCH_DIAJORNADA',\r\n  CREATE_DIAJORNADA: 'diaJornada/CREATE_DIAJORNADA',\r\n  UPDATE_DIAJORNADA: 'diaJornada/UPDATE_DIAJORNADA',\r\n  DELETE_DIAJORNADA: 'diaJornada/DELETE_DIAJORNADA',\r\n  RESET: 'diaJornada/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IDiaJornada>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type DiaJornadaState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: DiaJornadaState = initialState, action): DiaJornadaState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_DIAJORNADA_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_DIAJORNADA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_DIAJORNADA):\r\n    case REQUEST(ACTION_TYPES.UPDATE_DIAJORNADA):\r\n    case REQUEST(ACTION_TYPES.DELETE_DIAJORNADA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_DIAJORNADA_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_DIAJORNADA):\r\n    case FAILURE(ACTION_TYPES.CREATE_DIAJORNADA):\r\n    case FAILURE(ACTION_TYPES.UPDATE_DIAJORNADA):\r\n    case FAILURE(ACTION_TYPES.DELETE_DIAJORNADA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DIAJORNADA_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DIAJORNADA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_DIAJORNADA):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_DIAJORNADA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_DIAJORNADA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/dia-jornadas';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IDiaJornada> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DIAJORNADA_LIST,\r\n    payload: axios.get<IDiaJornada>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IDiaJornada> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DIAJORNADA,\r\n    payload: axios.get<IDiaJornada>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IDiaJornada> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_DIAJORNADA,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IDiaJornada> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_DIAJORNADA,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IDiaJornada> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_DIAJORNADA,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './dia-jornada.reducer';\r\nimport { IDiaJornada } from 'app/shared/model/dia-jornada.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IDiaJornadaProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IDiaJornadaState = IPaginationBaseState;\r\n\r\nexport class DiaJornada extends React.Component<IDiaJornadaProps, IDiaJornadaState> {\r\n  state: IDiaJornadaState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { diaJornadaList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"dia-jornada-heading\">\r\n          <Translate contentKey=\"ghostceetApp.diaJornada.home.title\">Dia Jornadas</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.diaJornada.home.createLabel\">Create new Dia Jornada</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('horaInicio')}>\r\n                  <Translate contentKey=\"ghostceetApp.diaJornada.horaInicio\">Hora Inicio</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('horaFin')}>\r\n                  <Translate contentKey=\"ghostceetApp.diaJornada.horaFin\">Hora Fin</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.diaJornada.jornadaInstructor\">Jornada Instructor</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {diaJornadaList.map((diaJornada, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${diaJornada.id}`} color=\"link\" size=\"sm\">\r\n                      {diaJornada.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{diaJornada.horaInicio}</td>\r\n                  <td>{diaJornada.horaFin}</td>\r\n                  <td>\r\n                    {diaJornada.jornadaInstructor ? (\r\n                      <Link to={`jornada-instructor/${diaJornada.jornadaInstructor.id}`}>{diaJornada.jornadaInstructor.nombreJornada}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${diaJornada.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${diaJornada.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${diaJornada.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ diaJornada }: IRootState) => ({\r\n  diaJornadaList: diaJornada.entities,\r\n  totalItems: diaJornada.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DiaJornada);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport DiaJornada from './dia-jornada';\r\nimport DiaJornadaDetail from './dia-jornada-detail';\r\nimport DiaJornadaUpdate from './dia-jornada-update';\r\nimport DiaJornadaDeleteDialog from './dia-jornada-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={DiaJornadaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={DiaJornadaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={DiaJornadaDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={DiaJornada} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={DiaJornadaDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IDia } from 'app/shared/model/dia.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './dia.reducer';\r\n\r\nexport interface IDiaDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DiaDeleteDialog extends React.Component<IDiaDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.diaEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { diaEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.dia.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.dia.delete.question\" interpolate={{ id: diaEntity.id }}>\r\n            Are you sure you want to delete this Dia?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-dia\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ dia }: IRootState) => ({\r\n  diaEntity: dia.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DiaDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './dia.reducer';\r\nimport { IDia } from 'app/shared/model/dia.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDiaDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DiaDetail extends React.Component<IDiaDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { diaEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.dia.detail.title\">Dia</Translate> [<b>{diaEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"nombreDia\">\r\n                <Translate contentKey=\"ghostceetApp.dia.nombreDia\">Nombre Dia</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{diaEntity.nombreDia}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.dia.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{diaEntity.estado}</dd>\r\n            <dt>\r\n              <span id=\"color\">\r\n                <Translate contentKey=\"ghostceetApp.dia.color\">Color</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{diaEntity.color}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/dia\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/dia/${diaEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ dia }: IRootState) => ({\r\n  diaEntity: dia.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DiaDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './dia.reducer';\r\nimport { IDia } from 'app/shared/model/dia.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IDiaUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IDiaUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class DiaUpdate extends React.Component<IDiaUpdateProps, IDiaUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { diaEntity } = this.props;\r\n      const entity = {\r\n        ...diaEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/dia');\r\n  };\r\n\r\n  render() {\r\n    const { diaEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.dia.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.dia.home.createOrEditLabel\">Create or edit a Dia</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : diaEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"dia-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nombreDiaLabel\" for=\"nombreDia\">\r\n                    <Translate contentKey=\"ghostceetApp.dia.nombreDia\">Nombre Dia</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"dia-nombreDia\"\r\n                    type=\"text\"\r\n                    name=\"nombreDia\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 10, errorMessage: translate('entity.validation.maxlength', { max: 10 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.dia.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"dia-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && diaEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"colorLabel\" for=\"color\">\r\n                    <Translate contentKey=\"ghostceetApp.dia.color\">Color</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"dia-color\"\r\n                    type=\"text\"\r\n                    name=\"color\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 50, errorMessage: translate('entity.validation.maxlength', { max: 50 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/dia\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  diaEntity: storeState.dia.entity,\r\n  loading: storeState.dia.loading,\r\n  updating: storeState.dia.updating,\r\n  updateSuccess: storeState.dia.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DiaUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IDia, defaultValue } from 'app/shared/model/dia.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_DIA_LIST: 'dia/FETCH_DIA_LIST',\r\n  FETCH_DIA: 'dia/FETCH_DIA',\r\n  CREATE_DIA: 'dia/CREATE_DIA',\r\n  UPDATE_DIA: 'dia/UPDATE_DIA',\r\n  DELETE_DIA: 'dia/DELETE_DIA',\r\n  RESET: 'dia/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IDia>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type DiaState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: DiaState = initialState, action): DiaState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_DIA_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_DIA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_DIA):\r\n    case REQUEST(ACTION_TYPES.UPDATE_DIA):\r\n    case REQUEST(ACTION_TYPES.DELETE_DIA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_DIA_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_DIA):\r\n    case FAILURE(ACTION_TYPES.CREATE_DIA):\r\n    case FAILURE(ACTION_TYPES.UPDATE_DIA):\r\n    case FAILURE(ACTION_TYPES.DELETE_DIA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DIA_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DIA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_DIA):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_DIA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_DIA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/dias';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IDia> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_DIA_LIST,\r\n  payload: axios.get<IDia>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IDia> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DIA,\r\n    payload: axios.get<IDia>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IDia> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_DIA,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IDia> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_DIA,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IDia> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_DIA,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './dia.reducer';\r\nimport { IDia } from 'app/shared/model/dia.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDiaProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class Dia extends React.Component<IDiaProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { diaList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"dia-heading\">\r\n          <Translate contentKey=\"ghostceetApp.dia.home.title\">Dias</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.dia.home.createLabel\">Create new Dia</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.dia.nombreDia\">Nombre Dia</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.dia.estado\">Estado</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.dia.color\">Color</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {diaList.map((dia, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${dia.id}`} color=\"link\" size=\"sm\">\r\n                      {dia.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{dia.nombreDia}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${dia.estado}`} />\r\n                  </td>\r\n                  <td>{dia.color}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${dia.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${dia.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${dia.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ dia }: IRootState) => ({\r\n  diaList: dia.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Dia);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Dia from './dia';\r\nimport DiaDetail from './dia-detail';\r\nimport DiaUpdate from './dia-update';\r\nimport DiaDeleteDialog from './dia-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={DiaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={DiaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={DiaDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Dia} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={DiaDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IDisponibilidadCompetencias } from 'app/shared/model/disponibilidad-competencias.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './disponibilidad-competencias.reducer';\r\n\r\nexport interface IDisponibilidadCompetenciasDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DisponibilidadCompetenciasDeleteDialog extends React.Component<IDisponibilidadCompetenciasDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.disponibilidadCompetenciasEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { disponibilidadCompetenciasEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.disponibilidadCompetencias.delete.question\">\r\n          <Translate\r\n            contentKey=\"ghostceetApp.disponibilidadCompetencias.delete.question\"\r\n            interpolate={{ id: disponibilidadCompetenciasEntity.id }}\r\n          >\r\n            Are you sure you want to delete this DisponibilidadCompetencias?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-disponibilidadCompetencias\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ disponibilidadCompetencias }: IRootState) => ({\r\n  disponibilidadCompetenciasEntity: disponibilidadCompetencias.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisponibilidadCompetenciasDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './disponibilidad-competencias.reducer';\r\nimport { IDisponibilidadCompetencias } from 'app/shared/model/disponibilidad-competencias.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDisponibilidadCompetenciasDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DisponibilidadCompetenciasDetail extends React.Component<IDisponibilidadCompetenciasDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { disponibilidadCompetenciasEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.detail.title\">DisponibilidadCompetencias</Translate> [\r\n            <b>{disponibilidadCompetenciasEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.instructor\">Instructor</Translate>\r\n            </dt>\r\n            <dd>{disponibilidadCompetenciasEntity.instructor ? disponibilidadCompetenciasEntity.instructor.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.vinculacionInstructor\">Vinculacion Instructor</Translate>\r\n            </dt>\r\n            <dd>\r\n              {disponibilidadCompetenciasEntity.vinculacionInstructor ? disponibilidadCompetenciasEntity.vinculacionInstructor.id : ''}\r\n            </dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/disponibilidad-competencias\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/disponibilidad-competencias/${disponibilidadCompetenciasEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ disponibilidadCompetencias }: IRootState) => ({\r\n  disponibilidadCompetenciasEntity: disponibilidadCompetencias.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisponibilidadCompetenciasDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { getEntities as getInstructors } from 'app/entities/instructor/instructor.reducer';\r\nimport { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\nimport { getEntities as getVinculacionInstructors } from 'app/entities/vinculacion-instructor/vinculacion-instructor.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './disponibilidad-competencias.reducer';\r\nimport { IDisponibilidadCompetencias } from 'app/shared/model/disponibilidad-competencias.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IDisponibilidadCompetenciasUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IDisponibilidadCompetenciasUpdateState {\r\n  isNew: boolean;\r\n  instructorId: string;\r\n  vinculacionInstructorId: string;\r\n}\r\n\r\nexport class DisponibilidadCompetenciasUpdate extends React.Component<\r\n  IDisponibilidadCompetenciasUpdateProps,\r\n  IDisponibilidadCompetenciasUpdateState\r\n> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      instructorId: '0',\r\n      vinculacionInstructorId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getInstructors();\r\n    this.props.getVinculacionInstructors();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { disponibilidadCompetenciasEntity } = this.props;\r\n      const entity = {\r\n        ...disponibilidadCompetenciasEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/disponibilidad-competencias');\r\n  };\r\n\r\n  render() {\r\n    const { disponibilidadCompetenciasEntity, instructors, vinculacionInstructors, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.disponibilidadCompetencias.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.home.createOrEditLabel\">\r\n                Create or edit a DisponibilidadCompetencias\r\n              </Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : disponibilidadCompetenciasEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"disponibilidad-competencias-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label for=\"instructor.id\">\r\n                    <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.instructor\">Instructor</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"disponibilidad-competencias-instructor\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"instructor.id\"\r\n                    value={isNew ? instructors[0] && instructors[0].id : disponibilidadCompetenciasEntity.instructor.id}\r\n                  >\r\n                    {instructors\r\n                      ? instructors.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"vinculacionInstructor.id\">\r\n                    <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.vinculacionInstructor\">Vinculacion Instructor</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"disponibilidad-competencias-vinculacionInstructor\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"vinculacionInstructor.id\"\r\n                    value={\r\n                      isNew\r\n                        ? vinculacionInstructors[0] && vinculacionInstructors[0].id\r\n                        : disponibilidadCompetenciasEntity.vinculacionInstructor.id\r\n                    }\r\n                  >\r\n                    {vinculacionInstructors\r\n                      ? vinculacionInstructors.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/disponibilidad-competencias\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  instructors: storeState.instructor.entities,\r\n  vinculacionInstructors: storeState.vinculacionInstructor.entities,\r\n  disponibilidadCompetenciasEntity: storeState.disponibilidadCompetencias.entity,\r\n  loading: storeState.disponibilidadCompetencias.loading,\r\n  updating: storeState.disponibilidadCompetencias.updating,\r\n  updateSuccess: storeState.disponibilidadCompetencias.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getInstructors,\r\n  getVinculacionInstructors,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisponibilidadCompetenciasUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IDisponibilidadCompetencias, defaultValue } from 'app/shared/model/disponibilidad-competencias.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_DISPONIBILIDADCOMPETENCIAS_LIST: 'disponibilidadCompetencias/FETCH_DISPONIBILIDADCOMPETENCIAS_LIST',\r\n  FETCH_DISPONIBILIDADCOMPETENCIAS: 'disponibilidadCompetencias/FETCH_DISPONIBILIDADCOMPETENCIAS',\r\n  CREATE_DISPONIBILIDADCOMPETENCIAS: 'disponibilidadCompetencias/CREATE_DISPONIBILIDADCOMPETENCIAS',\r\n  UPDATE_DISPONIBILIDADCOMPETENCIAS: 'disponibilidadCompetencias/UPDATE_DISPONIBILIDADCOMPETENCIAS',\r\n  DELETE_DISPONIBILIDADCOMPETENCIAS: 'disponibilidadCompetencias/DELETE_DISPONIBILIDADCOMPETENCIAS',\r\n  RESET: 'disponibilidadCompetencias/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IDisponibilidadCompetencias>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type DisponibilidadCompetenciasState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: DisponibilidadCompetenciasState = initialState, action): DisponibilidadCompetenciasState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_DISPONIBILIDADCOMPETENCIAS_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_DISPONIBILIDADCOMPETENCIAS):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_DISPONIBILIDADCOMPETENCIAS):\r\n    case REQUEST(ACTION_TYPES.UPDATE_DISPONIBILIDADCOMPETENCIAS):\r\n    case REQUEST(ACTION_TYPES.DELETE_DISPONIBILIDADCOMPETENCIAS):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_DISPONIBILIDADCOMPETENCIAS_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_DISPONIBILIDADCOMPETENCIAS):\r\n    case FAILURE(ACTION_TYPES.CREATE_DISPONIBILIDADCOMPETENCIAS):\r\n    case FAILURE(ACTION_TYPES.UPDATE_DISPONIBILIDADCOMPETENCIAS):\r\n    case FAILURE(ACTION_TYPES.DELETE_DISPONIBILIDADCOMPETENCIAS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DISPONIBILIDADCOMPETENCIAS_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DISPONIBILIDADCOMPETENCIAS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_DISPONIBILIDADCOMPETENCIAS):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_DISPONIBILIDADCOMPETENCIAS):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_DISPONIBILIDADCOMPETENCIAS):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/disponibilidad-competencias';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IDisponibilidadCompetencias> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DISPONIBILIDADCOMPETENCIAS_LIST,\r\n    payload: axios.get<IDisponibilidadCompetencias>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IDisponibilidadCompetencias> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DISPONIBILIDADCOMPETENCIAS,\r\n    payload: axios.get<IDisponibilidadCompetencias>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IDisponibilidadCompetencias> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_DISPONIBILIDADCOMPETENCIAS,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IDisponibilidadCompetencias> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_DISPONIBILIDADCOMPETENCIAS,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IDisponibilidadCompetencias> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_DISPONIBILIDADCOMPETENCIAS,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './disponibilidad-competencias.reducer';\r\nimport { IDisponibilidadCompetencias } from 'app/shared/model/disponibilidad-competencias.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IDisponibilidadCompetenciasProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IDisponibilidadCompetenciasState = IPaginationBaseState;\r\n\r\nexport class DisponibilidadCompetencias extends React.Component<IDisponibilidadCompetenciasProps, IDisponibilidadCompetenciasState> {\r\n  state: IDisponibilidadCompetenciasState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { disponibilidadCompetenciasList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"disponibilidad-competencias-heading\">\r\n          <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.home.title\">Disponibilidad Competencias</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.home.createLabel\">\r\n              Create new Disponibilidad Competencias\r\n            </Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.instructor\">Instructor</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.disponibilidadCompetencias.vinculacionInstructor\">Vinculacion Instructor</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {disponibilidadCompetenciasList.map((disponibilidadCompetencias, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${disponibilidadCompetencias.id}`} color=\"link\" size=\"sm\">\r\n                      {disponibilidadCompetencias.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    {disponibilidadCompetencias.instructor ? (\r\n                      <Link to={`instructor/${disponibilidadCompetencias.instructor.id}`}>{disponibilidadCompetencias.instructor.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {disponibilidadCompetencias.vinculacionInstructor ? (\r\n                      <Link to={`vinculacion-instructor/${disponibilidadCompetencias.vinculacionInstructor.id}`}>\r\n                        {disponibilidadCompetencias.vinculacionInstructor.id}\r\n                      </Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${disponibilidadCompetencias.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${disponibilidadCompetencias.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${disponibilidadCompetencias.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ disponibilidadCompetencias }: IRootState) => ({\r\n  disponibilidadCompetenciasList: disponibilidadCompetencias.entities,\r\n  totalItems: disponibilidadCompetencias.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisponibilidadCompetencias);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport DisponibilidadCompetencias from './disponibilidad-competencias';\r\nimport DisponibilidadCompetenciasDetail from './disponibilidad-competencias-detail';\r\nimport DisponibilidadCompetenciasUpdate from './disponibilidad-competencias-update';\r\nimport DisponibilidadCompetenciasDeleteDialog from './disponibilidad-competencias-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={DisponibilidadCompetenciasUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={DisponibilidadCompetenciasUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={DisponibilidadCompetenciasDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={DisponibilidadCompetencias} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={DisponibilidadCompetenciasDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IDisponibilidadHoraria } from 'app/shared/model/disponibilidad-horaria.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './disponibilidad-horaria.reducer';\r\n\r\nexport interface IDisponibilidadHorariaDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DisponibilidadHorariaDeleteDialog extends React.Component<IDisponibilidadHorariaDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.disponibilidadHorariaEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { disponibilidadHorariaEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.disponibilidadHoraria.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.delete.question\" interpolate={{ id: disponibilidadHorariaEntity.id }}>\r\n            Are you sure you want to delete this DisponibilidadHoraria?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-disponibilidadHoraria\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ disponibilidadHoraria }: IRootState) => ({\r\n  disponibilidadHorariaEntity: disponibilidadHoraria.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisponibilidadHorariaDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './disponibilidad-horaria.reducer';\r\nimport { IDisponibilidadHoraria } from 'app/shared/model/disponibilidad-horaria.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDisponibilidadHorariaDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DisponibilidadHorariaDetail extends React.Component<IDisponibilidadHorariaDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { disponibilidadHorariaEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.detail.title\">DisponibilidadHoraria</Translate> [\r\n            <b>{disponibilidadHorariaEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.vinculacionInstructor\">Vinculacion Instructor</Translate>\r\n            </dt>\r\n            <dd>{disponibilidadHorariaEntity.vinculacionInstructor ? disponibilidadHorariaEntity.vinculacionInstructor.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.jornada\">Jornada</Translate>\r\n            </dt>\r\n            <dd>{disponibilidadHorariaEntity.jornada ? disponibilidadHorariaEntity.jornada.nombreJornada : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.instructor\">Instructor</Translate>\r\n            </dt>\r\n            <dd>{disponibilidadHorariaEntity.instructor ? disponibilidadHorariaEntity.instructor.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/disponibilidad-horaria\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/disponibilidad-horaria/${disponibilidadHorariaEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ disponibilidadHoraria }: IRootState) => ({\r\n  disponibilidadHorariaEntity: disponibilidadHoraria.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisponibilidadHorariaDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\nimport { getEntities as getVinculacionInstructors } from 'app/entities/vinculacion-instructor/vinculacion-instructor.reducer';\r\nimport { IJornadaInstructor } from 'app/shared/model/jornada-instructor.model';\r\nimport { getEntities as getJornadaInstructors } from 'app/entities/jornada-instructor/jornada-instructor.reducer';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { getEntities as getInstructors } from 'app/entities/instructor/instructor.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './disponibilidad-horaria.reducer';\r\nimport { IDisponibilidadHoraria } from 'app/shared/model/disponibilidad-horaria.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IDisponibilidadHorariaUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IDisponibilidadHorariaUpdateState {\r\n  isNew: boolean;\r\n  vinculacionInstructorId: string;\r\n  jornadaId: string;\r\n  instructorId: string;\r\n}\r\n\r\nexport class DisponibilidadHorariaUpdate extends React.Component<IDisponibilidadHorariaUpdateProps, IDisponibilidadHorariaUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      vinculacionInstructorId: '0',\r\n      jornadaId: '0',\r\n      instructorId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getVinculacionInstructors();\r\n    this.props.getJornadaInstructors();\r\n    this.props.getInstructors();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { disponibilidadHorariaEntity } = this.props;\r\n      const entity = {\r\n        ...disponibilidadHorariaEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/disponibilidad-horaria');\r\n  };\r\n\r\n  render() {\r\n    const { disponibilidadHorariaEntity, vinculacionInstructors, jornadaInstructors, instructors, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.disponibilidadHoraria.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.home.createOrEditLabel\">\r\n                Create or edit a DisponibilidadHoraria\r\n              </Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : disponibilidadHorariaEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"disponibilidad-horaria-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label for=\"vinculacionInstructor.id\">\r\n                    <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.vinculacionInstructor\">Vinculacion Instructor</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"disponibilidad-horaria-vinculacionInstructor\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"vinculacionInstructor.id\"\r\n                    value={\r\n                      isNew\r\n                        ? vinculacionInstructors[0] && vinculacionInstructors[0].id\r\n                        : disponibilidadHorariaEntity.vinculacionInstructor.id\r\n                    }\r\n                  >\r\n                    {vinculacionInstructors\r\n                      ? vinculacionInstructors.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"jornada.nombreJornada\">\r\n                    <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.jornada\">Jornada</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"disponibilidad-horaria-jornada\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"jornada.id\"\r\n                    value={isNew ? jornadaInstructors[0] && jornadaInstructors[0].id : disponibilidadHorariaEntity.jornada.id}\r\n                  >\r\n                    {jornadaInstructors\r\n                      ? jornadaInstructors.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombreJornada}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"instructor.id\">\r\n                    <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.instructor\">Instructor</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"disponibilidad-horaria-instructor\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"instructor.id\"\r\n                    value={isNew ? instructors[0] && instructors[0].id : disponibilidadHorariaEntity.instructor.id}\r\n                  >\r\n                    {instructors\r\n                      ? instructors.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/disponibilidad-horaria\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  vinculacionInstructors: storeState.vinculacionInstructor.entities,\r\n  jornadaInstructors: storeState.jornadaInstructor.entities,\r\n  instructors: storeState.instructor.entities,\r\n  disponibilidadHorariaEntity: storeState.disponibilidadHoraria.entity,\r\n  loading: storeState.disponibilidadHoraria.loading,\r\n  updating: storeState.disponibilidadHoraria.updating,\r\n  updateSuccess: storeState.disponibilidadHoraria.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getVinculacionInstructors,\r\n  getJornadaInstructors,\r\n  getInstructors,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisponibilidadHorariaUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IDisponibilidadHoraria, defaultValue } from 'app/shared/model/disponibilidad-horaria.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_DISPONIBILIDADHORARIA_LIST: 'disponibilidadHoraria/FETCH_DISPONIBILIDADHORARIA_LIST',\r\n  FETCH_DISPONIBILIDADHORARIA: 'disponibilidadHoraria/FETCH_DISPONIBILIDADHORARIA',\r\n  CREATE_DISPONIBILIDADHORARIA: 'disponibilidadHoraria/CREATE_DISPONIBILIDADHORARIA',\r\n  UPDATE_DISPONIBILIDADHORARIA: 'disponibilidadHoraria/UPDATE_DISPONIBILIDADHORARIA',\r\n  DELETE_DISPONIBILIDADHORARIA: 'disponibilidadHoraria/DELETE_DISPONIBILIDADHORARIA',\r\n  RESET: 'disponibilidadHoraria/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IDisponibilidadHoraria>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type DisponibilidadHorariaState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: DisponibilidadHorariaState = initialState, action): DisponibilidadHorariaState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_DISPONIBILIDADHORARIA_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_DISPONIBILIDADHORARIA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_DISPONIBILIDADHORARIA):\r\n    case REQUEST(ACTION_TYPES.UPDATE_DISPONIBILIDADHORARIA):\r\n    case REQUEST(ACTION_TYPES.DELETE_DISPONIBILIDADHORARIA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_DISPONIBILIDADHORARIA_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_DISPONIBILIDADHORARIA):\r\n    case FAILURE(ACTION_TYPES.CREATE_DISPONIBILIDADHORARIA):\r\n    case FAILURE(ACTION_TYPES.UPDATE_DISPONIBILIDADHORARIA):\r\n    case FAILURE(ACTION_TYPES.DELETE_DISPONIBILIDADHORARIA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DISPONIBILIDADHORARIA_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DISPONIBILIDADHORARIA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_DISPONIBILIDADHORARIA):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_DISPONIBILIDADHORARIA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_DISPONIBILIDADHORARIA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/disponibilidad-horarias';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IDisponibilidadHoraria> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_DISPONIBILIDADHORARIA_LIST,\r\n  payload: axios.get<IDisponibilidadHoraria>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IDisponibilidadHoraria> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DISPONIBILIDADHORARIA,\r\n    payload: axios.get<IDisponibilidadHoraria>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IDisponibilidadHoraria> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_DISPONIBILIDADHORARIA,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IDisponibilidadHoraria> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_DISPONIBILIDADHORARIA,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IDisponibilidadHoraria> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_DISPONIBILIDADHORARIA,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './disponibilidad-horaria.reducer';\r\nimport { IDisponibilidadHoraria } from 'app/shared/model/disponibilidad-horaria.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDisponibilidadHorariaProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class DisponibilidadHoraria extends React.Component<IDisponibilidadHorariaProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { disponibilidadHorariaList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"disponibilidad-horaria-heading\">\r\n          <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.home.title\">Disponibilidad Horarias</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.home.createLabel\">Create new Disponibilidad Horaria</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.vinculacionInstructor\">Vinculacion Instructor</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.jornada\">Jornada</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.disponibilidadHoraria.instructor\">Instructor</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {disponibilidadHorariaList.map((disponibilidadHoraria, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${disponibilidadHoraria.id}`} color=\"link\" size=\"sm\">\r\n                      {disponibilidadHoraria.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    {disponibilidadHoraria.vinculacionInstructor ? (\r\n                      <Link to={`vinculacion-instructor/${disponibilidadHoraria.vinculacionInstructor.id}`}>\r\n                        {disponibilidadHoraria.vinculacionInstructor.id}\r\n                      </Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {disponibilidadHoraria.jornada ? (\r\n                      <Link to={`jornada-instructor/${disponibilidadHoraria.jornada.id}`}>\r\n                        {disponibilidadHoraria.jornada.nombreJornada}\r\n                      </Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {disponibilidadHoraria.instructor ? (\r\n                      <Link to={`instructor/${disponibilidadHoraria.instructor.id}`}>{disponibilidadHoraria.instructor.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${disponibilidadHoraria.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${disponibilidadHoraria.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${disponibilidadHoraria.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ disponibilidadHoraria }: IRootState) => ({\r\n  disponibilidadHorariaList: disponibilidadHoraria.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DisponibilidadHoraria);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport DisponibilidadHoraria from './disponibilidad-horaria';\r\nimport DisponibilidadHorariaDetail from './disponibilidad-horaria-detail';\r\nimport DisponibilidadHorariaUpdate from './disponibilidad-horaria-update';\r\nimport DisponibilidadHorariaDeleteDialog from './disponibilidad-horaria-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={DisponibilidadHorariaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={DisponibilidadHorariaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={DisponibilidadHorariaDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={DisponibilidadHoraria} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={DisponibilidadHorariaDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IDocumento } from 'app/shared/model/documento.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './documento.reducer';\r\n\r\nexport interface IDocumentoDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DocumentoDeleteDialog extends React.Component<IDocumentoDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.documentoEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { documentoEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.documento.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.documento.delete.question\" interpolate={{ id: documentoEntity.id }}>\r\n            Are you sure you want to delete this Documento?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-documento\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ documento }: IRootState) => ({\r\n  documentoEntity: documento.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DocumentoDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './documento.reducer';\r\nimport { IDocumento } from 'app/shared/model/documento.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDocumentoDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class DocumentoDetail extends React.Component<IDocumentoDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { documentoEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.documento.detail.title\">Documento</Translate> [<b>{documentoEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"sigla\">\r\n                <Translate contentKey=\"ghostceetApp.documento.sigla\">Sigla</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{documentoEntity.sigla}</dd>\r\n            <dt>\r\n              <span id=\"nombre\">\r\n                <Translate contentKey=\"ghostceetApp.documento.nombre\">Nombre</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{documentoEntity.nombre}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.documento.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{documentoEntity.estado}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/documento\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/documento/${documentoEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ documento }: IRootState) => ({\r\n  documentoEntity: documento.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DocumentoDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './documento.reducer';\r\nimport { IDocumento } from 'app/shared/model/documento.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IDocumentoUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IDocumentoUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class DocumentoUpdate extends React.Component<IDocumentoUpdateProps, IDocumentoUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { documentoEntity } = this.props;\r\n      const entity = {\r\n        ...documentoEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/documento');\r\n  };\r\n\r\n  render() {\r\n    const { documentoEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.documento.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.documento.home.createOrEditLabel\">Create or edit a Documento</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : documentoEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"documento-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"siglaLabel\" for=\"sigla\">\r\n                    <Translate contentKey=\"ghostceetApp.documento.sigla\">Sigla</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"documento-sigla\"\r\n                    type=\"text\"\r\n                    name=\"sigla\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 20, errorMessage: translate('entity.validation.maxlength', { max: 20 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"nombreLabel\" for=\"nombre\">\r\n                    <Translate contentKey=\"ghostceetApp.documento.nombre\">Nombre</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"documento-nombre\"\r\n                    type=\"text\"\r\n                    name=\"nombre\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 45, errorMessage: translate('entity.validation.maxlength', { max: 45 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.documento.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"documento-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && documentoEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/documento\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  documentoEntity: storeState.documento.entity,\r\n  loading: storeState.documento.loading,\r\n  updating: storeState.documento.updating,\r\n  updateSuccess: storeState.documento.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DocumentoUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IDocumento, defaultValue } from 'app/shared/model/documento.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_DOCUMENTO_LIST: 'documento/FETCH_DOCUMENTO_LIST',\r\n  FETCH_DOCUMENTO: 'documento/FETCH_DOCUMENTO',\r\n  CREATE_DOCUMENTO: 'documento/CREATE_DOCUMENTO',\r\n  UPDATE_DOCUMENTO: 'documento/UPDATE_DOCUMENTO',\r\n  DELETE_DOCUMENTO: 'documento/DELETE_DOCUMENTO',\r\n  RESET: 'documento/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IDocumento>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type DocumentoState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: DocumentoState = initialState, action): DocumentoState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_DOCUMENTO_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_DOCUMENTO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_DOCUMENTO):\r\n    case REQUEST(ACTION_TYPES.UPDATE_DOCUMENTO):\r\n    case REQUEST(ACTION_TYPES.DELETE_DOCUMENTO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_DOCUMENTO_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_DOCUMENTO):\r\n    case FAILURE(ACTION_TYPES.CREATE_DOCUMENTO):\r\n    case FAILURE(ACTION_TYPES.UPDATE_DOCUMENTO):\r\n    case FAILURE(ACTION_TYPES.DELETE_DOCUMENTO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DOCUMENTO_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_DOCUMENTO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_DOCUMENTO):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_DOCUMENTO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_DOCUMENTO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/documentos';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IDocumento> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_DOCUMENTO_LIST,\r\n  payload: axios.get<IDocumento>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IDocumento> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_DOCUMENTO,\r\n    payload: axios.get<IDocumento>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IDocumento> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_DOCUMENTO,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IDocumento> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_DOCUMENTO,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IDocumento> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_DOCUMENTO,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './documento.reducer';\r\nimport { IDocumento } from 'app/shared/model/documento.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IDocumentoProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class Documento extends React.Component<IDocumentoProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { documentoList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"documento-heading\">\r\n          <Translate contentKey=\"ghostceetApp.documento.home.title\">Documentos</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.documento.home.createLabel\">Create new Documento</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.documento.sigla\">Sigla</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.documento.nombre\">Nombre</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.documento.estado\">Estado</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {documentoList.map((documento, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${documento.id}`} color=\"link\" size=\"sm\">\r\n                      {documento.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{documento.sigla}</td>\r\n                  <td>{documento.nombre}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${documento.estado}`} />\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${documento.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${documento.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${documento.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ documento }: IRootState) => ({\r\n  documentoList: documento.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Documento);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Documento from './documento';\r\nimport DocumentoDetail from './documento-detail';\r\nimport DocumentoUpdate from './documento-update';\r\nimport DocumentoDeleteDialog from './documento-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={DocumentoUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={DocumentoUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={DocumentoDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Documento} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={DocumentoDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IEstadoFicha } from 'app/shared/model/estado-ficha.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './estado-ficha.reducer';\r\n\r\nexport interface IEstadoFichaDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class EstadoFichaDeleteDialog extends React.Component<IEstadoFichaDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.estadoFichaEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { estadoFichaEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.estadoFicha.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.estadoFicha.delete.question\" interpolate={{ id: estadoFichaEntity.id }}>\r\n            Are you sure you want to delete this EstadoFicha?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-estadoFicha\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ estadoFicha }: IRootState) => ({\r\n  estadoFichaEntity: estadoFicha.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EstadoFichaDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './estado-ficha.reducer';\r\nimport { IEstadoFicha } from 'app/shared/model/estado-ficha.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IEstadoFichaDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class EstadoFichaDetail extends React.Component<IEstadoFichaDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { estadoFichaEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.estadoFicha.detail.title\">EstadoFicha</Translate> [<b>{estadoFichaEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"nombreEstado\">\r\n                <Translate contentKey=\"ghostceetApp.estadoFicha.nombreEstado\">Nombre Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{estadoFichaEntity.nombreEstado}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.estadoFicha.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{estadoFichaEntity.estado}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/estado-ficha\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/estado-ficha/${estadoFichaEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ estadoFicha }: IRootState) => ({\r\n  estadoFichaEntity: estadoFicha.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EstadoFichaDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './estado-ficha.reducer';\r\nimport { IEstadoFicha } from 'app/shared/model/estado-ficha.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IEstadoFichaUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IEstadoFichaUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class EstadoFichaUpdate extends React.Component<IEstadoFichaUpdateProps, IEstadoFichaUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { estadoFichaEntity } = this.props;\r\n      const entity = {\r\n        ...estadoFichaEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/estado-ficha');\r\n  };\r\n\r\n  render() {\r\n    const { estadoFichaEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.estadoFicha.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.estadoFicha.home.createOrEditLabel\">Create or edit a EstadoFicha</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : estadoFichaEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"estado-ficha-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nombreEstadoLabel\" for=\"nombreEstado\">\r\n                    <Translate contentKey=\"ghostceetApp.estadoFicha.nombreEstado\">Nombre Estado</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"estado-ficha-nombreEstado\"\r\n                    type=\"text\"\r\n                    name=\"nombreEstado\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.estadoFicha.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"estado-ficha-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && estadoFichaEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/estado-ficha\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  estadoFichaEntity: storeState.estadoFicha.entity,\r\n  loading: storeState.estadoFicha.loading,\r\n  updating: storeState.estadoFicha.updating,\r\n  updateSuccess: storeState.estadoFicha.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EstadoFichaUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IEstadoFicha, defaultValue } from 'app/shared/model/estado-ficha.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_ESTADOFICHA_LIST: 'estadoFicha/FETCH_ESTADOFICHA_LIST',\r\n  FETCH_ESTADOFICHA: 'estadoFicha/FETCH_ESTADOFICHA',\r\n  CREATE_ESTADOFICHA: 'estadoFicha/CREATE_ESTADOFICHA',\r\n  UPDATE_ESTADOFICHA: 'estadoFicha/UPDATE_ESTADOFICHA',\r\n  DELETE_ESTADOFICHA: 'estadoFicha/DELETE_ESTADOFICHA',\r\n  RESET: 'estadoFicha/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IEstadoFicha>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type EstadoFichaState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: EstadoFichaState = initialState, action): EstadoFichaState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_ESTADOFICHA_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_ESTADOFICHA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_ESTADOFICHA):\r\n    case REQUEST(ACTION_TYPES.UPDATE_ESTADOFICHA):\r\n    case REQUEST(ACTION_TYPES.DELETE_ESTADOFICHA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_ESTADOFICHA_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_ESTADOFICHA):\r\n    case FAILURE(ACTION_TYPES.CREATE_ESTADOFICHA):\r\n    case FAILURE(ACTION_TYPES.UPDATE_ESTADOFICHA):\r\n    case FAILURE(ACTION_TYPES.DELETE_ESTADOFICHA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_ESTADOFICHA_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_ESTADOFICHA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_ESTADOFICHA):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_ESTADOFICHA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_ESTADOFICHA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/estado-fichas';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IEstadoFicha> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_ESTADOFICHA_LIST,\r\n    payload: axios.get<IEstadoFicha>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IEstadoFicha> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_ESTADOFICHA,\r\n    payload: axios.get<IEstadoFicha>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IEstadoFicha> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_ESTADOFICHA,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IEstadoFicha> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_ESTADOFICHA,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IEstadoFicha> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_ESTADOFICHA,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './estado-ficha.reducer';\r\nimport { IEstadoFicha } from 'app/shared/model/estado-ficha.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IEstadoFichaProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IEstadoFichaState = IPaginationBaseState;\r\n\r\nexport class EstadoFicha extends React.Component<IEstadoFichaProps, IEstadoFichaState> {\r\n  state: IEstadoFichaState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { estadoFichaList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"estado-ficha-heading\">\r\n          <Translate contentKey=\"ghostceetApp.estadoFicha.home.title\">Estado Fichas</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.estadoFicha.home.createLabel\">Create new Estado Ficha</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('nombreEstado')}>\r\n                  <Translate contentKey=\"ghostceetApp.estadoFicha.nombreEstado\">Nombre Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.estadoFicha.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {estadoFichaList.map((estadoFicha, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${estadoFicha.id}`} color=\"link\" size=\"sm\">\r\n                      {estadoFicha.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{estadoFicha.nombreEstado}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${estadoFicha.estado}`} />\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${estadoFicha.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${estadoFicha.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${estadoFicha.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ estadoFicha }: IRootState) => ({\r\n  estadoFichaList: estadoFicha.entities,\r\n  totalItems: estadoFicha.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EstadoFicha);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport EstadoFicha from './estado-ficha';\r\nimport EstadoFichaDetail from './estado-ficha-detail';\r\nimport EstadoFichaUpdate from './estado-ficha-update';\r\nimport EstadoFichaDeleteDialog from './estado-ficha-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={EstadoFichaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={EstadoFichaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={EstadoFichaDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={EstadoFicha} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={EstadoFichaDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IFaseProyecto } from 'app/shared/model/fase-proyecto.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './fase-proyecto.reducer';\r\n\r\nexport interface IFaseProyectoDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class FaseProyectoDeleteDialog extends React.Component<IFaseProyectoDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.faseProyectoEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { faseProyectoEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.faseProyecto.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.faseProyecto.delete.question\" interpolate={{ id: faseProyectoEntity.id }}>\r\n            Are you sure you want to delete this FaseProyecto?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-faseProyecto\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ faseProyecto }: IRootState) => ({\r\n  faseProyectoEntity: faseProyecto.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FaseProyectoDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './fase-proyecto.reducer';\r\nimport { IFaseProyecto } from 'app/shared/model/fase-proyecto.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IFaseProyectoDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class FaseProyectoDetail extends React.Component<IFaseProyectoDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { faseProyectoEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.faseProyecto.detail.title\">FaseProyecto</Translate> [<b>{faseProyectoEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"nombreFase\">\r\n                <Translate contentKey=\"ghostceetApp.faseProyecto.nombreFase\">Nombre Fase</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{faseProyectoEntity.nombreFase}</dd>\r\n            <dt>\r\n              <span id=\"estadoFase\">\r\n                <Translate contentKey=\"ghostceetApp.faseProyecto.estadoFase\">Estado Fase</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{faseProyectoEntity.estadoFase}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.faseProyecto.proyecto\">Proyecto</Translate>\r\n            </dt>\r\n            <dd>{faseProyectoEntity.proyecto ? faseProyectoEntity.proyecto.codigo : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/fase-proyecto\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/fase-proyecto/${faseProyectoEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ faseProyecto }: IRootState) => ({\r\n  faseProyectoEntity: faseProyecto.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FaseProyectoDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IProyecto } from 'app/shared/model/proyecto.model';\r\nimport { getEntities as getProyectos } from 'app/entities/proyecto/proyecto.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './fase-proyecto.reducer';\r\nimport { IFaseProyecto } from 'app/shared/model/fase-proyecto.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IFaseProyectoUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IFaseProyectoUpdateState {\r\n  isNew: boolean;\r\n  proyectoId: string;\r\n}\r\n\r\nexport class FaseProyectoUpdate extends React.Component<IFaseProyectoUpdateProps, IFaseProyectoUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      proyectoId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getProyectos();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { faseProyectoEntity } = this.props;\r\n      const entity = {\r\n        ...faseProyectoEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/fase-proyecto');\r\n  };\r\n\r\n  render() {\r\n    const { faseProyectoEntity, proyectos, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.faseProyecto.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.faseProyecto.home.createOrEditLabel\">Create or edit a FaseProyecto</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : faseProyectoEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"fase-proyecto-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nombreFaseLabel\" for=\"nombreFase\">\r\n                    <Translate contentKey=\"ghostceetApp.faseProyecto.nombreFase\">Nombre Fase</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"fase-proyecto-nombreFase\"\r\n                    type=\"text\"\r\n                    name=\"nombreFase\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 20, errorMessage: translate('entity.validation.maxlength', { max: 20 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoFaseLabel\" for=\"estadoFase\">\r\n                    <Translate contentKey=\"ghostceetApp.faseProyecto.estadoFase\">Estado Fase</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"fase-proyecto-estadoFase\"\r\n                    type=\"text\"\r\n                    name=\"estadoFase\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"proyecto.codigo\">\r\n                    <Translate contentKey=\"ghostceetApp.faseProyecto.proyecto\">Proyecto</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"fase-proyecto-proyecto\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"proyecto.id\"\r\n                    value={isNew ? proyectos[0] && proyectos[0].id : faseProyectoEntity.proyecto.id}\r\n                  >\r\n                    {proyectos\r\n                      ? proyectos.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.codigo}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/fase-proyecto\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  proyectos: storeState.proyecto.entities,\r\n  faseProyectoEntity: storeState.faseProyecto.entity,\r\n  loading: storeState.faseProyecto.loading,\r\n  updating: storeState.faseProyecto.updating,\r\n  updateSuccess: storeState.faseProyecto.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProyectos,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FaseProyectoUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IFaseProyecto, defaultValue } from 'app/shared/model/fase-proyecto.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_FASEPROYECTO_LIST: 'faseProyecto/FETCH_FASEPROYECTO_LIST',\r\n  FETCH_FASEPROYECTO: 'faseProyecto/FETCH_FASEPROYECTO',\r\n  CREATE_FASEPROYECTO: 'faseProyecto/CREATE_FASEPROYECTO',\r\n  UPDATE_FASEPROYECTO: 'faseProyecto/UPDATE_FASEPROYECTO',\r\n  DELETE_FASEPROYECTO: 'faseProyecto/DELETE_FASEPROYECTO',\r\n  RESET: 'faseProyecto/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IFaseProyecto>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type FaseProyectoState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: FaseProyectoState = initialState, action): FaseProyectoState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_FASEPROYECTO_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_FASEPROYECTO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_FASEPROYECTO):\r\n    case REQUEST(ACTION_TYPES.UPDATE_FASEPROYECTO):\r\n    case REQUEST(ACTION_TYPES.DELETE_FASEPROYECTO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_FASEPROYECTO_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_FASEPROYECTO):\r\n    case FAILURE(ACTION_TYPES.CREATE_FASEPROYECTO):\r\n    case FAILURE(ACTION_TYPES.UPDATE_FASEPROYECTO):\r\n    case FAILURE(ACTION_TYPES.DELETE_FASEPROYECTO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_FASEPROYECTO_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_FASEPROYECTO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_FASEPROYECTO):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_FASEPROYECTO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_FASEPROYECTO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/fase-proyectos';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IFaseProyecto> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_FASEPROYECTO_LIST,\r\n    payload: axios.get<IFaseProyecto>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IFaseProyecto> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_FASEPROYECTO,\r\n    payload: axios.get<IFaseProyecto>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IFaseProyecto> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_FASEPROYECTO,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IFaseProyecto> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_FASEPROYECTO,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IFaseProyecto> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_FASEPROYECTO,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './fase-proyecto.reducer';\r\nimport { IFaseProyecto } from 'app/shared/model/fase-proyecto.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IFaseProyectoProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IFaseProyectoState = IPaginationBaseState;\r\n\r\nexport class FaseProyecto extends React.Component<IFaseProyectoProps, IFaseProyectoState> {\r\n  state: IFaseProyectoState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { faseProyectoList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"fase-proyecto-heading\">\r\n          <Translate contentKey=\"ghostceetApp.faseProyecto.home.title\">Fase Proyectos</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.faseProyecto.home.createLabel\">Create new Fase Proyecto</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('nombreFase')}>\r\n                  <Translate contentKey=\"ghostceetApp.faseProyecto.nombreFase\">Nombre Fase</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estadoFase')}>\r\n                  <Translate contentKey=\"ghostceetApp.faseProyecto.estadoFase\">Estado Fase</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.faseProyecto.proyecto\">Proyecto</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {faseProyectoList.map((faseProyecto, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${faseProyecto.id}`} color=\"link\" size=\"sm\">\r\n                      {faseProyecto.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{faseProyecto.nombreFase}</td>\r\n                  <td>{faseProyecto.estadoFase}</td>\r\n                  <td>\r\n                    {faseProyecto.proyecto ? <Link to={`proyecto/${faseProyecto.proyecto.id}`}>{faseProyecto.proyecto.codigo}</Link> : ''}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${faseProyecto.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${faseProyecto.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${faseProyecto.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ faseProyecto }: IRootState) => ({\r\n  faseProyectoList: faseProyecto.entities,\r\n  totalItems: faseProyecto.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FaseProyecto);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport FaseProyecto from './fase-proyecto';\r\nimport FaseProyectoDetail from './fase-proyecto-detail';\r\nimport FaseProyectoUpdate from './fase-proyecto-update';\r\nimport FaseProyectoDeleteDialog from './fase-proyecto-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={FaseProyectoUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={FaseProyectoUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={FaseProyectoDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={FaseProyecto} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={FaseProyectoDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IFichaTrimestre } from 'app/shared/model/ficha-trimestre.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './ficha-trimestre.reducer';\r\n\r\nexport interface IFichaTrimestreDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class FichaTrimestreDeleteDialog extends React.Component<IFichaTrimestreDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.fichaTrimestreEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { fichaTrimestreEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.fichaTrimestre.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.fichaTrimestre.delete.question\" interpolate={{ id: fichaTrimestreEntity.id }}>\r\n            Are you sure you want to delete this FichaTrimestre?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-fichaTrimestre\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ fichaTrimestre }: IRootState) => ({\r\n  fichaTrimestreEntity: fichaTrimestre.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FichaTrimestreDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './ficha-trimestre.reducer';\r\nimport { IFichaTrimestre } from 'app/shared/model/ficha-trimestre.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IFichaTrimestreDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class FichaTrimestreDetail extends React.Component<IFichaTrimestreDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { fichaTrimestreEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.fichaTrimestre.detail.title\">FichaTrimestre</Translate> [<b>{fichaTrimestreEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.fichaTrimestre.ficha\">Ficha</Translate>\r\n            </dt>\r\n            <dd>{fichaTrimestreEntity.ficha ? fichaTrimestreEntity.ficha.numero : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/ficha-trimestre\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/ficha-trimestre/${fichaTrimestreEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ fichaTrimestre }: IRootState) => ({\r\n  fichaTrimestreEntity: fichaTrimestre.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FichaTrimestreDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IFicha } from 'app/shared/model/ficha.model';\r\nimport { getEntities as getFichas } from 'app/entities/ficha/ficha.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './ficha-trimestre.reducer';\r\nimport { IFichaTrimestre } from 'app/shared/model/ficha-trimestre.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IFichaTrimestreUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IFichaTrimestreUpdateState {\r\n  isNew: boolean;\r\n  fichaId: string;\r\n}\r\n\r\nexport class FichaTrimestreUpdate extends React.Component<IFichaTrimestreUpdateProps, IFichaTrimestreUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fichaId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getFichas();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { fichaTrimestreEntity } = this.props;\r\n      const entity = {\r\n        ...fichaTrimestreEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/ficha-trimestre');\r\n  };\r\n\r\n  render() {\r\n    const { fichaTrimestreEntity, fichas, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.fichaTrimestre.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.fichaTrimestre.home.createOrEditLabel\">Create or edit a FichaTrimestre</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : fichaTrimestreEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"ficha-trimestre-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label for=\"ficha.numero\">\r\n                    <Translate contentKey=\"ghostceetApp.fichaTrimestre.ficha\">Ficha</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"ficha-trimestre-ficha\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"ficha.id\"\r\n                    value={isNew ? fichas[0] && fichas[0].id : fichaTrimestreEntity.ficha.id}\r\n                  >\r\n                    {fichas\r\n                      ? fichas.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.numero}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/ficha-trimestre\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  fichas: storeState.ficha.entities,\r\n  fichaTrimestreEntity: storeState.fichaTrimestre.entity,\r\n  loading: storeState.fichaTrimestre.loading,\r\n  updating: storeState.fichaTrimestre.updating,\r\n  updateSuccess: storeState.fichaTrimestre.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getFichas,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FichaTrimestreUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IFichaTrimestre, defaultValue } from 'app/shared/model/ficha-trimestre.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_FICHATRIMESTRE_LIST: 'fichaTrimestre/FETCH_FICHATRIMESTRE_LIST',\r\n  FETCH_FICHATRIMESTRE: 'fichaTrimestre/FETCH_FICHATRIMESTRE',\r\n  CREATE_FICHATRIMESTRE: 'fichaTrimestre/CREATE_FICHATRIMESTRE',\r\n  UPDATE_FICHATRIMESTRE: 'fichaTrimestre/UPDATE_FICHATRIMESTRE',\r\n  DELETE_FICHATRIMESTRE: 'fichaTrimestre/DELETE_FICHATRIMESTRE',\r\n  RESET: 'fichaTrimestre/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IFichaTrimestre>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type FichaTrimestreState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: FichaTrimestreState = initialState, action): FichaTrimestreState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_FICHATRIMESTRE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_FICHATRIMESTRE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_FICHATRIMESTRE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_FICHATRIMESTRE):\r\n    case REQUEST(ACTION_TYPES.DELETE_FICHATRIMESTRE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_FICHATRIMESTRE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_FICHATRIMESTRE):\r\n    case FAILURE(ACTION_TYPES.CREATE_FICHATRIMESTRE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_FICHATRIMESTRE):\r\n    case FAILURE(ACTION_TYPES.DELETE_FICHATRIMESTRE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_FICHATRIMESTRE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_FICHATRIMESTRE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_FICHATRIMESTRE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_FICHATRIMESTRE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_FICHATRIMESTRE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/ficha-trimestres';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IFichaTrimestre> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_FICHATRIMESTRE_LIST,\r\n  payload: axios.get<IFichaTrimestre>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IFichaTrimestre> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_FICHATRIMESTRE,\r\n    payload: axios.get<IFichaTrimestre>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IFichaTrimestre> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_FICHATRIMESTRE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IFichaTrimestre> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_FICHATRIMESTRE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IFichaTrimestre> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_FICHATRIMESTRE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './ficha-trimestre.reducer';\r\nimport { IFichaTrimestre } from 'app/shared/model/ficha-trimestre.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IFichaTrimestreProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class FichaTrimestre extends React.Component<IFichaTrimestreProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { fichaTrimestreList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"ficha-trimestre-heading\">\r\n          <Translate contentKey=\"ghostceetApp.fichaTrimestre.home.title\">Ficha Trimestres</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.fichaTrimestre.home.createLabel\">Create new Ficha Trimestre</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.fichaTrimestre.ficha\">Ficha</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {fichaTrimestreList.map((fichaTrimestre, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${fichaTrimestre.id}`} color=\"link\" size=\"sm\">\r\n                      {fichaTrimestre.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{fichaTrimestre.ficha ? <Link to={`ficha/${fichaTrimestre.ficha.id}`}>{fichaTrimestre.ficha.numero}</Link> : ''}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${fichaTrimestre.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${fichaTrimestre.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${fichaTrimestre.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ fichaTrimestre }: IRootState) => ({\r\n  fichaTrimestreList: fichaTrimestre.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FichaTrimestre);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport FichaTrimestre from './ficha-trimestre';\r\nimport FichaTrimestreDetail from './ficha-trimestre-detail';\r\nimport FichaTrimestreUpdate from './ficha-trimestre-update';\r\nimport FichaTrimestreDeleteDialog from './ficha-trimestre-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={FichaTrimestreUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={FichaTrimestreUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={FichaTrimestreDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={FichaTrimestre} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={FichaTrimestreDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IFicha } from 'app/shared/model/ficha.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './ficha.reducer';\r\n\r\nexport interface IFichaDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class FichaDeleteDialog extends React.Component<IFichaDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.fichaEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { fichaEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.ficha.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.ficha.delete.question\" interpolate={{ id: fichaEntity.id }}>\r\n            Are you sure you want to delete this Ficha?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-ficha\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ ficha }: IRootState) => ({\r\n  fichaEntity: ficha.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FichaDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './ficha.reducer';\r\nimport { IFicha } from 'app/shared/model/ficha.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IFichaDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class FichaDetail extends React.Component<IFichaDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { fichaEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.ficha.detail.title\">Ficha</Translate> [<b>{fichaEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"numero\">\r\n                <Translate contentKey=\"ghostceetApp.ficha.numero\">Numero</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{fichaEntity.numero}</dd>\r\n            <dt>\r\n              <span id=\"fechaInicio\">\r\n                <Translate contentKey=\"ghostceetApp.ficha.fechaInicio\">Fecha Inicio</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={fichaEntity.fechaInicio} type=\"date\" format={APP_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <span id=\"fechaFin\">\r\n                <Translate contentKey=\"ghostceetApp.ficha.fechaFin\">Fecha Fin</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={fichaEntity.fechaFin} type=\"date\" format={APP_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <span id=\"ruta\">\r\n                <Translate contentKey=\"ghostceetApp.ficha.ruta\">Ruta</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{fichaEntity.ruta}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.ficha.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{fichaEntity.estado}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.ficha.programa\">Programa</Translate>\r\n            </dt>\r\n            <dd>{fichaEntity.programa ? fichaEntity.programa.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.ficha.estadoFicha\">Estado Ficha</Translate>\r\n            </dt>\r\n            <dd>{fichaEntity.estadoFicha ? fichaEntity.estadoFicha.nombreEstado : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/ficha\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/ficha/${fichaEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ ficha }: IRootState) => ({\r\n  fichaEntity: ficha.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FichaDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IPrograma } from 'app/shared/model/programa.model';\r\nimport { getEntities as getProgramas } from 'app/entities/programa/programa.reducer';\r\nimport { IEstadoFicha } from 'app/shared/model/estado-ficha.model';\r\nimport { getEntities as getEstadoFichas } from 'app/entities/estado-ficha/estado-ficha.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './ficha.reducer';\r\nimport { IFicha } from 'app/shared/model/ficha.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IFichaUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IFichaUpdateState {\r\n  isNew: boolean;\r\n  programaId: string;\r\n  estadoFichaId: string;\r\n}\r\n\r\nexport class FichaUpdate extends React.Component<IFichaUpdateProps, IFichaUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      programaId: '0',\r\n      estadoFichaId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getProgramas();\r\n    this.props.getEstadoFichas();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    values.fechaInicio = convertDateTimeToServer(values.fechaInicio);\r\n    values.fechaFin = convertDateTimeToServer(values.fechaFin);\r\n\r\n    if (errors.length === 0) {\r\n      const { fichaEntity } = this.props;\r\n      const entity = {\r\n        ...fichaEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/ficha');\r\n  };\r\n\r\n  render() {\r\n    const { fichaEntity, programas, estadoFichas, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.ficha.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.ficha.home.createOrEditLabel\">Create or edit a Ficha</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : fichaEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"ficha-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"numeroLabel\" for=\"numero\">\r\n                    <Translate contentKey=\"ghostceetApp.ficha.numero\">Numero</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"ficha-numero\"\r\n                    type=\"text\"\r\n                    name=\"numero\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 100, errorMessage: translate('entity.validation.maxlength', { max: 100 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"fechaInicioLabel\" for=\"fechaInicio\">\r\n                    <Translate contentKey=\"ghostceetApp.ficha.fechaInicio\">Fecha Inicio</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"ficha-fechaInicio\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"fechaInicio\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.fichaEntity.fechaInicio)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"fechaFinLabel\" for=\"fechaFin\">\r\n                    <Translate contentKey=\"ghostceetApp.ficha.fechaFin\">Fecha Fin</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"ficha-fechaFin\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"fechaFin\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.fichaEntity.fechaFin)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"rutaLabel\" for=\"ruta\">\r\n                    <Translate contentKey=\"ghostceetApp.ficha.ruta\">Ruta</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"ficha-ruta\"\r\n                    type=\"text\"\r\n                    name=\"ruta\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.ficha.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"ficha-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && fichaEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"programa.id\">\r\n                    <Translate contentKey=\"ghostceetApp.ficha.programa\">Programa</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"ficha-programa\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"programa.id\"\r\n                    value={isNew ? programas[0] && programas[0].id : fichaEntity.programa.id}\r\n                  >\r\n                    {programas\r\n                      ? programas.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"estadoFicha.nombreEstado\">\r\n                    <Translate contentKey=\"ghostceetApp.ficha.estadoFicha\">Estado Ficha</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"ficha-estadoFicha\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estadoFicha.id\"\r\n                    value={isNew ? estadoFichas[0] && estadoFichas[0].id : fichaEntity.estadoFicha.id}\r\n                  >\r\n                    {estadoFichas\r\n                      ? estadoFichas.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombreEstado}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/ficha\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  programas: storeState.programa.entities,\r\n  estadoFichas: storeState.estadoFicha.entities,\r\n  fichaEntity: storeState.ficha.entity,\r\n  loading: storeState.ficha.loading,\r\n  updating: storeState.ficha.updating,\r\n  updateSuccess: storeState.ficha.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProgramas,\r\n  getEstadoFichas,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(FichaUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IFicha, defaultValue } from 'app/shared/model/ficha.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_FICHA_LIST: 'ficha/FETCH_FICHA_LIST',\r\n  FETCH_FICHA: 'ficha/FETCH_FICHA',\r\n  CREATE_FICHA: 'ficha/CREATE_FICHA',\r\n  UPDATE_FICHA: 'ficha/UPDATE_FICHA',\r\n  DELETE_FICHA: 'ficha/DELETE_FICHA',\r\n  RESET: 'ficha/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IFicha>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type FichaState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: FichaState = initialState, action): FichaState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_FICHA_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_FICHA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_FICHA):\r\n    case REQUEST(ACTION_TYPES.UPDATE_FICHA):\r\n    case REQUEST(ACTION_TYPES.DELETE_FICHA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_FICHA_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_FICHA):\r\n    case FAILURE(ACTION_TYPES.CREATE_FICHA):\r\n    case FAILURE(ACTION_TYPES.UPDATE_FICHA):\r\n    case FAILURE(ACTION_TYPES.DELETE_FICHA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_FICHA_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_FICHA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_FICHA):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_FICHA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_FICHA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/fichas';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IFicha> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_FICHA_LIST,\r\n  payload: axios.get<IFicha>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IFicha> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_FICHA,\r\n    payload: axios.get<IFicha>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IFicha> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_FICHA,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IFicha> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_FICHA,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IFicha> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_FICHA,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './ficha.reducer';\r\nimport { IFicha } from 'app/shared/model/ficha.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IFichaProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class Ficha extends React.Component<IFichaProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { fichaList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"ficha-heading\">\r\n          <Translate contentKey=\"ghostceetApp.ficha.home.title\">Fichas</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.ficha.home.createLabel\">Create new Ficha</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.ficha.numero\">Numero</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.ficha.fechaInicio\">Fecha Inicio</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.ficha.fechaFin\">Fecha Fin</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.ficha.ruta\">Ruta</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.ficha.estado\">Estado</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.ficha.programa\">Programa</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.ficha.estadoFicha\">Estado Ficha</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {fichaList.map((ficha, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${ficha.id}`} color=\"link\" size=\"sm\">\r\n                      {ficha.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{ficha.numero}</td>\r\n                  <td>\r\n                    <TextFormat type=\"date\" value={ficha.fechaInicio} format={APP_DATE_FORMAT} />\r\n                  </td>\r\n                  <td>\r\n                    <TextFormat type=\"date\" value={ficha.fechaFin} format={APP_DATE_FORMAT} />\r\n                  </td>\r\n                  <td>{ficha.ruta}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${ficha.estado}`} />\r\n                  </td>\r\n                  <td>{ficha.programa ? <Link to={`programa/${ficha.programa.id}`}>{ficha.programa.id}</Link> : ''}</td>\r\n                  <td>\r\n                    {ficha.estadoFicha ? <Link to={`estado-ficha/${ficha.estadoFicha.id}`}>{ficha.estadoFicha.nombreEstado}</Link> : ''}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${ficha.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${ficha.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${ficha.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ ficha }: IRootState) => ({\r\n  fichaList: ficha.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Ficha);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Ficha from './ficha';\r\nimport FichaDetail from './ficha-detail';\r\nimport FichaUpdate from './ficha-update';\r\nimport FichaDeleteDialog from './ficha-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={FichaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={FichaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={FichaDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Ficha} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={FichaDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IHorario } from 'app/shared/model/horario.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './horario.reducer';\r\n\r\nexport interface IHorarioDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class HorarioDeleteDialog extends React.Component<IHorarioDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.horarioEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { horarioEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.horario.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.horario.delete.question\" interpolate={{ id: horarioEntity.id }}>\r\n            Are you sure you want to delete this Horario?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-horario\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ horario }: IRootState) => ({\r\n  horarioEntity: horario.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HorarioDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './horario.reducer';\r\nimport { IHorario } from 'app/shared/model/horario.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IHorarioDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class HorarioDetail extends React.Component<IHorarioDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { horarioEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.horario.detail.title\">Horario</Translate> [<b>{horarioEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"horaInicio\">\r\n                <Translate contentKey=\"ghostceetApp.horario.horaInicio\">Hora Inicio</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={horarioEntity.horaInicio} type=\"date\" format={APP_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <span id=\"horaFin\">\r\n                <Translate contentKey=\"ghostceetApp.horario.horaFin\">Hora Fin</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={horarioEntity.horaFin} type=\"date\" format={APP_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.horario.modalidad\">Modalidad</Translate>\r\n            </dt>\r\n            <dd>{horarioEntity.modalidad ? horarioEntity.modalidad.nombre : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.horario.dia\">Dia</Translate>\r\n            </dt>\r\n            <dd>{horarioEntity.dia ? horarioEntity.dia.nombreDia : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.horario.fichaTrimestre\">Ficha Trimestre</Translate>\r\n            </dt>\r\n            <dd>{horarioEntity.fichaTrimestre ? horarioEntity.fichaTrimestre.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.horario.ambiente\">Ambiente</Translate>\r\n            </dt>\r\n            <dd>{horarioEntity.ambiente ? horarioEntity.ambiente.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.horario.instructor\">Instructor</Translate>\r\n            </dt>\r\n            <dd>{horarioEntity.instructor ? horarioEntity.instructor.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.horario.versionHorario\">Version Horario</Translate>\r\n            </dt>\r\n            <dd>{horarioEntity.versionHorario ? horarioEntity.versionHorario.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/horario\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/horario/${horarioEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ horario }: IRootState) => ({\r\n  horarioEntity: horario.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HorarioDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IModalidad } from 'app/shared/model/modalidad.model';\r\nimport { getEntities as getModalidads } from 'app/entities/modalidad/modalidad.reducer';\r\nimport { IDia } from 'app/shared/model/dia.model';\r\nimport { getEntities as getDias } from 'app/entities/dia/dia.reducer';\r\nimport { IFichaTrimestre } from 'app/shared/model/ficha-trimestre.model';\r\nimport { getEntities as getFichaTrimestres } from 'app/entities/ficha-trimestre/ficha-trimestre.reducer';\r\nimport { IAmbiente } from 'app/shared/model/ambiente.model';\r\nimport { getEntities as getAmbientes } from 'app/entities/ambiente/ambiente.reducer';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { getEntities as getInstructors } from 'app/entities/instructor/instructor.reducer';\r\nimport { IVersionHorario } from 'app/shared/model/version-horario.model';\r\nimport { getEntities as getVersionHorarios } from 'app/entities/version-horario/version-horario.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './horario.reducer';\r\nimport { IHorario } from 'app/shared/model/horario.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IHorarioUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IHorarioUpdateState {\r\n  isNew: boolean;\r\n  modalidadId: string;\r\n  diaId: string;\r\n  fichaTrimestreId: string;\r\n  ambienteId: string;\r\n  instructorId: string;\r\n  versionHorarioId: string;\r\n}\r\n\r\nexport class HorarioUpdate extends React.Component<IHorarioUpdateProps, IHorarioUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalidadId: '0',\r\n      diaId: '0',\r\n      fichaTrimestreId: '0',\r\n      ambienteId: '0',\r\n      instructorId: '0',\r\n      versionHorarioId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getModalidads();\r\n    this.props.getDias();\r\n    this.props.getFichaTrimestres();\r\n    this.props.getAmbientes();\r\n    this.props.getInstructors();\r\n    this.props.getVersionHorarios();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    values.horaInicio = convertDateTimeToServer(values.horaInicio);\r\n    values.horaFin = convertDateTimeToServer(values.horaFin);\r\n\r\n    if (errors.length === 0) {\r\n      const { horarioEntity } = this.props;\r\n      const entity = {\r\n        ...horarioEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/horario');\r\n  };\r\n\r\n  render() {\r\n    const { horarioEntity, modalidads, dias, fichaTrimestres, ambientes, instructors, versionHorarios, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.horario.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.horario.home.createOrEditLabel\">Create or edit a Horario</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : horarioEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"horario-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"horaInicioLabel\" for=\"horaInicio\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.horaInicio\">Hora Inicio</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-horaInicio\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"horaInicio\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.horarioEntity.horaInicio)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"horaFinLabel\" for=\"horaFin\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.horaFin\">Hora Fin</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-horaFin\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"horaFin\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.horarioEntity.horaFin)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"modalidad.nombre\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.modalidad\">Modalidad</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-modalidad\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"modalidad.id\"\r\n                    value={isNew ? modalidads[0] && modalidads[0].id : horarioEntity.modalidad.id}\r\n                  >\r\n                    {modalidads\r\n                      ? modalidads.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombre}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"dia.nombreDia\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.dia\">Dia</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-dia\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"dia.id\"\r\n                    value={isNew ? dias[0] && dias[0].id : horarioEntity.dia.id}\r\n                  >\r\n                    {dias\r\n                      ? dias.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombreDia}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"fichaTrimestre.id\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.fichaTrimestre\">Ficha Trimestre</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-fichaTrimestre\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"fichaTrimestre.id\"\r\n                    value={isNew ? fichaTrimestres[0] && fichaTrimestres[0].id : horarioEntity.fichaTrimestre.id}\r\n                  >\r\n                    {fichaTrimestres\r\n                      ? fichaTrimestres.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"ambiente.id\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.ambiente\">Ambiente</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-ambiente\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"ambiente.id\"\r\n                    value={isNew ? ambientes[0] && ambientes[0].id : horarioEntity.ambiente.id}\r\n                  >\r\n                    {ambientes\r\n                      ? ambientes.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"instructor.id\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.instructor\">Instructor</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-instructor\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"instructor.id\"\r\n                    value={isNew ? instructors[0] && instructors[0].id : horarioEntity.instructor.id}\r\n                  >\r\n                    {instructors\r\n                      ? instructors.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"versionHorario.id\">\r\n                    <Translate contentKey=\"ghostceetApp.horario.versionHorario\">Version Horario</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"horario-versionHorario\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"versionHorario.id\"\r\n                    value={isNew ? versionHorarios[0] && versionHorarios[0].id : horarioEntity.versionHorario.id}\r\n                  >\r\n                    {versionHorarios\r\n                      ? versionHorarios.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/horario\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  modalidads: storeState.modalidad.entities,\r\n  dias: storeState.dia.entities,\r\n  fichaTrimestres: storeState.fichaTrimestre.entities,\r\n  ambientes: storeState.ambiente.entities,\r\n  instructors: storeState.instructor.entities,\r\n  versionHorarios: storeState.versionHorario.entities,\r\n  horarioEntity: storeState.horario.entity,\r\n  loading: storeState.horario.loading,\r\n  updating: storeState.horario.updating,\r\n  updateSuccess: storeState.horario.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getModalidads,\r\n  getDias,\r\n  getFichaTrimestres,\r\n  getAmbientes,\r\n  getInstructors,\r\n  getVersionHorarios,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(HorarioUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IHorario, defaultValue } from 'app/shared/model/horario.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_HORARIO_LIST: 'horario/FETCH_HORARIO_LIST',\r\n  FETCH_HORARIO: 'horario/FETCH_HORARIO',\r\n  CREATE_HORARIO: 'horario/CREATE_HORARIO',\r\n  UPDATE_HORARIO: 'horario/UPDATE_HORARIO',\r\n  DELETE_HORARIO: 'horario/DELETE_HORARIO',\r\n  RESET: 'horario/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IHorario>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type HorarioState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: HorarioState = initialState, action): HorarioState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_HORARIO_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_HORARIO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_HORARIO):\r\n    case REQUEST(ACTION_TYPES.UPDATE_HORARIO):\r\n    case REQUEST(ACTION_TYPES.DELETE_HORARIO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_HORARIO_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_HORARIO):\r\n    case FAILURE(ACTION_TYPES.CREATE_HORARIO):\r\n    case FAILURE(ACTION_TYPES.UPDATE_HORARIO):\r\n    case FAILURE(ACTION_TYPES.DELETE_HORARIO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_HORARIO_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_HORARIO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_HORARIO):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_HORARIO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_HORARIO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/horarios';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IHorario> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_HORARIO_LIST,\r\n  payload: axios.get<IHorario>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IHorario> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_HORARIO,\r\n    payload: axios.get<IHorario>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IHorario> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_HORARIO,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IHorario> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_HORARIO,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IHorario> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_HORARIO,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './horario.reducer';\r\nimport { IHorario } from 'app/shared/model/horario.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IHorarioProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class Horario extends React.Component<IHorarioProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { horarioList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"horario-heading\">\r\n          <Translate contentKey=\"ghostceetApp.horario.home.title\">Horarios</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.horario.home.createLabel\">Create new Horario</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.horario.horaInicio\">Hora Inicio</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.horario.horaFin\">Hora Fin</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.horario.modalidad\">Modalidad</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.horario.dia\">Dia</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.horario.fichaTrimestre\">Ficha Trimestre</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.horario.ambiente\">Ambiente</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.horario.instructor\">Instructor</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.horario.versionHorario\">Version Horario</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {horarioList.map((horario, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${horario.id}`} color=\"link\" size=\"sm\">\r\n                      {horario.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    <TextFormat type=\"date\" value={horario.horaInicio} format={APP_DATE_FORMAT} />\r\n                  </td>\r\n                  <td>\r\n                    <TextFormat type=\"date\" value={horario.horaFin} format={APP_DATE_FORMAT} />\r\n                  </td>\r\n                  <td>{horario.modalidad ? <Link to={`modalidad/${horario.modalidad.id}`}>{horario.modalidad.nombre}</Link> : ''}</td>\r\n                  <td>{horario.dia ? <Link to={`dia/${horario.dia.id}`}>{horario.dia.nombreDia}</Link> : ''}</td>\r\n                  <td>\r\n                    {horario.fichaTrimestre ? (\r\n                      <Link to={`ficha-trimestre/${horario.fichaTrimestre.id}`}>{horario.fichaTrimestre.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>{horario.ambiente ? <Link to={`ambiente/${horario.ambiente.id}`}>{horario.ambiente.id}</Link> : ''}</td>\r\n                  <td>{horario.instructor ? <Link to={`instructor/${horario.instructor.id}`}>{horario.instructor.id}</Link> : ''}</td>\r\n                  <td>\r\n                    {horario.versionHorario ? (\r\n                      <Link to={`version-horario/${horario.versionHorario.id}`}>{horario.versionHorario.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${horario.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${horario.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${horario.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ horario }: IRootState) => ({\r\n  horarioList: horario.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Horario);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Horario from './horario';\r\nimport HorarioDetail from './horario-detail';\r\nimport HorarioUpdate from './horario-update';\r\nimport HorarioDeleteDialog from './horario-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={HorarioUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={HorarioUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={HorarioDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Horario} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={HorarioDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\n// tslint:disable-next-line:no-unused-variable\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Planeacion from './planeacion';\r\nimport NivelFormacion from './nivel-formacion';\r\nimport Programa from './programa';\r\nimport Proyecto from './proyecto';\r\nimport Competencia from './competencia';\r\nimport ResultadoAprendizaje from './resultado-aprendizaje';\r\nimport Jornada from './jornada';\r\nimport Trimestre from './trimestre';\r\nimport PlaneacionTrimestre from './planeacion-trimestre';\r\nimport FaseProyecto from './fase-proyecto';\r\nimport ActividadProyecto from './actividad-proyecto';\r\nimport EstadoFicha from './estado-ficha';\r\nimport Ficha from './ficha';\r\nimport FichaTrimestre from './ficha-trimestre';\r\nimport ResultadosVistos from './resultados-vistos';\r\nimport PlaneacionActividad from './planeacion-actividad';\r\nimport Documento from './documento';\r\nimport Cliente from './cliente';\r\nimport Vinculacion from './vinculacion';\r\nimport Anio from './anio';\r\nimport Instructor from './instructor';\r\nimport VinculacionInstructor from './vinculacion-instructor';\r\nimport JornadaInstructor from './jornada-instructor';\r\nimport DiaJornada from './dia-jornada';\r\nimport Area from './area';\r\nimport AreaInstructor from './area-instructor';\r\nimport DisponibilidadCompetencias from './disponibilidad-competencias';\r\nimport DisponibilidadHoraria from './disponibilidad-horaria';\r\nimport TipoAmbiente from './tipo-ambiente';\r\nimport Sede from './sede';\r\nimport Ambiente from './ambiente';\r\nimport LimitacionAmbiente from './limitacion-ambiente';\r\nimport Modalidad from './modalidad';\r\nimport Dia from './dia';\r\nimport TrimestreVigente from './trimestre-vigente';\r\nimport VersionHorario from './version-horario';\r\nimport Horario from './horario';\r\n/* jhipster-needle-add-route-import - JHipster will add routes here */\r\n\r\nconst Routes = ({ match }) => (\r\n  <div>\r\n    <Switch>\r\n      {/* prettier-ignore */}\r\n      <ErrorBoundaryRoute path={`${match.url}/planeacion`} component={Planeacion} />\r\n      <ErrorBoundaryRoute path={`${match.url}/nivel-formacion`} component={NivelFormacion} />\r\n      <ErrorBoundaryRoute path={`${match.url}/programa`} component={Programa} />\r\n      <ErrorBoundaryRoute path={`${match.url}/proyecto`} component={Proyecto} />\r\n      <ErrorBoundaryRoute path={`${match.url}/competencia`} component={Competencia} />\r\n      <ErrorBoundaryRoute path={`${match.url}/resultado-aprendizaje`} component={ResultadoAprendizaje} />\r\n      <ErrorBoundaryRoute path={`${match.url}/jornada`} component={Jornada} />\r\n      <ErrorBoundaryRoute path={`${match.url}/trimestre`} component={Trimestre} />\r\n      <ErrorBoundaryRoute path={`${match.url}/planeacion-trimestre`} component={PlaneacionTrimestre} />\r\n      <ErrorBoundaryRoute path={`${match.url}/fase-proyecto`} component={FaseProyecto} />\r\n      <ErrorBoundaryRoute path={`${match.url}/actividad-proyecto`} component={ActividadProyecto} />\r\n      <ErrorBoundaryRoute path={`${match.url}/estado-ficha`} component={EstadoFicha} />\r\n      <ErrorBoundaryRoute path={`${match.url}/ficha`} component={Ficha} />\r\n      <ErrorBoundaryRoute path={`${match.url}/ficha-trimestre`} component={FichaTrimestre} />\r\n      <ErrorBoundaryRoute path={`${match.url}/resultados-vistos`} component={ResultadosVistos} />\r\n      <ErrorBoundaryRoute path={`${match.url}/planeacion-actividad`} component={PlaneacionActividad} />\r\n      <ErrorBoundaryRoute path={`${match.url}/documento`} component={Documento} />\r\n      <ErrorBoundaryRoute path={`${match.url}/cliente`} component={Cliente} />\r\n      <ErrorBoundaryRoute path={`${match.url}/vinculacion`} component={Vinculacion} />\r\n      <ErrorBoundaryRoute path={`${match.url}/anio`} component={Anio} />\r\n      <ErrorBoundaryRoute path={`${match.url}/instructor`} component={Instructor} />\r\n      <ErrorBoundaryRoute path={`${match.url}/vinculacion-instructor`} component={VinculacionInstructor} />\r\n      <ErrorBoundaryRoute path={`${match.url}/jornada-instructor`} component={JornadaInstructor} />\r\n      <ErrorBoundaryRoute path={`${match.url}/dia-jornada`} component={DiaJornada} />\r\n      <ErrorBoundaryRoute path={`${match.url}/area`} component={Area} />\r\n      <ErrorBoundaryRoute path={`${match.url}/area-instructor`} component={AreaInstructor} />\r\n      <ErrorBoundaryRoute path={`${match.url}/disponibilidad-competencias`} component={DisponibilidadCompetencias} />\r\n      <ErrorBoundaryRoute path={`${match.url}/disponibilidad-horaria`} component={DisponibilidadHoraria} />\r\n      <ErrorBoundaryRoute path={`${match.url}/tipo-ambiente`} component={TipoAmbiente} />\r\n      <ErrorBoundaryRoute path={`${match.url}/sede`} component={Sede} />\r\n      <ErrorBoundaryRoute path={`${match.url}/ambiente`} component={Ambiente} />\r\n      <ErrorBoundaryRoute path={`${match.url}/limitacion-ambiente`} component={LimitacionAmbiente} />\r\n      <ErrorBoundaryRoute path={`${match.url}/modalidad`} component={Modalidad} />\r\n      <ErrorBoundaryRoute path={`${match.url}/dia`} component={Dia} />\r\n      <ErrorBoundaryRoute path={`${match.url}/trimestre-vigente`} component={TrimestreVigente} />\r\n      <ErrorBoundaryRoute path={`${match.url}/version-horario`} component={VersionHorario} />\r\n      <ErrorBoundaryRoute path={`${match.url}/horario`} component={Horario} />\r\n      {/* jhipster-needle-add-route-path - JHipster will routes here */}\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Instructor from './instructor';\r\nimport InstructorDetail from './instructor-detail';\r\nimport InstructorUpdate from './instructor-update';\r\nimport InstructorDeleteDialog from './instructor-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={InstructorUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={InstructorUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={InstructorDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Instructor} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={InstructorDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './instructor.reducer';\r\n\r\nexport interface IInstructorDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class InstructorDeleteDialog extends React.Component<IInstructorDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.instructorEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { instructorEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.instructor.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.instructor.delete.question\" interpolate={{ id: instructorEntity.id }}>\r\n            Are you sure you want to delete this Instructor?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-instructor\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ instructor }: IRootState) => ({\r\n  instructorEntity: instructor.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InstructorDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './instructor.reducer';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IInstructorDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class InstructorDetail extends React.Component<IInstructorDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { instructorEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.instructor.detail.title\">Instructor</Translate> [<b>{instructorEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.instructor.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{instructorEntity.estado}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.instructor.cliente\">Cliente</Translate>\r\n            </dt>\r\n            <dd>{instructorEntity.cliente ? instructorEntity.cliente.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/instructor\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/instructor/${instructorEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ instructor }: IRootState) => ({\r\n  instructorEntity: instructor.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InstructorDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { ICliente } from 'app/shared/model/cliente.model';\r\nimport { getEntities as getClientes } from 'app/entities/cliente/cliente.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './instructor.reducer';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IInstructorUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IInstructorUpdateState {\r\n  isNew: boolean;\r\n  clienteId: string;\r\n}\r\n\r\nexport class InstructorUpdate extends React.Component<IInstructorUpdateProps, IInstructorUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      clienteId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getClientes();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { instructorEntity } = this.props;\r\n      const entity = {\r\n        ...instructorEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/instructor');\r\n  };\r\n\r\n  render() {\r\n    const { instructorEntity, clientes, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.instructor.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.instructor.home.createOrEditLabel\">Create or edit a Instructor</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : instructorEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"instructor-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.instructor.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"instructor-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && instructorEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"cliente.id\">\r\n                    <Translate contentKey=\"ghostceetApp.instructor.cliente\">Cliente</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"instructor-cliente\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"cliente.id\"\r\n                    value={isNew ? clientes[0] && clientes[0].id : instructorEntity.cliente.id}\r\n                  >\r\n                    {clientes\r\n                      ? clientes.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/instructor\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  clientes: storeState.cliente.entities,\r\n  instructorEntity: storeState.instructor.entity,\r\n  loading: storeState.instructor.loading,\r\n  updating: storeState.instructor.updating,\r\n  updateSuccess: storeState.instructor.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getClientes,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InstructorUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IInstructor, defaultValue } from 'app/shared/model/instructor.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_INSTRUCTOR_LIST: 'instructor/FETCH_INSTRUCTOR_LIST',\r\n  FETCH_INSTRUCTOR: 'instructor/FETCH_INSTRUCTOR',\r\n  CREATE_INSTRUCTOR: 'instructor/CREATE_INSTRUCTOR',\r\n  UPDATE_INSTRUCTOR: 'instructor/UPDATE_INSTRUCTOR',\r\n  DELETE_INSTRUCTOR: 'instructor/DELETE_INSTRUCTOR',\r\n  RESET: 'instructor/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IInstructor>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type InstructorState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: InstructorState = initialState, action): InstructorState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_INSTRUCTOR_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_INSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_INSTRUCTOR):\r\n    case REQUEST(ACTION_TYPES.UPDATE_INSTRUCTOR):\r\n    case REQUEST(ACTION_TYPES.DELETE_INSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_INSTRUCTOR_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_INSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.CREATE_INSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.UPDATE_INSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.DELETE_INSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_INSTRUCTOR_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_INSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_INSTRUCTOR):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_INSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_INSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/instructors';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IInstructor> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_INSTRUCTOR_LIST,\r\n    payload: axios.get<IInstructor>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IInstructor> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_INSTRUCTOR,\r\n    payload: axios.get<IInstructor>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IInstructor> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_INSTRUCTOR,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IInstructor> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_INSTRUCTOR,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IInstructor> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_INSTRUCTOR,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './instructor.reducer';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IInstructorProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IInstructorState = IPaginationBaseState;\r\n\r\nexport class Instructor extends React.Component<IInstructorProps, IInstructorState> {\r\n  state: IInstructorState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { instructorList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"instructor-heading\">\r\n          <Translate contentKey=\"ghostceetApp.instructor.home.title\">Instructors</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.instructor.home.createLabel\">Create new Instructor</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.instructor.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.instructor.cliente\">Cliente</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {instructorList.map((instructor, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${instructor.id}`} color=\"link\" size=\"sm\">\r\n                      {instructor.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${instructor.estado}`} />\r\n                  </td>\r\n                  <td>{instructor.cliente ? <Link to={`cliente/${instructor.cliente.id}`}>{instructor.cliente.id}</Link> : ''}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${instructor.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${instructor.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${instructor.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ instructor }: IRootState) => ({\r\n  instructorList: instructor.entities,\r\n  totalItems: instructor.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Instructor);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport JornadaInstructor from './jornada-instructor';\r\nimport JornadaInstructorDetail from './jornada-instructor-detail';\r\nimport JornadaInstructorUpdate from './jornada-instructor-update';\r\nimport JornadaInstructorDeleteDialog from './jornada-instructor-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={JornadaInstructorUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={JornadaInstructorUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={JornadaInstructorDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={JornadaInstructor} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={JornadaInstructorDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IJornadaInstructor } from 'app/shared/model/jornada-instructor.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './jornada-instructor.reducer';\r\n\r\nexport interface IJornadaInstructorDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class JornadaInstructorDeleteDialog extends React.Component<IJornadaInstructorDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.jornadaInstructorEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { jornadaInstructorEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.jornadaInstructor.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.jornadaInstructor.delete.question\" interpolate={{ id: jornadaInstructorEntity.id }}>\r\n            Are you sure you want to delete this JornadaInstructor?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-jornadaInstructor\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ jornadaInstructor }: IRootState) => ({\r\n  jornadaInstructorEntity: jornadaInstructor.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JornadaInstructorDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './jornada-instructor.reducer';\r\nimport { IJornadaInstructor } from 'app/shared/model/jornada-instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IJornadaInstructorDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class JornadaInstructorDetail extends React.Component<IJornadaInstructorDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { jornadaInstructorEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.jornadaInstructor.detail.title\">JornadaInstructor</Translate> [\r\n            <b>{jornadaInstructorEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"nombreJornada\">\r\n                <Translate contentKey=\"ghostceetApp.jornadaInstructor.nombreJornada\">Nombre Jornada</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{jornadaInstructorEntity.nombreJornada}</dd>\r\n            <dt>\r\n              <span id=\"descripcion\">\r\n                <Translate contentKey=\"ghostceetApp.jornadaInstructor.descripcion\">Descripcion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{jornadaInstructorEntity.descripcion}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.jornadaInstructor.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{jornadaInstructorEntity.estado}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/jornada-instructor\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/jornada-instructor/${jornadaInstructorEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ jornadaInstructor }: IRootState) => ({\r\n  jornadaInstructorEntity: jornadaInstructor.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JornadaInstructorDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './jornada-instructor.reducer';\r\nimport { IJornadaInstructor } from 'app/shared/model/jornada-instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IJornadaInstructorUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IJornadaInstructorUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class JornadaInstructorUpdate extends React.Component<IJornadaInstructorUpdateProps, IJornadaInstructorUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { jornadaInstructorEntity } = this.props;\r\n      const entity = {\r\n        ...jornadaInstructorEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/jornada-instructor');\r\n  };\r\n\r\n  render() {\r\n    const { jornadaInstructorEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.jornadaInstructor.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.jornadaInstructor.home.createOrEditLabel\">Create or edit a JornadaInstructor</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : jornadaInstructorEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"jornada-instructor-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nombreJornadaLabel\" for=\"nombreJornada\">\r\n                    <Translate contentKey=\"ghostceetApp.jornadaInstructor.nombreJornada\">Nombre Jornada</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"jornada-instructor-nombreJornada\"\r\n                    type=\"text\"\r\n                    name=\"nombreJornada\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 80, errorMessage: translate('entity.validation.maxlength', { max: 80 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"descripcionLabel\" for=\"descripcion\">\r\n                    <Translate contentKey=\"ghostceetApp.jornadaInstructor.descripcion\">Descripcion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"jornada-instructor-descripcion\"\r\n                    type=\"text\"\r\n                    name=\"descripcion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 200, errorMessage: translate('entity.validation.maxlength', { max: 200 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.jornadaInstructor.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"jornada-instructor-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && jornadaInstructorEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/jornada-instructor\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  jornadaInstructorEntity: storeState.jornadaInstructor.entity,\r\n  loading: storeState.jornadaInstructor.loading,\r\n  updating: storeState.jornadaInstructor.updating,\r\n  updateSuccess: storeState.jornadaInstructor.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JornadaInstructorUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IJornadaInstructor, defaultValue } from 'app/shared/model/jornada-instructor.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_JORNADAINSTRUCTOR_LIST: 'jornadaInstructor/FETCH_JORNADAINSTRUCTOR_LIST',\r\n  FETCH_JORNADAINSTRUCTOR: 'jornadaInstructor/FETCH_JORNADAINSTRUCTOR',\r\n  CREATE_JORNADAINSTRUCTOR: 'jornadaInstructor/CREATE_JORNADAINSTRUCTOR',\r\n  UPDATE_JORNADAINSTRUCTOR: 'jornadaInstructor/UPDATE_JORNADAINSTRUCTOR',\r\n  DELETE_JORNADAINSTRUCTOR: 'jornadaInstructor/DELETE_JORNADAINSTRUCTOR',\r\n  RESET: 'jornadaInstructor/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IJornadaInstructor>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type JornadaInstructorState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: JornadaInstructorState = initialState, action): JornadaInstructorState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_JORNADAINSTRUCTOR_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_JORNADAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_JORNADAINSTRUCTOR):\r\n    case REQUEST(ACTION_TYPES.UPDATE_JORNADAINSTRUCTOR):\r\n    case REQUEST(ACTION_TYPES.DELETE_JORNADAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_JORNADAINSTRUCTOR_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_JORNADAINSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.CREATE_JORNADAINSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.UPDATE_JORNADAINSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.DELETE_JORNADAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_JORNADAINSTRUCTOR_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_JORNADAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_JORNADAINSTRUCTOR):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_JORNADAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_JORNADAINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/jornada-instructors';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IJornadaInstructor> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_JORNADAINSTRUCTOR_LIST,\r\n    payload: axios.get<IJornadaInstructor>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IJornadaInstructor> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_JORNADAINSTRUCTOR,\r\n    payload: axios.get<IJornadaInstructor>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IJornadaInstructor> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_JORNADAINSTRUCTOR,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IJornadaInstructor> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_JORNADAINSTRUCTOR,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IJornadaInstructor> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_JORNADAINSTRUCTOR,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './jornada-instructor.reducer';\r\nimport { IJornadaInstructor } from 'app/shared/model/jornada-instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IJornadaInstructorProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IJornadaInstructorState = IPaginationBaseState;\r\n\r\nexport class JornadaInstructor extends React.Component<IJornadaInstructorProps, IJornadaInstructorState> {\r\n  state: IJornadaInstructorState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { jornadaInstructorList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"jornada-instructor-heading\">\r\n          <Translate contentKey=\"ghostceetApp.jornadaInstructor.home.title\">Jornada Instructors</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.jornadaInstructor.home.createLabel\">Create new Jornada Instructor</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('nombreJornada')}>\r\n                  <Translate contentKey=\"ghostceetApp.jornadaInstructor.nombreJornada\">Nombre Jornada</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('descripcion')}>\r\n                  <Translate contentKey=\"ghostceetApp.jornadaInstructor.descripcion\">Descripcion</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.jornadaInstructor.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {jornadaInstructorList.map((jornadaInstructor, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${jornadaInstructor.id}`} color=\"link\" size=\"sm\">\r\n                      {jornadaInstructor.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{jornadaInstructor.nombreJornada}</td>\r\n                  <td>{jornadaInstructor.descripcion}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${jornadaInstructor.estado}`} />\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${jornadaInstructor.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${jornadaInstructor.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${jornadaInstructor.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ jornadaInstructor }: IRootState) => ({\r\n  jornadaInstructorList: jornadaInstructor.entities,\r\n  totalItems: jornadaInstructor.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JornadaInstructor);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Jornada from './jornada';\r\nimport JornadaDetail from './jornada-detail';\r\nimport JornadaUpdate from './jornada-update';\r\nimport JornadaDeleteDialog from './jornada-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={JornadaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={JornadaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={JornadaDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Jornada} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={JornadaDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IJornada } from 'app/shared/model/jornada.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './jornada.reducer';\r\n\r\nexport interface IJornadaDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class JornadaDeleteDialog extends React.Component<IJornadaDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.jornadaEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { jornadaEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.jornada.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.jornada.delete.question\" interpolate={{ id: jornadaEntity.id }}>\r\n            Are you sure you want to delete this Jornada?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-jornada\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ jornada }: IRootState) => ({\r\n  jornadaEntity: jornada.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JornadaDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './jornada.reducer';\r\nimport { IJornada } from 'app/shared/model/jornada.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IJornadaDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class JornadaDetail extends React.Component<IJornadaDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { jornadaEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.jornada.detail.title\">Jornada</Translate> [<b>{jornadaEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"siglaJornada\">\r\n                <Translate contentKey=\"ghostceetApp.jornada.siglaJornada\">Sigla Jornada</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{jornadaEntity.siglaJornada}</dd>\r\n            <dt>\r\n              <span id=\"nombreJornada\">\r\n                <Translate contentKey=\"ghostceetApp.jornada.nombreJornada\">Nombre Jornada</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{jornadaEntity.nombreJornada}</dd>\r\n            <dt>\r\n              <span id=\"descripcion\">\r\n                <Translate contentKey=\"ghostceetApp.jornada.descripcion\">Descripcion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{jornadaEntity.descripcion}</dd>\r\n            <dt>\r\n              <span id=\"imagenUrl\">\r\n                <Translate contentKey=\"ghostceetApp.jornada.imagenUrl\">Imagen Url</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{jornadaEntity.imagenUrl}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.jornada.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{jornadaEntity.estado}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/jornada\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/jornada/${jornadaEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ jornada }: IRootState) => ({\r\n  jornadaEntity: jornada.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JornadaDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './jornada.reducer';\r\nimport { IJornada } from 'app/shared/model/jornada.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IJornadaUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IJornadaUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class JornadaUpdate extends React.Component<IJornadaUpdateProps, IJornadaUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { jornadaEntity } = this.props;\r\n      const entity = {\r\n        ...jornadaEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/jornada');\r\n  };\r\n\r\n  render() {\r\n    const { jornadaEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.jornada.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.jornada.home.createOrEditLabel\">Create or edit a Jornada</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : jornadaEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"jornada-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"siglaJornadaLabel\" for=\"siglaJornada\">\r\n                    <Translate contentKey=\"ghostceetApp.jornada.siglaJornada\">Sigla Jornada</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"jornada-siglaJornada\"\r\n                    type=\"text\"\r\n                    name=\"siglaJornada\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 10, errorMessage: translate('entity.validation.maxlength', { max: 10 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"nombreJornadaLabel\" for=\"nombreJornada\">\r\n                    <Translate contentKey=\"ghostceetApp.jornada.nombreJornada\">Nombre Jornada</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"jornada-nombreJornada\"\r\n                    type=\"text\"\r\n                    name=\"nombreJornada\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 85, errorMessage: translate('entity.validation.maxlength', { max: 85 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"descripcionLabel\" for=\"descripcion\">\r\n                    <Translate contentKey=\"ghostceetApp.jornada.descripcion\">Descripcion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"jornada-descripcion\"\r\n                    type=\"text\"\r\n                    name=\"descripcion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 245, errorMessage: translate('entity.validation.maxlength', { max: 245 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"imagenUrlLabel\" for=\"imagenUrl\">\r\n                    <Translate contentKey=\"ghostceetApp.jornada.imagenUrl\">Imagen Url</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"jornada-imagenUrl\"\r\n                    type=\"text\"\r\n                    name=\"imagenUrl\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 400, errorMessage: translate('entity.validation.maxlength', { max: 400 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.jornada.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"jornada-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && jornadaEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/jornada\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  jornadaEntity: storeState.jornada.entity,\r\n  loading: storeState.jornada.loading,\r\n  updating: storeState.jornada.updating,\r\n  updateSuccess: storeState.jornada.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JornadaUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IJornada, defaultValue } from 'app/shared/model/jornada.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_JORNADA_LIST: 'jornada/FETCH_JORNADA_LIST',\r\n  FETCH_JORNADA: 'jornada/FETCH_JORNADA',\r\n  CREATE_JORNADA: 'jornada/CREATE_JORNADA',\r\n  UPDATE_JORNADA: 'jornada/UPDATE_JORNADA',\r\n  DELETE_JORNADA: 'jornada/DELETE_JORNADA',\r\n  RESET: 'jornada/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IJornada>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type JornadaState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: JornadaState = initialState, action): JornadaState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_JORNADA_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_JORNADA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_JORNADA):\r\n    case REQUEST(ACTION_TYPES.UPDATE_JORNADA):\r\n    case REQUEST(ACTION_TYPES.DELETE_JORNADA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_JORNADA_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_JORNADA):\r\n    case FAILURE(ACTION_TYPES.CREATE_JORNADA):\r\n    case FAILURE(ACTION_TYPES.UPDATE_JORNADA):\r\n    case FAILURE(ACTION_TYPES.DELETE_JORNADA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_JORNADA_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_JORNADA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_JORNADA):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_JORNADA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_JORNADA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/jornadas';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IJornada> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_JORNADA_LIST,\r\n    payload: axios.get<IJornada>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IJornada> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_JORNADA,\r\n    payload: axios.get<IJornada>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IJornada> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_JORNADA,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IJornada> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_JORNADA,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IJornada> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_JORNADA,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './jornada.reducer';\r\nimport { IJornada } from 'app/shared/model/jornada.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IJornadaProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IJornadaState = IPaginationBaseState;\r\n\r\nexport class Jornada extends React.Component<IJornadaProps, IJornadaState> {\r\n  state: IJornadaState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { jornadaList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"jornada-heading\">\r\n          <Translate contentKey=\"ghostceetApp.jornada.home.title\">Jornadas</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.jornada.home.createLabel\">Create new Jornada</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('siglaJornada')}>\r\n                  <Translate contentKey=\"ghostceetApp.jornada.siglaJornada\">Sigla Jornada</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('nombreJornada')}>\r\n                  <Translate contentKey=\"ghostceetApp.jornada.nombreJornada\">Nombre Jornada</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('descripcion')}>\r\n                  <Translate contentKey=\"ghostceetApp.jornada.descripcion\">Descripcion</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('imagenUrl')}>\r\n                  <Translate contentKey=\"ghostceetApp.jornada.imagenUrl\">Imagen Url</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.jornada.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {jornadaList.map((jornada, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${jornada.id}`} color=\"link\" size=\"sm\">\r\n                      {jornada.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{jornada.siglaJornada}</td>\r\n                  <td>{jornada.nombreJornada}</td>\r\n                  <td>{jornada.descripcion}</td>\r\n                  <td>{jornada.imagenUrl}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${jornada.estado}`} />\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${jornada.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${jornada.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${jornada.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ jornada }: IRootState) => ({\r\n  jornadaList: jornada.entities,\r\n  totalItems: jornada.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Jornada);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport LimitacionAmbiente from './limitacion-ambiente';\r\nimport LimitacionAmbienteDetail from './limitacion-ambiente-detail';\r\nimport LimitacionAmbienteUpdate from './limitacion-ambiente-update';\r\nimport LimitacionAmbienteDeleteDialog from './limitacion-ambiente-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={LimitacionAmbienteUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={LimitacionAmbienteUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={LimitacionAmbienteDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={LimitacionAmbiente} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={LimitacionAmbienteDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ILimitacionAmbiente } from 'app/shared/model/limitacion-ambiente.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './limitacion-ambiente.reducer';\r\n\r\nexport interface ILimitacionAmbienteDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class LimitacionAmbienteDeleteDialog extends React.Component<ILimitacionAmbienteDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.limitacionAmbienteEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { limitacionAmbienteEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.limitacionAmbiente.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.limitacionAmbiente.delete.question\" interpolate={{ id: limitacionAmbienteEntity.id }}>\r\n            Are you sure you want to delete this LimitacionAmbiente?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-limitacionAmbiente\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ limitacionAmbiente }: IRootState) => ({\r\n  limitacionAmbienteEntity: limitacionAmbiente.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LimitacionAmbienteDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './limitacion-ambiente.reducer';\r\nimport { ILimitacionAmbiente } from 'app/shared/model/limitacion-ambiente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface ILimitacionAmbienteDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class LimitacionAmbienteDetail extends React.Component<ILimitacionAmbienteDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { limitacionAmbienteEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.limitacionAmbiente.detail.title\">LimitacionAmbiente</Translate> [\r\n            <b>{limitacionAmbienteEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.limitacionAmbiente.resultadoAprendizaje\">Resultado Aprendizaje</Translate>\r\n            </dt>\r\n            <dd>{limitacionAmbienteEntity.resultadoAprendizaje ? limitacionAmbienteEntity.resultadoAprendizaje.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.limitacionAmbiente.ambiente\">Ambiente</Translate>\r\n            </dt>\r\n            <dd>{limitacionAmbienteEntity.ambiente ? limitacionAmbienteEntity.ambiente.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/limitacion-ambiente\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/limitacion-ambiente/${limitacionAmbienteEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ limitacionAmbiente }: IRootState) => ({\r\n  limitacionAmbienteEntity: limitacionAmbiente.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LimitacionAmbienteDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IResultadoAprendizaje } from 'app/shared/model/resultado-aprendizaje.model';\r\nimport { getEntities as getResultadoAprendizajes } from 'app/entities/resultado-aprendizaje/resultado-aprendizaje.reducer';\r\nimport { IAmbiente } from 'app/shared/model/ambiente.model';\r\nimport { getEntities as getAmbientes } from 'app/entities/ambiente/ambiente.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './limitacion-ambiente.reducer';\r\nimport { ILimitacionAmbiente } from 'app/shared/model/limitacion-ambiente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface ILimitacionAmbienteUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface ILimitacionAmbienteUpdateState {\r\n  isNew: boolean;\r\n  resultadoAprendizajeId: string;\r\n  ambienteId: string;\r\n}\r\n\r\nexport class LimitacionAmbienteUpdate extends React.Component<ILimitacionAmbienteUpdateProps, ILimitacionAmbienteUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resultadoAprendizajeId: '0',\r\n      ambienteId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getResultadoAprendizajes();\r\n    this.props.getAmbientes();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { limitacionAmbienteEntity } = this.props;\r\n      const entity = {\r\n        ...limitacionAmbienteEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/limitacion-ambiente');\r\n  };\r\n\r\n  render() {\r\n    const { limitacionAmbienteEntity, resultadoAprendizajes, ambientes, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.limitacionAmbiente.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.limitacionAmbiente.home.createOrEditLabel\">Create or edit a LimitacionAmbiente</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : limitacionAmbienteEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"limitacion-ambiente-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label for=\"resultadoAprendizaje.id\">\r\n                    <Translate contentKey=\"ghostceetApp.limitacionAmbiente.resultadoAprendizaje\">Resultado Aprendizaje</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"limitacion-ambiente-resultadoAprendizaje\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"resultadoAprendizaje.id\"\r\n                    value={\r\n                      isNew ? resultadoAprendizajes[0] && resultadoAprendizajes[0].id : limitacionAmbienteEntity.resultadoAprendizaje.id\r\n                    }\r\n                  >\r\n                    {resultadoAprendizajes\r\n                      ? resultadoAprendizajes.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"ambiente.id\">\r\n                    <Translate contentKey=\"ghostceetApp.limitacionAmbiente.ambiente\">Ambiente</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"limitacion-ambiente-ambiente\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"ambiente.id\"\r\n                    value={isNew ? ambientes[0] && ambientes[0].id : limitacionAmbienteEntity.ambiente.id}\r\n                  >\r\n                    {ambientes\r\n                      ? ambientes.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/limitacion-ambiente\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  resultadoAprendizajes: storeState.resultadoAprendizaje.entities,\r\n  ambientes: storeState.ambiente.entities,\r\n  limitacionAmbienteEntity: storeState.limitacionAmbiente.entity,\r\n  loading: storeState.limitacionAmbiente.loading,\r\n  updating: storeState.limitacionAmbiente.updating,\r\n  updateSuccess: storeState.limitacionAmbiente.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getResultadoAprendizajes,\r\n  getAmbientes,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LimitacionAmbienteUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { ILimitacionAmbiente, defaultValue } from 'app/shared/model/limitacion-ambiente.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_LIMITACIONAMBIENTE_LIST: 'limitacionAmbiente/FETCH_LIMITACIONAMBIENTE_LIST',\r\n  FETCH_LIMITACIONAMBIENTE: 'limitacionAmbiente/FETCH_LIMITACIONAMBIENTE',\r\n  CREATE_LIMITACIONAMBIENTE: 'limitacionAmbiente/CREATE_LIMITACIONAMBIENTE',\r\n  UPDATE_LIMITACIONAMBIENTE: 'limitacionAmbiente/UPDATE_LIMITACIONAMBIENTE',\r\n  DELETE_LIMITACIONAMBIENTE: 'limitacionAmbiente/DELETE_LIMITACIONAMBIENTE',\r\n  RESET: 'limitacionAmbiente/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<ILimitacionAmbiente>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type LimitacionAmbienteState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: LimitacionAmbienteState = initialState, action): LimitacionAmbienteState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_LIMITACIONAMBIENTE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_LIMITACIONAMBIENTE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_LIMITACIONAMBIENTE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_LIMITACIONAMBIENTE):\r\n    case REQUEST(ACTION_TYPES.DELETE_LIMITACIONAMBIENTE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_LIMITACIONAMBIENTE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_LIMITACIONAMBIENTE):\r\n    case FAILURE(ACTION_TYPES.CREATE_LIMITACIONAMBIENTE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_LIMITACIONAMBIENTE):\r\n    case FAILURE(ACTION_TYPES.DELETE_LIMITACIONAMBIENTE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_LIMITACIONAMBIENTE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_LIMITACIONAMBIENTE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_LIMITACIONAMBIENTE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_LIMITACIONAMBIENTE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_LIMITACIONAMBIENTE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/limitacion-ambientes';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<ILimitacionAmbiente> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_LIMITACIONAMBIENTE_LIST,\r\n  payload: axios.get<ILimitacionAmbiente>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<ILimitacionAmbiente> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_LIMITACIONAMBIENTE,\r\n    payload: axios.get<ILimitacionAmbiente>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<ILimitacionAmbiente> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_LIMITACIONAMBIENTE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<ILimitacionAmbiente> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_LIMITACIONAMBIENTE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<ILimitacionAmbiente> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_LIMITACIONAMBIENTE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './limitacion-ambiente.reducer';\r\nimport { ILimitacionAmbiente } from 'app/shared/model/limitacion-ambiente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface ILimitacionAmbienteProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class LimitacionAmbiente extends React.Component<ILimitacionAmbienteProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { limitacionAmbienteList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"limitacion-ambiente-heading\">\r\n          <Translate contentKey=\"ghostceetApp.limitacionAmbiente.home.title\">Limitacion Ambientes</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.limitacionAmbiente.home.createLabel\">Create new Limitacion Ambiente</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.limitacionAmbiente.resultadoAprendizaje\">Resultado Aprendizaje</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.limitacionAmbiente.ambiente\">Ambiente</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {limitacionAmbienteList.map((limitacionAmbiente, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${limitacionAmbiente.id}`} color=\"link\" size=\"sm\">\r\n                      {limitacionAmbiente.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    {limitacionAmbiente.resultadoAprendizaje ? (\r\n                      <Link to={`resultado-aprendizaje/${limitacionAmbiente.resultadoAprendizaje.id}`}>\r\n                        {limitacionAmbiente.resultadoAprendizaje.id}\r\n                      </Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {limitacionAmbiente.ambiente ? (\r\n                      <Link to={`ambiente/${limitacionAmbiente.ambiente.id}`}>{limitacionAmbiente.ambiente.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${limitacionAmbiente.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${limitacionAmbiente.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${limitacionAmbiente.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ limitacionAmbiente }: IRootState) => ({\r\n  limitacionAmbienteList: limitacionAmbiente.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LimitacionAmbiente);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Modalidad from './modalidad';\r\nimport ModalidadDetail from './modalidad-detail';\r\nimport ModalidadUpdate from './modalidad-update';\r\nimport ModalidadDeleteDialog from './modalidad-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={ModalidadUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={ModalidadUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={ModalidadDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Modalidad} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={ModalidadDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IModalidad } from 'app/shared/model/modalidad.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './modalidad.reducer';\r\n\r\nexport interface IModalidadDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ModalidadDeleteDialog extends React.Component<IModalidadDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.modalidadEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { modalidadEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.modalidad.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.modalidad.delete.question\" interpolate={{ id: modalidadEntity.id }}>\r\n            Are you sure you want to delete this Modalidad?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-modalidad\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ modalidad }: IRootState) => ({\r\n  modalidadEntity: modalidad.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ModalidadDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './modalidad.reducer';\r\nimport { IModalidad } from 'app/shared/model/modalidad.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IModalidadDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ModalidadDetail extends React.Component<IModalidadDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { modalidadEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.modalidad.detail.title\">Modalidad</Translate> [<b>{modalidadEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"nombre\">\r\n                <Translate contentKey=\"ghostceetApp.modalidad.nombre\">Nombre</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{modalidadEntity.nombre}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.modalidad.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{modalidadEntity.estado}</dd>\r\n            <dt>\r\n              <span id=\"color\">\r\n                <Translate contentKey=\"ghostceetApp.modalidad.color\">Color</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{modalidadEntity.color}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/modalidad\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/modalidad/${modalidadEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ modalidad }: IRootState) => ({\r\n  modalidadEntity: modalidad.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ModalidadDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './modalidad.reducer';\r\nimport { IModalidad } from 'app/shared/model/modalidad.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IModalidadUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IModalidadUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class ModalidadUpdate extends React.Component<IModalidadUpdateProps, IModalidadUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { modalidadEntity } = this.props;\r\n      const entity = {\r\n        ...modalidadEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/modalidad');\r\n  };\r\n\r\n  render() {\r\n    const { modalidadEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.modalidad.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.modalidad.home.createOrEditLabel\">Create or edit a Modalidad</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : modalidadEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"modalidad-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nombreLabel\" for=\"nombre\">\r\n                    <Translate contentKey=\"ghostceetApp.modalidad.nombre\">Nombre</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"modalidad-nombre\"\r\n                    type=\"text\"\r\n                    name=\"nombre\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 100, errorMessage: translate('entity.validation.maxlength', { max: 100 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.modalidad.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"modalidad-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && modalidadEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"colorLabel\" for=\"color\">\r\n                    <Translate contentKey=\"ghostceetApp.modalidad.color\">Color</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"modalidad-color\"\r\n                    type=\"text\"\r\n                    name=\"color\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 50, errorMessage: translate('entity.validation.maxlength', { max: 50 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/modalidad\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  modalidadEntity: storeState.modalidad.entity,\r\n  loading: storeState.modalidad.loading,\r\n  updating: storeState.modalidad.updating,\r\n  updateSuccess: storeState.modalidad.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ModalidadUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IModalidad, defaultValue } from 'app/shared/model/modalidad.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_MODALIDAD_LIST: 'modalidad/FETCH_MODALIDAD_LIST',\r\n  FETCH_MODALIDAD: 'modalidad/FETCH_MODALIDAD',\r\n  CREATE_MODALIDAD: 'modalidad/CREATE_MODALIDAD',\r\n  UPDATE_MODALIDAD: 'modalidad/UPDATE_MODALIDAD',\r\n  DELETE_MODALIDAD: 'modalidad/DELETE_MODALIDAD',\r\n  RESET: 'modalidad/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IModalidad>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type ModalidadState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: ModalidadState = initialState, action): ModalidadState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_MODALIDAD_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_MODALIDAD):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_MODALIDAD):\r\n    case REQUEST(ACTION_TYPES.UPDATE_MODALIDAD):\r\n    case REQUEST(ACTION_TYPES.DELETE_MODALIDAD):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_MODALIDAD_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_MODALIDAD):\r\n    case FAILURE(ACTION_TYPES.CREATE_MODALIDAD):\r\n    case FAILURE(ACTION_TYPES.UPDATE_MODALIDAD):\r\n    case FAILURE(ACTION_TYPES.DELETE_MODALIDAD):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_MODALIDAD_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_MODALIDAD):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_MODALIDAD):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_MODALIDAD):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_MODALIDAD):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/modalidads';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IModalidad> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_MODALIDAD_LIST,\r\n  payload: axios.get<IModalidad>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IModalidad> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_MODALIDAD,\r\n    payload: axios.get<IModalidad>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IModalidad> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_MODALIDAD,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IModalidad> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_MODALIDAD,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IModalidad> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_MODALIDAD,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './modalidad.reducer';\r\nimport { IModalidad } from 'app/shared/model/modalidad.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IModalidadProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class Modalidad extends React.Component<IModalidadProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { modalidadList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"modalidad-heading\">\r\n          <Translate contentKey=\"ghostceetApp.modalidad.home.title\">Modalidads</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.modalidad.home.createLabel\">Create new Modalidad</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.modalidad.nombre\">Nombre</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.modalidad.estado\">Estado</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.modalidad.color\">Color</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {modalidadList.map((modalidad, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${modalidad.id}`} color=\"link\" size=\"sm\">\r\n                      {modalidad.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{modalidad.nombre}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${modalidad.estado}`} />\r\n                  </td>\r\n                  <td>{modalidad.color}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${modalidad.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${modalidad.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${modalidad.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ modalidad }: IRootState) => ({\r\n  modalidadList: modalidad.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Modalidad);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport NivelFormacion from './nivel-formacion';\r\nimport NivelFormacionDetail from './nivel-formacion-detail';\r\nimport NivelFormacionUpdate from './nivel-formacion-update';\r\nimport NivelFormacionDeleteDialog from './nivel-formacion-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={NivelFormacionUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={NivelFormacionUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={NivelFormacionDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={NivelFormacion} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={NivelFormacionDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { INivelFormacion } from 'app/shared/model/nivel-formacion.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './nivel-formacion.reducer';\r\n\r\nexport interface INivelFormacionDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class NivelFormacionDeleteDialog extends React.Component<INivelFormacionDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.nivelFormacionEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { nivelFormacionEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.nivelFormacion.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.nivelFormacion.delete.question\" interpolate={{ id: nivelFormacionEntity.id }}>\r\n            Are you sure you want to delete this NivelFormacion?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-nivelFormacion\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ nivelFormacion }: IRootState) => ({\r\n  nivelFormacionEntity: nivelFormacion.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NivelFormacionDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './nivel-formacion.reducer';\r\nimport { INivelFormacion } from 'app/shared/model/nivel-formacion.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface INivelFormacionDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class NivelFormacionDetail extends React.Component<INivelFormacionDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { nivelFormacionEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.nivelFormacion.detail.title\">NivelFormacion</Translate> [<b>{nivelFormacionEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"nivelFormacion\">\r\n                <Translate contentKey=\"ghostceetApp.nivelFormacion.nivelFormacion\">Nivel Formacion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{nivelFormacionEntity.nivelFormacion}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.nivelFormacion.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{nivelFormacionEntity.estado}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/nivel-formacion\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/nivel-formacion/${nivelFormacionEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ nivelFormacion }: IRootState) => ({\r\n  nivelFormacionEntity: nivelFormacion.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NivelFormacionDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './nivel-formacion.reducer';\r\nimport { INivelFormacion } from 'app/shared/model/nivel-formacion.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface INivelFormacionUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface INivelFormacionUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class NivelFormacionUpdate extends React.Component<INivelFormacionUpdateProps, INivelFormacionUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { nivelFormacionEntity } = this.props;\r\n      const entity = {\r\n        ...nivelFormacionEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/nivel-formacion');\r\n  };\r\n\r\n  render() {\r\n    const { nivelFormacionEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.nivelFormacion.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.nivelFormacion.home.createOrEditLabel\">Create or edit a NivelFormacion</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : nivelFormacionEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"nivel-formacion-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nivelFormacionLabel\" for=\"nivelFormacion\">\r\n                    <Translate contentKey=\"ghostceetApp.nivelFormacion.nivelFormacion\">Nivel Formacion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"nivel-formacion-nivelFormacion\"\r\n                    type=\"text\"\r\n                    name=\"nivelFormacion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 20, errorMessage: translate('entity.validation.maxlength', { max: 20 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.nivelFormacion.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"nivel-formacion-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && nivelFormacionEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/nivel-formacion\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  nivelFormacionEntity: storeState.nivelFormacion.entity,\r\n  loading: storeState.nivelFormacion.loading,\r\n  updating: storeState.nivelFormacion.updating,\r\n  updateSuccess: storeState.nivelFormacion.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NivelFormacionUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { INivelFormacion, defaultValue } from 'app/shared/model/nivel-formacion.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_NIVELFORMACION_LIST: 'nivelFormacion/FETCH_NIVELFORMACION_LIST',\r\n  FETCH_NIVELFORMACION: 'nivelFormacion/FETCH_NIVELFORMACION',\r\n  CREATE_NIVELFORMACION: 'nivelFormacion/CREATE_NIVELFORMACION',\r\n  UPDATE_NIVELFORMACION: 'nivelFormacion/UPDATE_NIVELFORMACION',\r\n  DELETE_NIVELFORMACION: 'nivelFormacion/DELETE_NIVELFORMACION',\r\n  RESET: 'nivelFormacion/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<INivelFormacion>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type NivelFormacionState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: NivelFormacionState = initialState, action): NivelFormacionState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_NIVELFORMACION_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_NIVELFORMACION):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_NIVELFORMACION):\r\n    case REQUEST(ACTION_TYPES.UPDATE_NIVELFORMACION):\r\n    case REQUEST(ACTION_TYPES.DELETE_NIVELFORMACION):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_NIVELFORMACION_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_NIVELFORMACION):\r\n    case FAILURE(ACTION_TYPES.CREATE_NIVELFORMACION):\r\n    case FAILURE(ACTION_TYPES.UPDATE_NIVELFORMACION):\r\n    case FAILURE(ACTION_TYPES.DELETE_NIVELFORMACION):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_NIVELFORMACION_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_NIVELFORMACION):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_NIVELFORMACION):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_NIVELFORMACION):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_NIVELFORMACION):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/nivel-formacions';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<INivelFormacion> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_NIVELFORMACION_LIST,\r\n    payload: axios.get<INivelFormacion>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<INivelFormacion> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_NIVELFORMACION,\r\n    payload: axios.get<INivelFormacion>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<INivelFormacion> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_NIVELFORMACION,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<INivelFormacion> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_NIVELFORMACION,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<INivelFormacion> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_NIVELFORMACION,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './nivel-formacion.reducer';\r\nimport { INivelFormacion } from 'app/shared/model/nivel-formacion.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface INivelFormacionProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type INivelFormacionState = IPaginationBaseState;\r\n\r\nexport class NivelFormacion extends React.Component<INivelFormacionProps, INivelFormacionState> {\r\n  state: INivelFormacionState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { nivelFormacionList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"nivel-formacion-heading\">\r\n          <Translate contentKey=\"ghostceetApp.nivelFormacion.home.title\">Nivel Formacions</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.nivelFormacion.home.createLabel\">Create new Nivel Formacion</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('nivelFormacion')}>\r\n                  <Translate contentKey=\"ghostceetApp.nivelFormacion.nivelFormacion\">Nivel Formacion</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.nivelFormacion.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {nivelFormacionList.map((nivelFormacion, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${nivelFormacion.id}`} color=\"link\" size=\"sm\">\r\n                      {nivelFormacion.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{nivelFormacion.nivelFormacion}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${nivelFormacion.estado}`} />\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${nivelFormacion.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${nivelFormacion.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${nivelFormacion.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ nivelFormacion }: IRootState) => ({\r\n  nivelFormacionList: nivelFormacion.entities,\r\n  totalItems: nivelFormacion.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(NivelFormacion);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport PlaneacionActividad from './planeacion-actividad';\r\nimport PlaneacionActividadDetail from './planeacion-actividad-detail';\r\nimport PlaneacionActividadUpdate from './planeacion-actividad-update';\r\nimport PlaneacionActividadDeleteDialog from './planeacion-actividad-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={PlaneacionActividadUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={PlaneacionActividadUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={PlaneacionActividadDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={PlaneacionActividad} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={PlaneacionActividadDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IPlaneacionActividad } from 'app/shared/model/planeacion-actividad.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './planeacion-actividad.reducer';\r\n\r\nexport interface IPlaneacionActividadDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class PlaneacionActividadDeleteDialog extends React.Component<IPlaneacionActividadDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.planeacionActividadEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { planeacionActividadEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.planeacionActividad.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.planeacionActividad.delete.question\" interpolate={{ id: planeacionActividadEntity.id }}>\r\n            Are you sure you want to delete this PlaneacionActividad?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-planeacionActividad\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ planeacionActividad }: IRootState) => ({\r\n  planeacionActividadEntity: planeacionActividad.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionActividadDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './planeacion-actividad.reducer';\r\nimport { IPlaneacionActividad } from 'app/shared/model/planeacion-actividad.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPlaneacionActividadDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class PlaneacionActividadDetail extends React.Component<IPlaneacionActividadDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { planeacionActividadEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.planeacionActividad.detail.title\">PlaneacionActividad</Translate> [\r\n            <b>{planeacionActividadEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.planeacionActividad.planeacionTrimestre\">Planeacion Trimestre</Translate>\r\n            </dt>\r\n            <dd>{planeacionActividadEntity.planeacionTrimestre ? planeacionActividadEntity.planeacionTrimestre.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.planeacionActividad.actividadProyecto\">Actividad Proyecto</Translate>\r\n            </dt>\r\n            <dd>{planeacionActividadEntity.actividadProyecto ? planeacionActividadEntity.actividadProyecto.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/planeacion-actividad\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/planeacion-actividad/${planeacionActividadEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ planeacionActividad }: IRootState) => ({\r\n  planeacionActividadEntity: planeacionActividad.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionActividadDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IPlaneacionTrimestre } from 'app/shared/model/planeacion-trimestre.model';\r\nimport { getEntities as getPlaneacionTrimestres } from 'app/entities/planeacion-trimestre/planeacion-trimestre.reducer';\r\nimport { IActividadProyecto } from 'app/shared/model/actividad-proyecto.model';\r\nimport { getEntities as getActividadProyectos } from 'app/entities/actividad-proyecto/actividad-proyecto.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './planeacion-actividad.reducer';\r\nimport { IPlaneacionActividad } from 'app/shared/model/planeacion-actividad.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IPlaneacionActividadUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IPlaneacionActividadUpdateState {\r\n  isNew: boolean;\r\n  planeacionTrimestreId: string;\r\n  actividadProyectoId: string;\r\n}\r\n\r\nexport class PlaneacionActividadUpdate extends React.Component<IPlaneacionActividadUpdateProps, IPlaneacionActividadUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      planeacionTrimestreId: '0',\r\n      actividadProyectoId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getPlaneacionTrimestres();\r\n    this.props.getActividadProyectos();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { planeacionActividadEntity } = this.props;\r\n      const entity = {\r\n        ...planeacionActividadEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/planeacion-actividad');\r\n  };\r\n\r\n  render() {\r\n    const { planeacionActividadEntity, planeacionTrimestres, actividadProyectos, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.planeacionActividad.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.planeacionActividad.home.createOrEditLabel\">\r\n                Create or edit a PlaneacionActividad\r\n              </Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : planeacionActividadEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"planeacion-actividad-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label for=\"planeacionTrimestre.id\">\r\n                    <Translate contentKey=\"ghostceetApp.planeacionActividad.planeacionTrimestre\">Planeacion Trimestre</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"planeacion-actividad-planeacionTrimestre\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"planeacionTrimestre.id\"\r\n                    value={isNew ? planeacionTrimestres[0] && planeacionTrimestres[0].id : planeacionActividadEntity.planeacionTrimestre.id}\r\n                  >\r\n                    {planeacionTrimestres\r\n                      ? planeacionTrimestres.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"actividadProyecto.id\">\r\n                    <Translate contentKey=\"ghostceetApp.planeacionActividad.actividadProyecto\">Actividad Proyecto</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"planeacion-actividad-actividadProyecto\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"actividadProyecto.id\"\r\n                    value={isNew ? actividadProyectos[0] && actividadProyectos[0].id : planeacionActividadEntity.actividadProyecto.id}\r\n                  >\r\n                    {actividadProyectos\r\n                      ? actividadProyectos.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/planeacion-actividad\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  planeacionTrimestres: storeState.planeacionTrimestre.entities,\r\n  actividadProyectos: storeState.actividadProyecto.entities,\r\n  planeacionActividadEntity: storeState.planeacionActividad.entity,\r\n  loading: storeState.planeacionActividad.loading,\r\n  updating: storeState.planeacionActividad.updating,\r\n  updateSuccess: storeState.planeacionActividad.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPlaneacionTrimestres,\r\n  getActividadProyectos,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionActividadUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IPlaneacionActividad, defaultValue } from 'app/shared/model/planeacion-actividad.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_PLANEACIONACTIVIDAD_LIST: 'planeacionActividad/FETCH_PLANEACIONACTIVIDAD_LIST',\r\n  FETCH_PLANEACIONACTIVIDAD: 'planeacionActividad/FETCH_PLANEACIONACTIVIDAD',\r\n  CREATE_PLANEACIONACTIVIDAD: 'planeacionActividad/CREATE_PLANEACIONACTIVIDAD',\r\n  UPDATE_PLANEACIONACTIVIDAD: 'planeacionActividad/UPDATE_PLANEACIONACTIVIDAD',\r\n  DELETE_PLANEACIONACTIVIDAD: 'planeacionActividad/DELETE_PLANEACIONACTIVIDAD',\r\n  RESET: 'planeacionActividad/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IPlaneacionActividad>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type PlaneacionActividadState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: PlaneacionActividadState = initialState, action): PlaneacionActividadState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_PLANEACIONACTIVIDAD_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_PLANEACIONACTIVIDAD):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_PLANEACIONACTIVIDAD):\r\n    case REQUEST(ACTION_TYPES.UPDATE_PLANEACIONACTIVIDAD):\r\n    case REQUEST(ACTION_TYPES.DELETE_PLANEACIONACTIVIDAD):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_PLANEACIONACTIVIDAD_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_PLANEACIONACTIVIDAD):\r\n    case FAILURE(ACTION_TYPES.CREATE_PLANEACIONACTIVIDAD):\r\n    case FAILURE(ACTION_TYPES.UPDATE_PLANEACIONACTIVIDAD):\r\n    case FAILURE(ACTION_TYPES.DELETE_PLANEACIONACTIVIDAD):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PLANEACIONACTIVIDAD_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PLANEACIONACTIVIDAD):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_PLANEACIONACTIVIDAD):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PLANEACIONACTIVIDAD):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_PLANEACIONACTIVIDAD):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/planeacion-actividads';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IPlaneacionActividad> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_PLANEACIONACTIVIDAD_LIST,\r\n  payload: axios.get<IPlaneacionActividad>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IPlaneacionActividad> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PLANEACIONACTIVIDAD,\r\n    payload: axios.get<IPlaneacionActividad>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IPlaneacionActividad> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_PLANEACIONACTIVIDAD,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IPlaneacionActividad> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_PLANEACIONACTIVIDAD,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IPlaneacionActividad> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_PLANEACIONACTIVIDAD,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './planeacion-actividad.reducer';\r\nimport { IPlaneacionActividad } from 'app/shared/model/planeacion-actividad.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPlaneacionActividadProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class PlaneacionActividad extends React.Component<IPlaneacionActividadProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { planeacionActividadList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"planeacion-actividad-heading\">\r\n          <Translate contentKey=\"ghostceetApp.planeacionActividad.home.title\">Planeacion Actividads</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.planeacionActividad.home.createLabel\">Create new Planeacion Actividad</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.planeacionActividad.planeacionTrimestre\">Planeacion Trimestre</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.planeacionActividad.actividadProyecto\">Actividad Proyecto</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {planeacionActividadList.map((planeacionActividad, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${planeacionActividad.id}`} color=\"link\" size=\"sm\">\r\n                      {planeacionActividad.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    {planeacionActividad.planeacionTrimestre ? (\r\n                      <Link to={`planeacion-trimestre/${planeacionActividad.planeacionTrimestre.id}`}>\r\n                        {planeacionActividad.planeacionTrimestre.id}\r\n                      </Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {planeacionActividad.actividadProyecto ? (\r\n                      <Link to={`actividad-proyecto/${planeacionActividad.actividadProyecto.id}`}>\r\n                        {planeacionActividad.actividadProyecto.id}\r\n                      </Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${planeacionActividad.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${planeacionActividad.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${planeacionActividad.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ planeacionActividad }: IRootState) => ({\r\n  planeacionActividadList: planeacionActividad.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionActividad);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport PlaneacionTrimestre from './planeacion-trimestre';\r\nimport PlaneacionTrimestreDetail from './planeacion-trimestre-detail';\r\nimport PlaneacionTrimestreUpdate from './planeacion-trimestre-update';\r\nimport PlaneacionTrimestreDeleteDialog from './planeacion-trimestre-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={PlaneacionTrimestreUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={PlaneacionTrimestreUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={PlaneacionTrimestreDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={PlaneacionTrimestre} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={PlaneacionTrimestreDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IPlaneacionTrimestre } from 'app/shared/model/planeacion-trimestre.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './planeacion-trimestre.reducer';\r\n\r\nexport interface IPlaneacionTrimestreDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class PlaneacionTrimestreDeleteDialog extends React.Component<IPlaneacionTrimestreDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.planeacionTrimestreEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { planeacionTrimestreEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.planeacionTrimestre.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.planeacionTrimestre.delete.question\" interpolate={{ id: planeacionTrimestreEntity.id }}>\r\n            Are you sure you want to delete this PlaneacionTrimestre?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-planeacionTrimestre\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ planeacionTrimestre }: IRootState) => ({\r\n  planeacionTrimestreEntity: planeacionTrimestre.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionTrimestreDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './planeacion-trimestre.reducer';\r\nimport { IPlaneacionTrimestre } from 'app/shared/model/planeacion-trimestre.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPlaneacionTrimestreDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class PlaneacionTrimestreDetail extends React.Component<IPlaneacionTrimestreDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { planeacionTrimestreEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.planeacionTrimestre.detail.title\">PlaneacionTrimestre</Translate> [\r\n            <b>{planeacionTrimestreEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.planeacionTrimestre.trimestre\">Trimestre</Translate>\r\n            </dt>\r\n            <dd>{planeacionTrimestreEntity.trimestre ? planeacionTrimestreEntity.trimestre.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/planeacion-trimestre\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/planeacion-trimestre/${planeacionTrimestreEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ planeacionTrimestre }: IRootState) => ({\r\n  planeacionTrimestreEntity: planeacionTrimestre.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionTrimestreDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { ITrimestre } from 'app/shared/model/trimestre.model';\r\nimport { getEntities as getTrimestres } from 'app/entities/trimestre/trimestre.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './planeacion-trimestre.reducer';\r\nimport { IPlaneacionTrimestre } from 'app/shared/model/planeacion-trimestre.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IPlaneacionTrimestreUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IPlaneacionTrimestreUpdateState {\r\n  isNew: boolean;\r\n  trimestreId: string;\r\n}\r\n\r\nexport class PlaneacionTrimestreUpdate extends React.Component<IPlaneacionTrimestreUpdateProps, IPlaneacionTrimestreUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trimestreId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getTrimestres();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { planeacionTrimestreEntity } = this.props;\r\n      const entity = {\r\n        ...planeacionTrimestreEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/planeacion-trimestre');\r\n  };\r\n\r\n  render() {\r\n    const { planeacionTrimestreEntity, trimestres, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.planeacionTrimestre.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.planeacionTrimestre.home.createOrEditLabel\">\r\n                Create or edit a PlaneacionTrimestre\r\n              </Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : planeacionTrimestreEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"planeacion-trimestre-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label for=\"trimestre.id\">\r\n                    <Translate contentKey=\"ghostceetApp.planeacionTrimestre.trimestre\">Trimestre</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"planeacion-trimestre-trimestre\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"trimestre.id\"\r\n                    value={isNew ? trimestres[0] && trimestres[0].id : planeacionTrimestreEntity.trimestre.id}\r\n                  >\r\n                    {trimestres\r\n                      ? trimestres.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/planeacion-trimestre\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  trimestres: storeState.trimestre.entities,\r\n  planeacionTrimestreEntity: storeState.planeacionTrimestre.entity,\r\n  loading: storeState.planeacionTrimestre.loading,\r\n  updating: storeState.planeacionTrimestre.updating,\r\n  updateSuccess: storeState.planeacionTrimestre.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getTrimestres,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionTrimestreUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IPlaneacionTrimestre, defaultValue } from 'app/shared/model/planeacion-trimestre.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_PLANEACIONTRIMESTRE_LIST: 'planeacionTrimestre/FETCH_PLANEACIONTRIMESTRE_LIST',\r\n  FETCH_PLANEACIONTRIMESTRE: 'planeacionTrimestre/FETCH_PLANEACIONTRIMESTRE',\r\n  CREATE_PLANEACIONTRIMESTRE: 'planeacionTrimestre/CREATE_PLANEACIONTRIMESTRE',\r\n  UPDATE_PLANEACIONTRIMESTRE: 'planeacionTrimestre/UPDATE_PLANEACIONTRIMESTRE',\r\n  DELETE_PLANEACIONTRIMESTRE: 'planeacionTrimestre/DELETE_PLANEACIONTRIMESTRE',\r\n  RESET: 'planeacionTrimestre/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IPlaneacionTrimestre>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type PlaneacionTrimestreState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: PlaneacionTrimestreState = initialState, action): PlaneacionTrimestreState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_PLANEACIONTRIMESTRE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_PLANEACIONTRIMESTRE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_PLANEACIONTRIMESTRE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_PLANEACIONTRIMESTRE):\r\n    case REQUEST(ACTION_TYPES.DELETE_PLANEACIONTRIMESTRE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_PLANEACIONTRIMESTRE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_PLANEACIONTRIMESTRE):\r\n    case FAILURE(ACTION_TYPES.CREATE_PLANEACIONTRIMESTRE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_PLANEACIONTRIMESTRE):\r\n    case FAILURE(ACTION_TYPES.DELETE_PLANEACIONTRIMESTRE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PLANEACIONTRIMESTRE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PLANEACIONTRIMESTRE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_PLANEACIONTRIMESTRE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PLANEACIONTRIMESTRE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_PLANEACIONTRIMESTRE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/planeacion-trimestres';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IPlaneacionTrimestre> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_PLANEACIONTRIMESTRE_LIST,\r\n  payload: axios.get<IPlaneacionTrimestre>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IPlaneacionTrimestre> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PLANEACIONTRIMESTRE,\r\n    payload: axios.get<IPlaneacionTrimestre>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IPlaneacionTrimestre> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_PLANEACIONTRIMESTRE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IPlaneacionTrimestre> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_PLANEACIONTRIMESTRE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IPlaneacionTrimestre> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_PLANEACIONTRIMESTRE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './planeacion-trimestre.reducer';\r\nimport { IPlaneacionTrimestre } from 'app/shared/model/planeacion-trimestre.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPlaneacionTrimestreProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class PlaneacionTrimestre extends React.Component<IPlaneacionTrimestreProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { planeacionTrimestreList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"planeacion-trimestre-heading\">\r\n          <Translate contentKey=\"ghostceetApp.planeacionTrimestre.home.title\">Planeacion Trimestres</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.planeacionTrimestre.home.createLabel\">Create new Planeacion Trimestre</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.planeacionTrimestre.trimestre\">Trimestre</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {planeacionTrimestreList.map((planeacionTrimestre, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${planeacionTrimestre.id}`} color=\"link\" size=\"sm\">\r\n                      {planeacionTrimestre.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    {planeacionTrimestre.trimestre ? (\r\n                      <Link to={`trimestre/${planeacionTrimestre.trimestre.id}`}>{planeacionTrimestre.trimestre.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${planeacionTrimestre.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${planeacionTrimestre.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${planeacionTrimestre.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ planeacionTrimestre }: IRootState) => ({\r\n  planeacionTrimestreList: planeacionTrimestre.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionTrimestre);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Planeacion from './planeacion';\r\nimport PlaneacionDetail from './planeacion-detail';\r\nimport PlaneacionUpdate from './planeacion-update';\r\nimport PlaneacionDeleteDialog from './planeacion-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={PlaneacionUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={PlaneacionUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={PlaneacionDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Planeacion} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={PlaneacionDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IPlaneacion } from 'app/shared/model/planeacion.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './planeacion.reducer';\r\n\r\nexport interface IPlaneacionDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class PlaneacionDeleteDialog extends React.Component<IPlaneacionDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.planeacionEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { planeacionEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.planeacion.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.planeacion.delete.question\" interpolate={{ id: planeacionEntity.id }}>\r\n            Are you sure you want to delete this Planeacion?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-planeacion\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ planeacion }: IRootState) => ({\r\n  planeacionEntity: planeacion.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './planeacion.reducer';\r\nimport { IPlaneacion } from 'app/shared/model/planeacion.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPlaneacionDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class PlaneacionDetail extends React.Component<IPlaneacionDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { planeacionEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.planeacion.detail.title\">Planeacion</Translate> [<b>{planeacionEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"nombrePlaneacion\">\r\n                <Translate contentKey=\"ghostceetApp.planeacion.nombrePlaneacion\">Nombre Planeacion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{planeacionEntity.nombrePlaneacion}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.planeacion.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{planeacionEntity.estado}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/planeacion\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/planeacion/${planeacionEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ planeacion }: IRootState) => ({\r\n  planeacionEntity: planeacion.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './planeacion.reducer';\r\nimport { IPlaneacion } from 'app/shared/model/planeacion.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IPlaneacionUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IPlaneacionUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class PlaneacionUpdate extends React.Component<IPlaneacionUpdateProps, IPlaneacionUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { planeacionEntity } = this.props;\r\n      const entity = {\r\n        ...planeacionEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/planeacion');\r\n  };\r\n\r\n  render() {\r\n    const { planeacionEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.planeacion.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.planeacion.home.createOrEditLabel\">Create or edit a Planeacion</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : planeacionEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"planeacion-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nombrePlaneacionLabel\" for=\"nombrePlaneacion\">\r\n                    <Translate contentKey=\"ghostceetApp.planeacion.nombrePlaneacion\">Nombre Planeacion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"planeacion-nombrePlaneacion\"\r\n                    type=\"text\"\r\n                    name=\"nombrePlaneacion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 150, errorMessage: translate('entity.validation.maxlength', { max: 150 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.planeacion.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"planeacion-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && planeacionEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/planeacion\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  planeacionEntity: storeState.planeacion.entity,\r\n  loading: storeState.planeacion.loading,\r\n  updating: storeState.planeacion.updating,\r\n  updateSuccess: storeState.planeacion.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PlaneacionUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IPlaneacion, defaultValue } from 'app/shared/model/planeacion.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_PLANEACION_LIST: 'planeacion/FETCH_PLANEACION_LIST',\r\n  FETCH_PLANEACION: 'planeacion/FETCH_PLANEACION',\r\n  CREATE_PLANEACION: 'planeacion/CREATE_PLANEACION',\r\n  UPDATE_PLANEACION: 'planeacion/UPDATE_PLANEACION',\r\n  DELETE_PLANEACION: 'planeacion/DELETE_PLANEACION',\r\n  RESET: 'planeacion/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IPlaneacion>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type PlaneacionState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: PlaneacionState = initialState, action): PlaneacionState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_PLANEACION_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_PLANEACION):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_PLANEACION):\r\n    case REQUEST(ACTION_TYPES.UPDATE_PLANEACION):\r\n    case REQUEST(ACTION_TYPES.DELETE_PLANEACION):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_PLANEACION_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_PLANEACION):\r\n    case FAILURE(ACTION_TYPES.CREATE_PLANEACION):\r\n    case FAILURE(ACTION_TYPES.UPDATE_PLANEACION):\r\n    case FAILURE(ACTION_TYPES.DELETE_PLANEACION):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PLANEACION_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PLANEACION):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_PLANEACION):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PLANEACION):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_PLANEACION):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/planeacions';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IPlaneacion> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_PLANEACION_LIST,\r\n  payload: axios.get<IPlaneacion>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IPlaneacion> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PLANEACION,\r\n    payload: axios.get<IPlaneacion>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IPlaneacion> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_PLANEACION,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IPlaneacion> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_PLANEACION,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IPlaneacion> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_PLANEACION,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './planeacion.reducer';\r\nimport { IPlaneacion } from 'app/shared/model/planeacion.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPlaneacionProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class Planeacion extends React.Component<IPlaneacionProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { planeacionList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"planeacion-heading\">\r\n          <Translate contentKey=\"ghostceetApp.planeacion.home.title\">Planeacions</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.planeacion.home.createLabel\">Create new Planeacion</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.planeacion.nombrePlaneacion\">Nombre Planeacion</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.planeacion.estado\">Estado</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {planeacionList.map((planeacion, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${planeacion.id}`} color=\"link\" size=\"sm\">\r\n                      {planeacion.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{planeacion.nombrePlaneacion}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${planeacion.estado}`} />\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${planeacion.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${planeacion.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${planeacion.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ planeacion }: IRootState) => ({\r\n  planeacionList: planeacion.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Planeacion);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Programa from './programa';\r\nimport ProgramaDetail from './programa-detail';\r\nimport ProgramaUpdate from './programa-update';\r\nimport ProgramaDeleteDialog from './programa-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={ProgramaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={ProgramaUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={ProgramaDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Programa} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={ProgramaDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IPrograma } from 'app/shared/model/programa.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './programa.reducer';\r\n\r\nexport interface IProgramaDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ProgramaDeleteDialog extends React.Component<IProgramaDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.programaEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { programaEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.programa.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.programa.delete.question\" interpolate={{ id: programaEntity.id }}>\r\n            Are you sure you want to delete this Programa?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-programa\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ programa }: IRootState) => ({\r\n  programaEntity: programa.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProgramaDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './programa.reducer';\r\nimport { IPrograma } from 'app/shared/model/programa.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IProgramaDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ProgramaDetail extends React.Component<IProgramaDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { programaEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.programa.detail.title\">Programa</Translate> [<b>{programaEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"codigo\">\r\n                <Translate contentKey=\"ghostceetApp.programa.codigo\">Codigo</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{programaEntity.codigo}</dd>\r\n            <dt>\r\n              <span id=\"version\">\r\n                <Translate contentKey=\"ghostceetApp.programa.version\">Version</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{programaEntity.version}</dd>\r\n            <dt>\r\n              <span id=\"nombre\">\r\n                <Translate contentKey=\"ghostceetApp.programa.nombre\">Nombre</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{programaEntity.nombre}</dd>\r\n            <dt>\r\n              <span id=\"sigla\">\r\n                <Translate contentKey=\"ghostceetApp.programa.sigla\">Sigla</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{programaEntity.sigla}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.programa.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{programaEntity.estado}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.programa.nivelFormacion\">Nivel Formacion</Translate>\r\n            </dt>\r\n            <dd>{programaEntity.nivelFormacion ? programaEntity.nivelFormacion.nivelFormacion : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/programa\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/programa/${programaEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ programa }: IRootState) => ({\r\n  programaEntity: programa.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProgramaDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { INivelFormacion } from 'app/shared/model/nivel-formacion.model';\r\nimport { getEntities as getNivelFormacions } from 'app/entities/nivel-formacion/nivel-formacion.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './programa.reducer';\r\nimport { IPrograma } from 'app/shared/model/programa.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IProgramaUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IProgramaUpdateState {\r\n  isNew: boolean;\r\n  nivelFormacionId: string;\r\n}\r\n\r\nexport class ProgramaUpdate extends React.Component<IProgramaUpdateProps, IProgramaUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nivelFormacionId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getNivelFormacions();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { programaEntity } = this.props;\r\n      const entity = {\r\n        ...programaEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/programa');\r\n  };\r\n\r\n  render() {\r\n    const { programaEntity, nivelFormacions, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.programa.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.programa.home.createOrEditLabel\">Create or edit a Programa</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : programaEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"programa-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"codigoLabel\" for=\"codigo\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.codigo\">Codigo</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"programa-codigo\"\r\n                    type=\"text\"\r\n                    name=\"codigo\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 50, errorMessage: translate('entity.validation.maxlength', { max: 50 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"versionLabel\" for=\"version\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.version\">Version</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"programa-version\"\r\n                    type=\"text\"\r\n                    name=\"version\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"nombreLabel\" for=\"nombre\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.nombre\">Nombre</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"programa-nombre\"\r\n                    type=\"text\"\r\n                    name=\"nombre\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"siglaLabel\" for=\"sigla\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.sigla\">Sigla</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"programa-sigla\"\r\n                    type=\"text\"\r\n                    name=\"sigla\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"programa-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && programaEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"nivelFormacion.nivelFormacion\">\r\n                    <Translate contentKey=\"ghostceetApp.programa.nivelFormacion\">Nivel Formacion</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"programa-nivelFormacion\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"nivelFormacion.id\"\r\n                    value={isNew ? nivelFormacions[0] && nivelFormacions[0].id : programaEntity.nivelFormacion.id}\r\n                  >\r\n                    {nivelFormacions\r\n                      ? nivelFormacions.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nivelFormacion}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/programa\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  nivelFormacions: storeState.nivelFormacion.entities,\r\n  programaEntity: storeState.programa.entity,\r\n  loading: storeState.programa.loading,\r\n  updating: storeState.programa.updating,\r\n  updateSuccess: storeState.programa.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getNivelFormacions,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProgramaUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IPrograma, defaultValue } from 'app/shared/model/programa.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_PROGRAMA_LIST: 'programa/FETCH_PROGRAMA_LIST',\r\n  FETCH_PROGRAMA: 'programa/FETCH_PROGRAMA',\r\n  CREATE_PROGRAMA: 'programa/CREATE_PROGRAMA',\r\n  UPDATE_PROGRAMA: 'programa/UPDATE_PROGRAMA',\r\n  DELETE_PROGRAMA: 'programa/DELETE_PROGRAMA',\r\n  RESET: 'programa/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IPrograma>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type ProgramaState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: ProgramaState = initialState, action): ProgramaState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_PROGRAMA_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_PROGRAMA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_PROGRAMA):\r\n    case REQUEST(ACTION_TYPES.UPDATE_PROGRAMA):\r\n    case REQUEST(ACTION_TYPES.DELETE_PROGRAMA):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_PROGRAMA_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_PROGRAMA):\r\n    case FAILURE(ACTION_TYPES.CREATE_PROGRAMA):\r\n    case FAILURE(ACTION_TYPES.UPDATE_PROGRAMA):\r\n    case FAILURE(ACTION_TYPES.DELETE_PROGRAMA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PROGRAMA_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PROGRAMA):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_PROGRAMA):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PROGRAMA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_PROGRAMA):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/programas';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IPrograma> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PROGRAMA_LIST,\r\n    payload: axios.get<IPrograma>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IPrograma> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PROGRAMA,\r\n    payload: axios.get<IPrograma>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IPrograma> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_PROGRAMA,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IPrograma> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_PROGRAMA,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IPrograma> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_PROGRAMA,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './programa.reducer';\r\nimport { IPrograma } from 'app/shared/model/programa.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IProgramaProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IProgramaState = IPaginationBaseState;\r\n\r\nexport class Programa extends React.Component<IProgramaProps, IProgramaState> {\r\n  state: IProgramaState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { programaList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"programa-heading\">\r\n          <Translate contentKey=\"ghostceetApp.programa.home.title\">Programas</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.programa.home.createLabel\">Create new Programa</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('codigo')}>\r\n                  <Translate contentKey=\"ghostceetApp.programa.codigo\">Codigo</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('version')}>\r\n                  <Translate contentKey=\"ghostceetApp.programa.version\">Version</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('nombre')}>\r\n                  <Translate contentKey=\"ghostceetApp.programa.nombre\">Nombre</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('sigla')}>\r\n                  <Translate contentKey=\"ghostceetApp.programa.sigla\">Sigla</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.programa.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.programa.nivelFormacion\">Nivel Formacion</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {programaList.map((programa, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${programa.id}`} color=\"link\" size=\"sm\">\r\n                      {programa.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{programa.codigo}</td>\r\n                  <td>{programa.version}</td>\r\n                  <td>{programa.nombre}</td>\r\n                  <td>{programa.sigla}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${programa.estado}`} />\r\n                  </td>\r\n                  <td>\r\n                    {programa.nivelFormacion ? (\r\n                      <Link to={`nivel-formacion/${programa.nivelFormacion.id}`}>{programa.nivelFormacion.nivelFormacion}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${programa.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${programa.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${programa.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ programa }: IRootState) => ({\r\n  programaList: programa.entities,\r\n  totalItems: programa.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Programa);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Proyecto from './proyecto';\r\nimport ProyectoDetail from './proyecto-detail';\r\nimport ProyectoUpdate from './proyecto-update';\r\nimport ProyectoDeleteDialog from './proyecto-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={ProyectoUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={ProyectoUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={ProyectoDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Proyecto} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={ProyectoDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IProyecto } from 'app/shared/model/proyecto.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './proyecto.reducer';\r\n\r\nexport interface IProyectoDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ProyectoDeleteDialog extends React.Component<IProyectoDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.proyectoEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { proyectoEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.proyecto.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.proyecto.delete.question\" interpolate={{ id: proyectoEntity.id }}>\r\n            Are you sure you want to delete this Proyecto?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-proyecto\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ proyecto }: IRootState) => ({\r\n  proyectoEntity: proyecto.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProyectoDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './proyecto.reducer';\r\nimport { IProyecto } from 'app/shared/model/proyecto.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IProyectoDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ProyectoDetail extends React.Component<IProyectoDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { proyectoEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.proyecto.detail.title\">Proyecto</Translate> [<b>{proyectoEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"codigo\">\r\n                <Translate contentKey=\"ghostceetApp.proyecto.codigo\">Codigo</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{proyectoEntity.codigo}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.proyecto.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{proyectoEntity.estado}</dd>\r\n            <dt>\r\n              <span id=\"nombreProyecto\">\r\n                <Translate contentKey=\"ghostceetApp.proyecto.nombreProyecto\">Nombre Proyecto</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{proyectoEntity.nombreProyecto}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.proyecto.programa\">Programa</Translate>\r\n            </dt>\r\n            <dd>{proyectoEntity.programa ? proyectoEntity.programa.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/proyecto\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/proyecto/${proyectoEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ proyecto }: IRootState) => ({\r\n  proyectoEntity: proyecto.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProyectoDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IPrograma } from 'app/shared/model/programa.model';\r\nimport { getEntities as getProgramas } from 'app/entities/programa/programa.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './proyecto.reducer';\r\nimport { IProyecto } from 'app/shared/model/proyecto.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IProyectoUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IProyectoUpdateState {\r\n  isNew: boolean;\r\n  programaId: string;\r\n}\r\n\r\nexport class ProyectoUpdate extends React.Component<IProyectoUpdateProps, IProyectoUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      programaId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getProgramas();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { proyectoEntity } = this.props;\r\n      const entity = {\r\n        ...proyectoEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/proyecto');\r\n  };\r\n\r\n  render() {\r\n    const { proyectoEntity, programas, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.proyecto.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.proyecto.home.createOrEditLabel\">Create or edit a Proyecto</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : proyectoEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"proyecto-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"codigoLabel\" for=\"codigo\">\r\n                    <Translate contentKey=\"ghostceetApp.proyecto.codigo\">Codigo</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"proyecto-codigo\"\r\n                    type=\"text\"\r\n                    name=\"codigo\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 100, errorMessage: translate('entity.validation.maxlength', { max: 100 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.proyecto.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"proyecto-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && proyectoEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"nombreProyectoLabel\" for=\"nombreProyecto\">\r\n                    <Translate contentKey=\"ghostceetApp.proyecto.nombreProyecto\">Nombre Proyecto</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"proyecto-nombreProyecto\"\r\n                    type=\"text\"\r\n                    name=\"nombreProyecto\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 300, errorMessage: translate('entity.validation.maxlength', { max: 300 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"programa.id\">\r\n                    <Translate contentKey=\"ghostceetApp.proyecto.programa\">Programa</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"proyecto-programa\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"programa.id\"\r\n                    value={isNew ? programas[0] && programas[0].id : proyectoEntity.programa.id}\r\n                  >\r\n                    {programas\r\n                      ? programas.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/proyecto\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  programas: storeState.programa.entities,\r\n  proyectoEntity: storeState.proyecto.entity,\r\n  loading: storeState.proyecto.loading,\r\n  updating: storeState.proyecto.updating,\r\n  updateSuccess: storeState.proyecto.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getProgramas,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProyectoUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IProyecto, defaultValue } from 'app/shared/model/proyecto.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_PROYECTO_LIST: 'proyecto/FETCH_PROYECTO_LIST',\r\n  FETCH_PROYECTO: 'proyecto/FETCH_PROYECTO',\r\n  CREATE_PROYECTO: 'proyecto/CREATE_PROYECTO',\r\n  UPDATE_PROYECTO: 'proyecto/UPDATE_PROYECTO',\r\n  DELETE_PROYECTO: 'proyecto/DELETE_PROYECTO',\r\n  RESET: 'proyecto/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IProyecto>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type ProyectoState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: ProyectoState = initialState, action): ProyectoState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_PROYECTO_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_PROYECTO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_PROYECTO):\r\n    case REQUEST(ACTION_TYPES.UPDATE_PROYECTO):\r\n    case REQUEST(ACTION_TYPES.DELETE_PROYECTO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_PROYECTO_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_PROYECTO):\r\n    case FAILURE(ACTION_TYPES.CREATE_PROYECTO):\r\n    case FAILURE(ACTION_TYPES.UPDATE_PROYECTO):\r\n    case FAILURE(ACTION_TYPES.DELETE_PROYECTO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PROYECTO_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PROYECTO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_PROYECTO):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PROYECTO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_PROYECTO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/proyectos';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IProyecto> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PROYECTO_LIST,\r\n    payload: axios.get<IProyecto>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IProyecto> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PROYECTO,\r\n    payload: axios.get<IProyecto>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IProyecto> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_PROYECTO,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IProyecto> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_PROYECTO,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IProyecto> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_PROYECTO,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './proyecto.reducer';\r\nimport { IProyecto } from 'app/shared/model/proyecto.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IProyectoProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IProyectoState = IPaginationBaseState;\r\n\r\nexport class Proyecto extends React.Component<IProyectoProps, IProyectoState> {\r\n  state: IProyectoState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { proyectoList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"proyecto-heading\">\r\n          <Translate contentKey=\"ghostceetApp.proyecto.home.title\">Proyectos</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.proyecto.home.createLabel\">Create new Proyecto</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('codigo')}>\r\n                  <Translate contentKey=\"ghostceetApp.proyecto.codigo\">Codigo</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.proyecto.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('nombreProyecto')}>\r\n                  <Translate contentKey=\"ghostceetApp.proyecto.nombreProyecto\">Nombre Proyecto</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.proyecto.programa\">Programa</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {proyectoList.map((proyecto, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${proyecto.id}`} color=\"link\" size=\"sm\">\r\n                      {proyecto.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{proyecto.codigo}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${proyecto.estado}`} />\r\n                  </td>\r\n                  <td>{proyecto.nombreProyecto}</td>\r\n                  <td>{proyecto.programa ? <Link to={`programa/${proyecto.programa.id}`}>{proyecto.programa.id}</Link> : ''}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${proyecto.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${proyecto.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${proyecto.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ proyecto }: IRootState) => ({\r\n  proyectoList: proyecto.entities,\r\n  totalItems: proyecto.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Proyecto);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport ResultadoAprendizaje from './resultado-aprendizaje';\r\nimport ResultadoAprendizajeDetail from './resultado-aprendizaje-detail';\r\nimport ResultadoAprendizajeUpdate from './resultado-aprendizaje-update';\r\nimport ResultadoAprendizajeDeleteDialog from './resultado-aprendizaje-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={ResultadoAprendizajeUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={ResultadoAprendizajeUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={ResultadoAprendizajeDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={ResultadoAprendizaje} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={ResultadoAprendizajeDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IResultadoAprendizaje } from 'app/shared/model/resultado-aprendizaje.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './resultado-aprendizaje.reducer';\r\n\r\nexport interface IResultadoAprendizajeDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ResultadoAprendizajeDeleteDialog extends React.Component<IResultadoAprendizajeDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.resultadoAprendizajeEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { resultadoAprendizajeEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.resultadoAprendizaje.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.delete.question\" interpolate={{ id: resultadoAprendizajeEntity.id }}>\r\n            Are you sure you want to delete this ResultadoAprendizaje?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-resultadoAprendizaje\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ resultadoAprendizaje }: IRootState) => ({\r\n  resultadoAprendizajeEntity: resultadoAprendizaje.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResultadoAprendizajeDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './resultado-aprendizaje.reducer';\r\nimport { IResultadoAprendizaje } from 'app/shared/model/resultado-aprendizaje.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IResultadoAprendizajeDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ResultadoAprendizajeDetail extends React.Component<IResultadoAprendizajeDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { resultadoAprendizajeEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.detail.title\">ResultadoAprendizaje</Translate> [\r\n            <b>{resultadoAprendizajeEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"codigo\">\r\n                <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.codigo\">Codigo</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{resultadoAprendizajeEntity.codigo}</dd>\r\n            <dt>\r\n              <span id=\"descripcion\">\r\n                <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.descripcion\">Descripcion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{resultadoAprendizajeEntity.descripcion}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/resultado-aprendizaje\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/resultado-aprendizaje/${resultadoAprendizajeEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ resultadoAprendizaje }: IRootState) => ({\r\n  resultadoAprendizajeEntity: resultadoAprendizaje.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResultadoAprendizajeDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './resultado-aprendizaje.reducer';\r\nimport { IResultadoAprendizaje } from 'app/shared/model/resultado-aprendizaje.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IResultadoAprendizajeUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IResultadoAprendizajeUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class ResultadoAprendizajeUpdate extends React.Component<IResultadoAprendizajeUpdateProps, IResultadoAprendizajeUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { resultadoAprendizajeEntity } = this.props;\r\n      const entity = {\r\n        ...resultadoAprendizajeEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/resultado-aprendizaje');\r\n  };\r\n\r\n  render() {\r\n    const { resultadoAprendizajeEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.resultadoAprendizaje.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.home.createOrEditLabel\">\r\n                Create or edit a ResultadoAprendizaje\r\n              </Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : resultadoAprendizajeEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"resultado-aprendizaje-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"codigoLabel\" for=\"codigo\">\r\n                    <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.codigo\">Codigo</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"resultado-aprendizaje-codigo\"\r\n                    type=\"text\"\r\n                    name=\"codigo\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 100, errorMessage: translate('entity.validation.maxlength', { max: 100 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"descripcionLabel\" for=\"descripcion\">\r\n                    <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.descripcion\">Descripcion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"resultado-aprendizaje-descripcion\"\r\n                    type=\"text\"\r\n                    name=\"descripcion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 400, errorMessage: translate('entity.validation.maxlength', { max: 400 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/resultado-aprendizaje\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  resultadoAprendizajeEntity: storeState.resultadoAprendizaje.entity,\r\n  loading: storeState.resultadoAprendizaje.loading,\r\n  updating: storeState.resultadoAprendizaje.updating,\r\n  updateSuccess: storeState.resultadoAprendizaje.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResultadoAprendizajeUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IResultadoAprendizaje, defaultValue } from 'app/shared/model/resultado-aprendizaje.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_RESULTADOAPRENDIZAJE_LIST: 'resultadoAprendizaje/FETCH_RESULTADOAPRENDIZAJE_LIST',\r\n  FETCH_RESULTADOAPRENDIZAJE: 'resultadoAprendizaje/FETCH_RESULTADOAPRENDIZAJE',\r\n  CREATE_RESULTADOAPRENDIZAJE: 'resultadoAprendizaje/CREATE_RESULTADOAPRENDIZAJE',\r\n  UPDATE_RESULTADOAPRENDIZAJE: 'resultadoAprendizaje/UPDATE_RESULTADOAPRENDIZAJE',\r\n  DELETE_RESULTADOAPRENDIZAJE: 'resultadoAprendizaje/DELETE_RESULTADOAPRENDIZAJE',\r\n  RESET: 'resultadoAprendizaje/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IResultadoAprendizaje>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type ResultadoAprendizajeState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: ResultadoAprendizajeState = initialState, action): ResultadoAprendizajeState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_RESULTADOAPRENDIZAJE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_RESULTADOAPRENDIZAJE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_RESULTADOAPRENDIZAJE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_RESULTADOAPRENDIZAJE):\r\n    case REQUEST(ACTION_TYPES.DELETE_RESULTADOAPRENDIZAJE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_RESULTADOAPRENDIZAJE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_RESULTADOAPRENDIZAJE):\r\n    case FAILURE(ACTION_TYPES.CREATE_RESULTADOAPRENDIZAJE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_RESULTADOAPRENDIZAJE):\r\n    case FAILURE(ACTION_TYPES.DELETE_RESULTADOAPRENDIZAJE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_RESULTADOAPRENDIZAJE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_RESULTADOAPRENDIZAJE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_RESULTADOAPRENDIZAJE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_RESULTADOAPRENDIZAJE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_RESULTADOAPRENDIZAJE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/resultado-aprendizajes';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IResultadoAprendizaje> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_RESULTADOAPRENDIZAJE_LIST,\r\n    payload: axios.get<IResultadoAprendizaje>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IResultadoAprendizaje> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_RESULTADOAPRENDIZAJE,\r\n    payload: axios.get<IResultadoAprendizaje>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IResultadoAprendizaje> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_RESULTADOAPRENDIZAJE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IResultadoAprendizaje> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_RESULTADOAPRENDIZAJE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IResultadoAprendizaje> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_RESULTADOAPRENDIZAJE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './resultado-aprendizaje.reducer';\r\nimport { IResultadoAprendizaje } from 'app/shared/model/resultado-aprendizaje.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IResultadoAprendizajeProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IResultadoAprendizajeState = IPaginationBaseState;\r\n\r\nexport class ResultadoAprendizaje extends React.Component<IResultadoAprendizajeProps, IResultadoAprendizajeState> {\r\n  state: IResultadoAprendizajeState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { resultadoAprendizajeList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"resultado-aprendizaje-heading\">\r\n          <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.home.title\">Resultado Aprendizajes</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.home.createLabel\">Create new Resultado Aprendizaje</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('codigo')}>\r\n                  <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.codigo\">Codigo</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('descripcion')}>\r\n                  <Translate contentKey=\"ghostceetApp.resultadoAprendizaje.descripcion\">Descripcion</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {resultadoAprendizajeList.map((resultadoAprendizaje, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${resultadoAprendizaje.id}`} color=\"link\" size=\"sm\">\r\n                      {resultadoAprendizaje.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{resultadoAprendizaje.codigo}</td>\r\n                  <td>{resultadoAprendizaje.descripcion}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${resultadoAprendizaje.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${resultadoAprendizaje.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${resultadoAprendizaje.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ resultadoAprendizaje }: IRootState) => ({\r\n  resultadoAprendizajeList: resultadoAprendizaje.entities,\r\n  totalItems: resultadoAprendizaje.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResultadoAprendizaje);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport ResultadosVistos from './resultados-vistos';\r\nimport ResultadosVistosDetail from './resultados-vistos-detail';\r\nimport ResultadosVistosUpdate from './resultados-vistos-update';\r\nimport ResultadosVistosDeleteDialog from './resultados-vistos-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={ResultadosVistosUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={ResultadosVistosUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={ResultadosVistosDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={ResultadosVistos} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={ResultadosVistosDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IResultadosVistos } from 'app/shared/model/resultados-vistos.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './resultados-vistos.reducer';\r\n\r\nexport interface IResultadosVistosDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ResultadosVistosDeleteDialog extends React.Component<IResultadosVistosDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.resultadosVistosEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { resultadosVistosEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.resultadosVistos.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.resultadosVistos.delete.question\" interpolate={{ id: resultadosVistosEntity.id }}>\r\n            Are you sure you want to delete this ResultadosVistos?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-resultadosVistos\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ resultadosVistos }: IRootState) => ({\r\n  resultadosVistosEntity: resultadosVistos.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResultadosVistosDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './resultados-vistos.reducer';\r\nimport { IResultadosVistos } from 'app/shared/model/resultados-vistos.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IResultadosVistosDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class ResultadosVistosDetail extends React.Component<IResultadosVistosDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { resultadosVistosEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.resultadosVistos.detail.title\">ResultadosVistos</Translate> [\r\n            <b>{resultadosVistosEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.resultadosVistos.resultadoAprendizaje\">Resultado Aprendizaje</Translate>\r\n            </dt>\r\n            <dd>{resultadosVistosEntity.resultadoAprendizaje ? resultadosVistosEntity.resultadoAprendizaje.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.resultadosVistos.fichaTrimestre\">Ficha Trimestre</Translate>\r\n            </dt>\r\n            <dd>{resultadosVistosEntity.fichaTrimestre ? resultadosVistosEntity.fichaTrimestre.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/resultados-vistos\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/resultados-vistos/${resultadosVistosEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ resultadosVistos }: IRootState) => ({\r\n  resultadosVistosEntity: resultadosVistos.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResultadosVistosDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IResultadoAprendizaje } from 'app/shared/model/resultado-aprendizaje.model';\r\nimport { getEntities as getResultadoAprendizajes } from 'app/entities/resultado-aprendizaje/resultado-aprendizaje.reducer';\r\nimport { IFichaTrimestre } from 'app/shared/model/ficha-trimestre.model';\r\nimport { getEntities as getFichaTrimestres } from 'app/entities/ficha-trimestre/ficha-trimestre.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './resultados-vistos.reducer';\r\nimport { IResultadosVistos } from 'app/shared/model/resultados-vistos.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IResultadosVistosUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IResultadosVistosUpdateState {\r\n  isNew: boolean;\r\n  resultadoAprendizajeId: string;\r\n  fichaTrimestreId: string;\r\n}\r\n\r\nexport class ResultadosVistosUpdate extends React.Component<IResultadosVistosUpdateProps, IResultadosVistosUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      resultadoAprendizajeId: '0',\r\n      fichaTrimestreId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getResultadoAprendizajes();\r\n    this.props.getFichaTrimestres();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { resultadosVistosEntity } = this.props;\r\n      const entity = {\r\n        ...resultadosVistosEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/resultados-vistos');\r\n  };\r\n\r\n  render() {\r\n    const { resultadosVistosEntity, resultadoAprendizajes, fichaTrimestres, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.resultadosVistos.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.resultadosVistos.home.createOrEditLabel\">Create or edit a ResultadosVistos</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : resultadosVistosEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"resultados-vistos-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label for=\"resultadoAprendizaje.id\">\r\n                    <Translate contentKey=\"ghostceetApp.resultadosVistos.resultadoAprendizaje\">Resultado Aprendizaje</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"resultados-vistos-resultadoAprendizaje\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"resultadoAprendizaje.id\"\r\n                    value={isNew ? resultadoAprendizajes[0] && resultadoAprendizajes[0].id : resultadosVistosEntity.resultadoAprendizaje.id}\r\n                  >\r\n                    {resultadoAprendizajes\r\n                      ? resultadoAprendizajes.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"fichaTrimestre.id\">\r\n                    <Translate contentKey=\"ghostceetApp.resultadosVistos.fichaTrimestre\">Ficha Trimestre</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"resultados-vistos-fichaTrimestre\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"fichaTrimestre.id\"\r\n                    value={isNew ? fichaTrimestres[0] && fichaTrimestres[0].id : resultadosVistosEntity.fichaTrimestre.id}\r\n                  >\r\n                    {fichaTrimestres\r\n                      ? fichaTrimestres.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/resultados-vistos\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  resultadoAprendizajes: storeState.resultadoAprendizaje.entities,\r\n  fichaTrimestres: storeState.fichaTrimestre.entities,\r\n  resultadosVistosEntity: storeState.resultadosVistos.entity,\r\n  loading: storeState.resultadosVistos.loading,\r\n  updating: storeState.resultadosVistos.updating,\r\n  updateSuccess: storeState.resultadosVistos.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getResultadoAprendizajes,\r\n  getFichaTrimestres,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResultadosVistosUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IResultadosVistos, defaultValue } from 'app/shared/model/resultados-vistos.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_RESULTADOSVISTOS_LIST: 'resultadosVistos/FETCH_RESULTADOSVISTOS_LIST',\r\n  FETCH_RESULTADOSVISTOS: 'resultadosVistos/FETCH_RESULTADOSVISTOS',\r\n  CREATE_RESULTADOSVISTOS: 'resultadosVistos/CREATE_RESULTADOSVISTOS',\r\n  UPDATE_RESULTADOSVISTOS: 'resultadosVistos/UPDATE_RESULTADOSVISTOS',\r\n  DELETE_RESULTADOSVISTOS: 'resultadosVistos/DELETE_RESULTADOSVISTOS',\r\n  RESET: 'resultadosVistos/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IResultadosVistos>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type ResultadosVistosState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: ResultadosVistosState = initialState, action): ResultadosVistosState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_RESULTADOSVISTOS_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_RESULTADOSVISTOS):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_RESULTADOSVISTOS):\r\n    case REQUEST(ACTION_TYPES.UPDATE_RESULTADOSVISTOS):\r\n    case REQUEST(ACTION_TYPES.DELETE_RESULTADOSVISTOS):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_RESULTADOSVISTOS_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_RESULTADOSVISTOS):\r\n    case FAILURE(ACTION_TYPES.CREATE_RESULTADOSVISTOS):\r\n    case FAILURE(ACTION_TYPES.UPDATE_RESULTADOSVISTOS):\r\n    case FAILURE(ACTION_TYPES.DELETE_RESULTADOSVISTOS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_RESULTADOSVISTOS_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_RESULTADOSVISTOS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_RESULTADOSVISTOS):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_RESULTADOSVISTOS):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_RESULTADOSVISTOS):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/resultados-vistos';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IResultadosVistos> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_RESULTADOSVISTOS_LIST,\r\n  payload: axios.get<IResultadosVistos>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IResultadosVistos> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_RESULTADOSVISTOS,\r\n    payload: axios.get<IResultadosVistos>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IResultadosVistos> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_RESULTADOSVISTOS,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IResultadosVistos> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_RESULTADOSVISTOS,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IResultadosVistos> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_RESULTADOSVISTOS,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './resultados-vistos.reducer';\r\nimport { IResultadosVistos } from 'app/shared/model/resultados-vistos.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IResultadosVistosProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class ResultadosVistos extends React.Component<IResultadosVistosProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { resultadosVistosList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"resultados-vistos-heading\">\r\n          <Translate contentKey=\"ghostceetApp.resultadosVistos.home.title\">Resultados Vistos</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.resultadosVistos.home.createLabel\">Create new Resultados Vistos</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.resultadosVistos.resultadoAprendizaje\">Resultado Aprendizaje</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.resultadosVistos.fichaTrimestre\">Ficha Trimestre</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {resultadosVistosList.map((resultadosVistos, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${resultadosVistos.id}`} color=\"link\" size=\"sm\">\r\n                      {resultadosVistos.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    {resultadosVistos.resultadoAprendizaje ? (\r\n                      <Link to={`resultado-aprendizaje/${resultadosVistos.resultadoAprendizaje.id}`}>\r\n                        {resultadosVistos.resultadoAprendizaje.id}\r\n                      </Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {resultadosVistos.fichaTrimestre ? (\r\n                      <Link to={`ficha-trimestre/${resultadosVistos.fichaTrimestre.id}`}>{resultadosVistos.fichaTrimestre.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${resultadosVistos.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${resultadosVistos.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${resultadosVistos.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ resultadosVistos }: IRootState) => ({\r\n  resultadosVistosList: resultadosVistos.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ResultadosVistos);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Sede from './sede';\r\nimport SedeDetail from './sede-detail';\r\nimport SedeUpdate from './sede-update';\r\nimport SedeDeleteDialog from './sede-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={SedeUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={SedeUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={SedeDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Sede} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={SedeDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ISede } from 'app/shared/model/sede.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './sede.reducer';\r\n\r\nexport interface ISedeDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class SedeDeleteDialog extends React.Component<ISedeDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.sedeEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { sedeEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.sede.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.sede.delete.question\" interpolate={{ id: sedeEntity.id }}>\r\n            Are you sure you want to delete this Sede?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-sede\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ sede }: IRootState) => ({\r\n  sedeEntity: sede.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SedeDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './sede.reducer';\r\nimport { ISede } from 'app/shared/model/sede.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface ISedeDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class SedeDetail extends React.Component<ISedeDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { sedeEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.sede.detail.title\">Sede</Translate> [<b>{sedeEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"nombreSede\">\r\n                <Translate contentKey=\"ghostceetApp.sede.nombreSede\">Nombre Sede</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{sedeEntity.nombreSede}</dd>\r\n            <dt>\r\n              <span id=\"direccion\">\r\n                <Translate contentKey=\"ghostceetApp.sede.direccion\">Direccion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{sedeEntity.direccion}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.sede.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{sedeEntity.estado}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/sede\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/sede/${sedeEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ sede }: IRootState) => ({\r\n  sedeEntity: sede.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SedeDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './sede.reducer';\r\nimport { ISede } from 'app/shared/model/sede.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface ISedeUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface ISedeUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class SedeUpdate extends React.Component<ISedeUpdateProps, ISedeUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { sedeEntity } = this.props;\r\n      const entity = {\r\n        ...sedeEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/sede');\r\n  };\r\n\r\n  render() {\r\n    const { sedeEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.sede.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.sede.home.createOrEditLabel\">Create or edit a Sede</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : sedeEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"sede-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nombreSedeLabel\" for=\"nombreSede\">\r\n                    <Translate contentKey=\"ghostceetApp.sede.nombreSede\">Nombre Sede</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"sede-nombreSede\"\r\n                    type=\"text\"\r\n                    name=\"nombreSede\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 100, errorMessage: translate('entity.validation.maxlength', { max: 100 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"direccionLabel\" for=\"direccion\">\r\n                    <Translate contentKey=\"ghostceetApp.sede.direccion\">Direccion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"sede-direccion\"\r\n                    type=\"text\"\r\n                    name=\"direccion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 100, errorMessage: translate('entity.validation.maxlength', { max: 100 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.sede.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"sede-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && sedeEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/sede\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  sedeEntity: storeState.sede.entity,\r\n  loading: storeState.sede.loading,\r\n  updating: storeState.sede.updating,\r\n  updateSuccess: storeState.sede.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SedeUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { ISede, defaultValue } from 'app/shared/model/sede.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_SEDE_LIST: 'sede/FETCH_SEDE_LIST',\r\n  FETCH_SEDE: 'sede/FETCH_SEDE',\r\n  CREATE_SEDE: 'sede/CREATE_SEDE',\r\n  UPDATE_SEDE: 'sede/UPDATE_SEDE',\r\n  DELETE_SEDE: 'sede/DELETE_SEDE',\r\n  RESET: 'sede/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<ISede>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type SedeState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: SedeState = initialState, action): SedeState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_SEDE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_SEDE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_SEDE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_SEDE):\r\n    case REQUEST(ACTION_TYPES.DELETE_SEDE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_SEDE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_SEDE):\r\n    case FAILURE(ACTION_TYPES.CREATE_SEDE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_SEDE):\r\n    case FAILURE(ACTION_TYPES.DELETE_SEDE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_SEDE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_SEDE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_SEDE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_SEDE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_SEDE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/sedes';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<ISede> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_SEDE_LIST,\r\n  payload: axios.get<ISede>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<ISede> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_SEDE,\r\n    payload: axios.get<ISede>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<ISede> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_SEDE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<ISede> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_SEDE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<ISede> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_SEDE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './sede.reducer';\r\nimport { ISede } from 'app/shared/model/sede.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface ISedeProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class Sede extends React.Component<ISedeProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { sedeList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"sede-heading\">\r\n          <Translate contentKey=\"ghostceetApp.sede.home.title\">Sedes</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.sede.home.createLabel\">Create new Sede</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.sede.nombreSede\">Nombre Sede</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.sede.direccion\">Direccion</Translate>\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.sede.estado\">Estado</Translate>\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sedeList.map((sede, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${sede.id}`} color=\"link\" size=\"sm\">\r\n                      {sede.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{sede.nombreSede}</td>\r\n                  <td>{sede.direccion}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${sede.estado}`} />\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${sede.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${sede.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${sede.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ sede }: IRootState) => ({\r\n  sedeList: sede.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Sede);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport TipoAmbiente from './tipo-ambiente';\r\nimport TipoAmbienteDetail from './tipo-ambiente-detail';\r\nimport TipoAmbienteUpdate from './tipo-ambiente-update';\r\nimport TipoAmbienteDeleteDialog from './tipo-ambiente-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={TipoAmbienteUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={TipoAmbienteUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={TipoAmbienteDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={TipoAmbiente} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={TipoAmbienteDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ITipoAmbiente } from 'app/shared/model/tipo-ambiente.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './tipo-ambiente.reducer';\r\n\r\nexport interface ITipoAmbienteDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class TipoAmbienteDeleteDialog extends React.Component<ITipoAmbienteDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.tipoAmbienteEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { tipoAmbienteEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.tipoAmbiente.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.tipoAmbiente.delete.question\" interpolate={{ id: tipoAmbienteEntity.id }}>\r\n            Are you sure you want to delete this TipoAmbiente?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-tipoAmbiente\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ tipoAmbiente }: IRootState) => ({\r\n  tipoAmbienteEntity: tipoAmbiente.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TipoAmbienteDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './tipo-ambiente.reducer';\r\nimport { ITipoAmbiente } from 'app/shared/model/tipo-ambiente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface ITipoAmbienteDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class TipoAmbienteDetail extends React.Component<ITipoAmbienteDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { tipoAmbienteEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.tipoAmbiente.detail.title\">TipoAmbiente</Translate> [<b>{tipoAmbienteEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"tipo\">\r\n                <Translate contentKey=\"ghostceetApp.tipoAmbiente.tipo\">Tipo</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{tipoAmbienteEntity.tipo}</dd>\r\n            <dt>\r\n              <span id=\"descripcion\">\r\n                <Translate contentKey=\"ghostceetApp.tipoAmbiente.descripcion\">Descripcion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{tipoAmbienteEntity.descripcion}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.tipoAmbiente.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{tipoAmbienteEntity.estado}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/tipo-ambiente\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/tipo-ambiente/${tipoAmbienteEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ tipoAmbiente }: IRootState) => ({\r\n  tipoAmbienteEntity: tipoAmbiente.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TipoAmbienteDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './tipo-ambiente.reducer';\r\nimport { ITipoAmbiente } from 'app/shared/model/tipo-ambiente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface ITipoAmbienteUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface ITipoAmbienteUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class TipoAmbienteUpdate extends React.Component<ITipoAmbienteUpdateProps, ITipoAmbienteUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { tipoAmbienteEntity } = this.props;\r\n      const entity = {\r\n        ...tipoAmbienteEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/tipo-ambiente');\r\n  };\r\n\r\n  render() {\r\n    const { tipoAmbienteEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.tipoAmbiente.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.tipoAmbiente.home.createOrEditLabel\">Create or edit a TipoAmbiente</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : tipoAmbienteEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"tipo-ambiente-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"tipoLabel\" for=\"tipo\">\r\n                    <Translate contentKey=\"ghostceetApp.tipoAmbiente.tipo\">Tipo</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"tipo-ambiente-tipo\"\r\n                    type=\"text\"\r\n                    name=\"tipo\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"descripcionLabel\" for=\"descripcion\">\r\n                    <Translate contentKey=\"ghostceetApp.tipoAmbiente.descripcion\">Descripcion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"tipo-ambiente-descripcion\"\r\n                    type=\"text\"\r\n                    name=\"descripcion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 100, errorMessage: translate('entity.validation.maxlength', { max: 100 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.tipoAmbiente.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"tipo-ambiente-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && tipoAmbienteEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/tipo-ambiente\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  tipoAmbienteEntity: storeState.tipoAmbiente.entity,\r\n  loading: storeState.tipoAmbiente.loading,\r\n  updating: storeState.tipoAmbiente.updating,\r\n  updateSuccess: storeState.tipoAmbiente.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TipoAmbienteUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { ITipoAmbiente, defaultValue } from 'app/shared/model/tipo-ambiente.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_TIPOAMBIENTE_LIST: 'tipoAmbiente/FETCH_TIPOAMBIENTE_LIST',\r\n  FETCH_TIPOAMBIENTE: 'tipoAmbiente/FETCH_TIPOAMBIENTE',\r\n  CREATE_TIPOAMBIENTE: 'tipoAmbiente/CREATE_TIPOAMBIENTE',\r\n  UPDATE_TIPOAMBIENTE: 'tipoAmbiente/UPDATE_TIPOAMBIENTE',\r\n  DELETE_TIPOAMBIENTE: 'tipoAmbiente/DELETE_TIPOAMBIENTE',\r\n  RESET: 'tipoAmbiente/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<ITipoAmbiente>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type TipoAmbienteState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: TipoAmbienteState = initialState, action): TipoAmbienteState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_TIPOAMBIENTE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_TIPOAMBIENTE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_TIPOAMBIENTE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_TIPOAMBIENTE):\r\n    case REQUEST(ACTION_TYPES.DELETE_TIPOAMBIENTE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_TIPOAMBIENTE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_TIPOAMBIENTE):\r\n    case FAILURE(ACTION_TYPES.CREATE_TIPOAMBIENTE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_TIPOAMBIENTE):\r\n    case FAILURE(ACTION_TYPES.DELETE_TIPOAMBIENTE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_TIPOAMBIENTE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_TIPOAMBIENTE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_TIPOAMBIENTE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_TIPOAMBIENTE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_TIPOAMBIENTE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/tipo-ambientes';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<ITipoAmbiente> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_TIPOAMBIENTE_LIST,\r\n    payload: axios.get<ITipoAmbiente>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<ITipoAmbiente> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_TIPOAMBIENTE,\r\n    payload: axios.get<ITipoAmbiente>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<ITipoAmbiente> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_TIPOAMBIENTE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<ITipoAmbiente> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_TIPOAMBIENTE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<ITipoAmbiente> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_TIPOAMBIENTE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './tipo-ambiente.reducer';\r\nimport { ITipoAmbiente } from 'app/shared/model/tipo-ambiente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface ITipoAmbienteProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type ITipoAmbienteState = IPaginationBaseState;\r\n\r\nexport class TipoAmbiente extends React.Component<ITipoAmbienteProps, ITipoAmbienteState> {\r\n  state: ITipoAmbienteState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { tipoAmbienteList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"tipo-ambiente-heading\">\r\n          <Translate contentKey=\"ghostceetApp.tipoAmbiente.home.title\">Tipo Ambientes</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.tipoAmbiente.home.createLabel\">Create new Tipo Ambiente</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('tipo')}>\r\n                  <Translate contentKey=\"ghostceetApp.tipoAmbiente.tipo\">Tipo</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('descripcion')}>\r\n                  <Translate contentKey=\"ghostceetApp.tipoAmbiente.descripcion\">Descripcion</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.tipoAmbiente.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tipoAmbienteList.map((tipoAmbiente, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${tipoAmbiente.id}`} color=\"link\" size=\"sm\">\r\n                      {tipoAmbiente.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{tipoAmbiente.tipo}</td>\r\n                  <td>{tipoAmbiente.descripcion}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${tipoAmbiente.estado}`} />\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${tipoAmbiente.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${tipoAmbiente.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${tipoAmbiente.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ tipoAmbiente }: IRootState) => ({\r\n  tipoAmbienteList: tipoAmbiente.entities,\r\n  totalItems: tipoAmbiente.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TipoAmbiente);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport TrimestreVigente from './trimestre-vigente';\r\nimport TrimestreVigenteDetail from './trimestre-vigente-detail';\r\nimport TrimestreVigenteUpdate from './trimestre-vigente-update';\r\nimport TrimestreVigenteDeleteDialog from './trimestre-vigente-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={TrimestreVigenteUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={TrimestreVigenteUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={TrimestreVigenteDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={TrimestreVigente} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={TrimestreVigenteDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ITrimestreVigente } from 'app/shared/model/trimestre-vigente.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './trimestre-vigente.reducer';\r\n\r\nexport interface ITrimestreVigenteDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class TrimestreVigenteDeleteDialog extends React.Component<ITrimestreVigenteDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.trimestreVigenteEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { trimestreVigenteEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.trimestreVigente.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.trimestreVigente.delete.question\" interpolate={{ id: trimestreVigenteEntity.id }}>\r\n            Are you sure you want to delete this TrimestreVigente?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-trimestreVigente\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ trimestreVigente }: IRootState) => ({\r\n  trimestreVigenteEntity: trimestreVigente.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrimestreVigenteDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './trimestre-vigente.reducer';\r\nimport { ITrimestreVigente } from 'app/shared/model/trimestre-vigente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface ITrimestreVigenteDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class TrimestreVigenteDetail extends React.Component<ITrimestreVigenteDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { trimestreVigenteEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.trimestreVigente.detail.title\">TrimestreVigente</Translate> [\r\n            <b>{trimestreVigenteEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"anio\">\r\n                <Translate contentKey=\"ghostceetApp.trimestreVigente.anio\">Anio</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{trimestreVigenteEntity.anio}</dd>\r\n            <dt>\r\n              <span id=\"trimestreProgramado\">\r\n                <Translate contentKey=\"ghostceetApp.trimestreVigente.trimestreProgramado\">Trimestre Programado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{trimestreVigenteEntity.trimestreProgramado}</dd>\r\n            <dt>\r\n              <span id=\"fechaInicio\">\r\n                <Translate contentKey=\"ghostceetApp.trimestreVigente.fechaInicio\">Fecha Inicio</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={trimestreVigenteEntity.fechaInicio} type=\"date\" format={APP_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <span id=\"fechaFin\">\r\n                <Translate contentKey=\"ghostceetApp.trimestreVigente.fechaFin\">Fecha Fin</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={trimestreVigenteEntity.fechaFin} type=\"date\" format={APP_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.trimestreVigente.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{trimestreVigenteEntity.estado}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.trimestreVigente.anio1\">Anio 1</Translate>\r\n            </dt>\r\n            <dd>{trimestreVigenteEntity.anio1 ? trimestreVigenteEntity.anio1.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/trimestre-vigente\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/trimestre-vigente/${trimestreVigenteEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ trimestreVigente }: IRootState) => ({\r\n  trimestreVigenteEntity: trimestreVigente.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrimestreVigenteDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IAnio } from 'app/shared/model/anio.model';\r\nimport { getEntities as getAnios } from 'app/entities/anio/anio.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './trimestre-vigente.reducer';\r\nimport { ITrimestreVigente } from 'app/shared/model/trimestre-vigente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface ITrimestreVigenteUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface ITrimestreVigenteUpdateState {\r\n  isNew: boolean;\r\n  anio1Id: string;\r\n}\r\n\r\nexport class TrimestreVigenteUpdate extends React.Component<ITrimestreVigenteUpdateProps, ITrimestreVigenteUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anio1Id: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getAnios();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    values.fechaInicio = convertDateTimeToServer(values.fechaInicio);\r\n    values.fechaFin = convertDateTimeToServer(values.fechaFin);\r\n\r\n    if (errors.length === 0) {\r\n      const { trimestreVigenteEntity } = this.props;\r\n      const entity = {\r\n        ...trimestreVigenteEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/trimestre-vigente');\r\n  };\r\n\r\n  render() {\r\n    const { trimestreVigenteEntity, anios, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.trimestreVigente.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.trimestreVigente.home.createOrEditLabel\">Create or edit a TrimestreVigente</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : trimestreVigenteEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"trimestre-vigente-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"anioLabel\" for=\"anio\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.anio\">Anio</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"trimestre-vigente-anio\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"anio\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"trimestreProgramadoLabel\" for=\"trimestreProgramado\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.trimestreProgramado\">Trimestre Programado</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"trimestre-vigente-trimestreProgramado\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"trimestreProgramado\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"fechaInicioLabel\" for=\"fechaInicio\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.fechaInicio\">Fecha Inicio</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"trimestre-vigente-fechaInicio\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"fechaInicio\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.trimestreVigenteEntity.fechaInicio)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"fechaFinLabel\" for=\"fechaFin\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.fechaFin\">Fecha Fin</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"trimestre-vigente-fechaFin\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"fechaFin\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.trimestreVigenteEntity.fechaFin)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"trimestre-vigente-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && trimestreVigenteEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"anio1.id\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestreVigente.anio1\">Anio 1</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"trimestre-vigente-anio1\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"anio1.id\"\r\n                    value={isNew ? anios[0] && anios[0].id : trimestreVigenteEntity.anio1.id}\r\n                  >\r\n                    {anios\r\n                      ? anios.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/trimestre-vigente\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  anios: storeState.anio.entities,\r\n  trimestreVigenteEntity: storeState.trimestreVigente.entity,\r\n  loading: storeState.trimestreVigente.loading,\r\n  updating: storeState.trimestreVigente.updating,\r\n  updateSuccess: storeState.trimestreVigente.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getAnios,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrimestreVigenteUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { ITrimestreVigente, defaultValue } from 'app/shared/model/trimestre-vigente.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_TRIMESTREVIGENTE_LIST: 'trimestreVigente/FETCH_TRIMESTREVIGENTE_LIST',\r\n  FETCH_TRIMESTREVIGENTE: 'trimestreVigente/FETCH_TRIMESTREVIGENTE',\r\n  CREATE_TRIMESTREVIGENTE: 'trimestreVigente/CREATE_TRIMESTREVIGENTE',\r\n  UPDATE_TRIMESTREVIGENTE: 'trimestreVigente/UPDATE_TRIMESTREVIGENTE',\r\n  DELETE_TRIMESTREVIGENTE: 'trimestreVigente/DELETE_TRIMESTREVIGENTE',\r\n  RESET: 'trimestreVigente/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<ITrimestreVigente>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type TrimestreVigenteState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: TrimestreVigenteState = initialState, action): TrimestreVigenteState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_TRIMESTREVIGENTE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_TRIMESTREVIGENTE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_TRIMESTREVIGENTE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_TRIMESTREVIGENTE):\r\n    case REQUEST(ACTION_TYPES.DELETE_TRIMESTREVIGENTE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_TRIMESTREVIGENTE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_TRIMESTREVIGENTE):\r\n    case FAILURE(ACTION_TYPES.CREATE_TRIMESTREVIGENTE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_TRIMESTREVIGENTE):\r\n    case FAILURE(ACTION_TYPES.DELETE_TRIMESTREVIGENTE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_TRIMESTREVIGENTE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_TRIMESTREVIGENTE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_TRIMESTREVIGENTE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_TRIMESTREVIGENTE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_TRIMESTREVIGENTE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/trimestre-vigentes';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<ITrimestreVigente> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_TRIMESTREVIGENTE_LIST,\r\n    payload: axios.get<ITrimestreVigente>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<ITrimestreVigente> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_TRIMESTREVIGENTE,\r\n    payload: axios.get<ITrimestreVigente>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<ITrimestreVigente> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_TRIMESTREVIGENTE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<ITrimestreVigente> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_TRIMESTREVIGENTE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<ITrimestreVigente> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_TRIMESTREVIGENTE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport {\r\n  Translate,\r\n  ICrudGetAllAction,\r\n  TextFormat,\r\n  getSortState,\r\n  IPaginationBaseState,\r\n  getPaginationItemsNumber,\r\n  JhiPagination\r\n} from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './trimestre-vigente.reducer';\r\nimport { ITrimestreVigente } from 'app/shared/model/trimestre-vigente.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface ITrimestreVigenteProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type ITrimestreVigenteState = IPaginationBaseState;\r\n\r\nexport class TrimestreVigente extends React.Component<ITrimestreVigenteProps, ITrimestreVigenteState> {\r\n  state: ITrimestreVigenteState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { trimestreVigenteList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"trimestre-vigente-heading\">\r\n          <Translate contentKey=\"ghostceetApp.trimestreVigente.home.title\">Trimestre Vigentes</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.trimestreVigente.home.createLabel\">Create new Trimestre Vigente</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('anio')}>\r\n                  <Translate contentKey=\"ghostceetApp.trimestreVigente.anio\">Anio</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('trimestreProgramado')}>\r\n                  <Translate contentKey=\"ghostceetApp.trimestreVigente.trimestreProgramado\">Trimestre Programado</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('fechaInicio')}>\r\n                  <Translate contentKey=\"ghostceetApp.trimestreVigente.fechaInicio\">Fecha Inicio</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('fechaFin')}>\r\n                  <Translate contentKey=\"ghostceetApp.trimestreVigente.fechaFin\">Fecha Fin</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.trimestreVigente.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.trimestreVigente.anio1\">Anio 1</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {trimestreVigenteList.map((trimestreVigente, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${trimestreVigente.id}`} color=\"link\" size=\"sm\">\r\n                      {trimestreVigente.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{trimestreVigente.anio}</td>\r\n                  <td>{trimestreVigente.trimestreProgramado}</td>\r\n                  <td>\r\n                    <TextFormat type=\"date\" value={trimestreVigente.fechaInicio} format={APP_DATE_FORMAT} />\r\n                  </td>\r\n                  <td>\r\n                    <TextFormat type=\"date\" value={trimestreVigente.fechaFin} format={APP_DATE_FORMAT} />\r\n                  </td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${trimestreVigente.estado}`} />\r\n                  </td>\r\n                  <td>{trimestreVigente.anio1 ? <Link to={`anio/${trimestreVigente.anio1.id}`}>{trimestreVigente.anio1.id}</Link> : ''}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${trimestreVigente.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${trimestreVigente.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${trimestreVigente.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ trimestreVigente }: IRootState) => ({\r\n  trimestreVigenteList: trimestreVigente.entities,\r\n  totalItems: trimestreVigente.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrimestreVigente);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Trimestre from './trimestre';\r\nimport TrimestreDetail from './trimestre-detail';\r\nimport TrimestreUpdate from './trimestre-update';\r\nimport TrimestreDeleteDialog from './trimestre-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={TrimestreUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={TrimestreUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={TrimestreDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Trimestre} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={TrimestreDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { ITrimestre } from 'app/shared/model/trimestre.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './trimestre.reducer';\r\n\r\nexport interface ITrimestreDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class TrimestreDeleteDialog extends React.Component<ITrimestreDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.trimestreEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { trimestreEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.trimestre.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.trimestre.delete.question\" interpolate={{ id: trimestreEntity.id }}>\r\n            Are you sure you want to delete this Trimestre?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-trimestre\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ trimestre }: IRootState) => ({\r\n  trimestreEntity: trimestre.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrimestreDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './trimestre.reducer';\r\nimport { ITrimestre } from 'app/shared/model/trimestre.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface ITrimestreDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class TrimestreDetail extends React.Component<ITrimestreDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { trimestreEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.trimestre.detail.title\">Trimestre</Translate> [<b>{trimestreEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"nombreTrimestre\">\r\n                <Translate contentKey=\"ghostceetApp.trimestre.nombreTrimestre\">Nombre Trimestre</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{trimestreEntity.nombreTrimestre}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.trimestre.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{trimestreEntity.estado}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.trimestre.jornada\">Jornada</Translate>\r\n            </dt>\r\n            <dd>{trimestreEntity.jornada ? trimestreEntity.jornada.nombreJornada : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/trimestre\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/trimestre/${trimestreEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ trimestre }: IRootState) => ({\r\n  trimestreEntity: trimestre.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrimestreDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IJornada } from 'app/shared/model/jornada.model';\r\nimport { getEntities as getJornadas } from 'app/entities/jornada/jornada.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './trimestre.reducer';\r\nimport { ITrimestre } from 'app/shared/model/trimestre.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface ITrimestreUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface ITrimestreUpdateState {\r\n  isNew: boolean;\r\n  jornadaId: string;\r\n}\r\n\r\nexport class TrimestreUpdate extends React.Component<ITrimestreUpdateProps, ITrimestreUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jornadaId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getJornadas();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { trimestreEntity } = this.props;\r\n      const entity = {\r\n        ...trimestreEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/trimestre');\r\n  };\r\n\r\n  render() {\r\n    const { trimestreEntity, jornadas, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.trimestre.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.trimestre.home.createOrEditLabel\">Create or edit a Trimestre</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : trimestreEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"trimestre-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nombreTrimestreLabel\" for=\"nombreTrimestre\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestre.nombreTrimestre\">Nombre Trimestre</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"trimestre-nombreTrimestre\"\r\n                    type=\"text\"\r\n                    name=\"nombreTrimestre\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 20, errorMessage: translate('entity.validation.maxlength', { max: 20 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestre.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"trimestre-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && trimestreEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"jornada.nombreJornada\">\r\n                    <Translate contentKey=\"ghostceetApp.trimestre.jornada\">Jornada</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"trimestre-jornada\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"jornada.id\"\r\n                    value={isNew ? jornadas[0] && jornadas[0].id : trimestreEntity.jornada.id}\r\n                  >\r\n                    {jornadas\r\n                      ? jornadas.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.nombreJornada}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/trimestre\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  jornadas: storeState.jornada.entities,\r\n  trimestreEntity: storeState.trimestre.entity,\r\n  loading: storeState.trimestre.loading,\r\n  updating: storeState.trimestre.updating,\r\n  updateSuccess: storeState.trimestre.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getJornadas,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TrimestreUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { ITrimestre, defaultValue } from 'app/shared/model/trimestre.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_TRIMESTRE_LIST: 'trimestre/FETCH_TRIMESTRE_LIST',\r\n  FETCH_TRIMESTRE: 'trimestre/FETCH_TRIMESTRE',\r\n  CREATE_TRIMESTRE: 'trimestre/CREATE_TRIMESTRE',\r\n  UPDATE_TRIMESTRE: 'trimestre/UPDATE_TRIMESTRE',\r\n  DELETE_TRIMESTRE: 'trimestre/DELETE_TRIMESTRE',\r\n  RESET: 'trimestre/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<ITrimestre>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type TrimestreState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: TrimestreState = initialState, action): TrimestreState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_TRIMESTRE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_TRIMESTRE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_TRIMESTRE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_TRIMESTRE):\r\n    case REQUEST(ACTION_TYPES.DELETE_TRIMESTRE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_TRIMESTRE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_TRIMESTRE):\r\n    case FAILURE(ACTION_TYPES.CREATE_TRIMESTRE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_TRIMESTRE):\r\n    case FAILURE(ACTION_TYPES.DELETE_TRIMESTRE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_TRIMESTRE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_TRIMESTRE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_TRIMESTRE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_TRIMESTRE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_TRIMESTRE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/trimestres';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<ITrimestre> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_TRIMESTRE_LIST,\r\n    payload: axios.get<ITrimestre>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<ITrimestre> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_TRIMESTRE,\r\n    payload: axios.get<ITrimestre>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<ITrimestre> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_TRIMESTRE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<ITrimestre> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_TRIMESTRE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<ITrimestre> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_TRIMESTRE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './trimestre.reducer';\r\nimport { ITrimestre } from 'app/shared/model/trimestre.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface ITrimestreProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type ITrimestreState = IPaginationBaseState;\r\n\r\nexport class Trimestre extends React.Component<ITrimestreProps, ITrimestreState> {\r\n  state: ITrimestreState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { trimestreList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"trimestre-heading\">\r\n          <Translate contentKey=\"ghostceetApp.trimestre.home.title\">Trimestres</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.trimestre.home.createLabel\">Create new Trimestre</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('nombreTrimestre')}>\r\n                  <Translate contentKey=\"ghostceetApp.trimestre.nombreTrimestre\">Nombre Trimestre</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.trimestre.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.trimestre.jornada\">Jornada</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {trimestreList.map((trimestre, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${trimestre.id}`} color=\"link\" size=\"sm\">\r\n                      {trimestre.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{trimestre.nombreTrimestre}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${trimestre.estado}`} />\r\n                  </td>\r\n                  <td>{trimestre.jornada ? <Link to={`jornada/${trimestre.jornada.id}`}>{trimestre.jornada.nombreJornada}</Link> : ''}</td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${trimestre.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${trimestre.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${trimestre.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ trimestre }: IRootState) => ({\r\n  trimestreList: trimestre.entities,\r\n  totalItems: trimestre.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Trimestre);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport VersionHorario from './version-horario';\r\nimport VersionHorarioDetail from './version-horario-detail';\r\nimport VersionHorarioUpdate from './version-horario-update';\r\nimport VersionHorarioDeleteDialog from './version-horario-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={VersionHorarioUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={VersionHorarioUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={VersionHorarioDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={VersionHorario} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={VersionHorarioDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IVersionHorario } from 'app/shared/model/version-horario.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './version-horario.reducer';\r\n\r\nexport interface IVersionHorarioDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class VersionHorarioDeleteDialog extends React.Component<IVersionHorarioDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.versionHorarioEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { versionHorarioEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.versionHorario.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.versionHorario.delete.question\" interpolate={{ id: versionHorarioEntity.id }}>\r\n            Are you sure you want to delete this VersionHorario?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-versionHorario\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ versionHorario }: IRootState) => ({\r\n  versionHorarioEntity: versionHorario.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VersionHorarioDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './version-horario.reducer';\r\nimport { IVersionHorario } from 'app/shared/model/version-horario.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IVersionHorarioDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class VersionHorarioDetail extends React.Component<IVersionHorarioDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { versionHorarioEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.versionHorario.detail.title\">VersionHorario</Translate> [<b>{versionHorarioEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"numeroVersion\">\r\n                <Translate contentKey=\"ghostceetApp.versionHorario.numeroVersion\">Numero Version</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{versionHorarioEntity.numeroVersion}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.versionHorario.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{versionHorarioEntity.estado}</dd>\r\n            <dt>\r\n              <span id=\"trimestreVigenteId\">\r\n                <Translate contentKey=\"ghostceetApp.versionHorario.trimestreVigenteId\">Trimestre Vigente Id</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{versionHorarioEntity.trimestreVigenteId}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.versionHorario.versionTrimestre\">Version Trimestre</Translate>\r\n            </dt>\r\n            <dd>{versionHorarioEntity.versionTrimestre ? versionHorarioEntity.versionTrimestre.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/version-horario\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/version-horario/${versionHorarioEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ versionHorario }: IRootState) => ({\r\n  versionHorarioEntity: versionHorario.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VersionHorarioDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { ITrimestreVigente } from 'app/shared/model/trimestre-vigente.model';\r\nimport { getEntities as getTrimestreVigentes } from 'app/entities/trimestre-vigente/trimestre-vigente.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './version-horario.reducer';\r\nimport { IVersionHorario } from 'app/shared/model/version-horario.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IVersionHorarioUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IVersionHorarioUpdateState {\r\n  isNew: boolean;\r\n  versionTrimestreId: string;\r\n}\r\n\r\nexport class VersionHorarioUpdate extends React.Component<IVersionHorarioUpdateProps, IVersionHorarioUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      versionTrimestreId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getTrimestreVigentes();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { versionHorarioEntity } = this.props;\r\n      const entity = {\r\n        ...versionHorarioEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/version-horario');\r\n  };\r\n\r\n  render() {\r\n    const { versionHorarioEntity, trimestreVigentes, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.versionHorario.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.versionHorario.home.createOrEditLabel\">Create or edit a VersionHorario</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : versionHorarioEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"version-horario-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"numeroVersionLabel\" for=\"numeroVersion\">\r\n                    <Translate contentKey=\"ghostceetApp.versionHorario.numeroVersion\">Numero Version</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"version-horario-numeroVersion\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"numeroVersion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.versionHorario.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"version-horario-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && versionHorarioEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"trimestreVigenteIdLabel\" for=\"trimestreVigenteId\">\r\n                    <Translate contentKey=\"ghostceetApp.versionHorario.trimestreVigenteId\">Trimestre Vigente Id</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"version-horario-trimestreVigenteId\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"trimestreVigenteId\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"versionTrimestre.id\">\r\n                    <Translate contentKey=\"ghostceetApp.versionHorario.versionTrimestre\">Version Trimestre</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"version-horario-versionTrimestre\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"versionTrimestre.id\"\r\n                    value={isNew ? trimestreVigentes[0] && trimestreVigentes[0].id : versionHorarioEntity.versionTrimestre.id}\r\n                  >\r\n                    {trimestreVigentes\r\n                      ? trimestreVigentes.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/version-horario\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  trimestreVigentes: storeState.trimestreVigente.entities,\r\n  versionHorarioEntity: storeState.versionHorario.entity,\r\n  loading: storeState.versionHorario.loading,\r\n  updating: storeState.versionHorario.updating,\r\n  updateSuccess: storeState.versionHorario.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getTrimestreVigentes,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VersionHorarioUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IVersionHorario, defaultValue } from 'app/shared/model/version-horario.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_VERSIONHORARIO_LIST: 'versionHorario/FETCH_VERSIONHORARIO_LIST',\r\n  FETCH_VERSIONHORARIO: 'versionHorario/FETCH_VERSIONHORARIO',\r\n  CREATE_VERSIONHORARIO: 'versionHorario/CREATE_VERSIONHORARIO',\r\n  UPDATE_VERSIONHORARIO: 'versionHorario/UPDATE_VERSIONHORARIO',\r\n  DELETE_VERSIONHORARIO: 'versionHorario/DELETE_VERSIONHORARIO',\r\n  RESET: 'versionHorario/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IVersionHorario>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type VersionHorarioState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: VersionHorarioState = initialState, action): VersionHorarioState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_VERSIONHORARIO_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_VERSIONHORARIO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_VERSIONHORARIO):\r\n    case REQUEST(ACTION_TYPES.UPDATE_VERSIONHORARIO):\r\n    case REQUEST(ACTION_TYPES.DELETE_VERSIONHORARIO):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_VERSIONHORARIO_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_VERSIONHORARIO):\r\n    case FAILURE(ACTION_TYPES.CREATE_VERSIONHORARIO):\r\n    case FAILURE(ACTION_TYPES.UPDATE_VERSIONHORARIO):\r\n    case FAILURE(ACTION_TYPES.DELETE_VERSIONHORARIO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_VERSIONHORARIO_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_VERSIONHORARIO):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_VERSIONHORARIO):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_VERSIONHORARIO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_VERSIONHORARIO):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/version-horarios';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IVersionHorario> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_VERSIONHORARIO_LIST,\r\n    payload: axios.get<IVersionHorario>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IVersionHorario> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_VERSIONHORARIO,\r\n    payload: axios.get<IVersionHorario>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IVersionHorario> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_VERSIONHORARIO,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IVersionHorario> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_VERSIONHORARIO,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IVersionHorario> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_VERSIONHORARIO,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './version-horario.reducer';\r\nimport { IVersionHorario } from 'app/shared/model/version-horario.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IVersionHorarioProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IVersionHorarioState = IPaginationBaseState;\r\n\r\nexport class VersionHorario extends React.Component<IVersionHorarioProps, IVersionHorarioState> {\r\n  state: IVersionHorarioState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { versionHorarioList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"version-horario-heading\">\r\n          <Translate contentKey=\"ghostceetApp.versionHorario.home.title\">Version Horarios</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.versionHorario.home.createLabel\">Create new Version Horario</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('numeroVersion')}>\r\n                  <Translate contentKey=\"ghostceetApp.versionHorario.numeroVersion\">Numero Version</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.versionHorario.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('trimestreVigenteId')}>\r\n                  <Translate contentKey=\"ghostceetApp.versionHorario.trimestreVigenteId\">Trimestre Vigente Id</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.versionHorario.versionTrimestre\">Version Trimestre</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {versionHorarioList.map((versionHorario, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${versionHorario.id}`} color=\"link\" size=\"sm\">\r\n                      {versionHorario.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{versionHorario.numeroVersion}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${versionHorario.estado}`} />\r\n                  </td>\r\n                  <td>{versionHorario.trimestreVigenteId}</td>\r\n                  <td>\r\n                    {versionHorario.versionTrimestre ? (\r\n                      <Link to={`trimestre-vigente/${versionHorario.versionTrimestre.id}`}>{versionHorario.versionTrimestre.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${versionHorario.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${versionHorario.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${versionHorario.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ versionHorario }: IRootState) => ({\r\n  versionHorarioList: versionHorario.entities,\r\n  totalItems: versionHorario.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VersionHorario);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport VinculacionInstructor from './vinculacion-instructor';\r\nimport VinculacionInstructorDetail from './vinculacion-instructor-detail';\r\nimport VinculacionInstructorUpdate from './vinculacion-instructor-update';\r\nimport VinculacionInstructorDeleteDialog from './vinculacion-instructor-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={VinculacionInstructorUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={VinculacionInstructorUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={VinculacionInstructorDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={VinculacionInstructor} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={VinculacionInstructorDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './vinculacion-instructor.reducer';\r\n\r\nexport interface IVinculacionInstructorDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class VinculacionInstructorDeleteDialog extends React.Component<IVinculacionInstructorDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.vinculacionInstructorEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { vinculacionInstructorEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.vinculacionInstructor.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.vinculacionInstructor.delete.question\" interpolate={{ id: vinculacionInstructorEntity.id }}>\r\n            Are you sure you want to delete this VinculacionInstructor?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-vinculacionInstructor\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ vinculacionInstructor }: IRootState) => ({\r\n  vinculacionInstructorEntity: vinculacionInstructor.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VinculacionInstructorDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction, TextFormat } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './vinculacion-instructor.reducer';\r\nimport { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IVinculacionInstructorDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class VinculacionInstructorDetail extends React.Component<IVinculacionInstructorDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { vinculacionInstructorEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.vinculacionInstructor.detail.title\">VinculacionInstructor</Translate> [\r\n            <b>{vinculacionInstructorEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"fechaInicio\">\r\n                <Translate contentKey=\"ghostceetApp.vinculacionInstructor.fechaInicio\">Fecha Inicio</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={vinculacionInstructorEntity.fechaInicio} type=\"date\" format={APP_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <span id=\"fechaFin\">\r\n                <Translate contentKey=\"ghostceetApp.vinculacionInstructor.fechaFin\">Fecha Fin</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>\r\n              <TextFormat value={vinculacionInstructorEntity.fechaFin} type=\"date\" format={APP_DATE_FORMAT} />\r\n            </dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.vinculacionInstructor.instructor\">Instructor</Translate>\r\n            </dt>\r\n            <dd>{vinculacionInstructorEntity.instructor ? vinculacionInstructorEntity.instructor.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.vinculacionInstructor.anio1\">Anio 1</Translate>\r\n            </dt>\r\n            <dd>{vinculacionInstructorEntity.anio1 ? vinculacionInstructorEntity.anio1.id : ''}</dd>\r\n            <dt>\r\n              <Translate contentKey=\"ghostceetApp.vinculacionInstructor.vinculacion\">Vinculacion</Translate>\r\n            </dt>\r\n            <dd>{vinculacionInstructorEntity.vinculacion ? vinculacionInstructorEntity.vinculacion.tipoVinculacion : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/vinculacion-instructor\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/vinculacion-instructor/${vinculacionInstructorEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ vinculacionInstructor }: IRootState) => ({\r\n  vinculacionInstructorEntity: vinculacionInstructor.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VinculacionInstructorDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { getEntities as getInstructors } from 'app/entities/instructor/instructor.reducer';\r\nimport { IAnio } from 'app/shared/model/anio.model';\r\nimport { getEntities as getAnios } from 'app/entities/anio/anio.reducer';\r\nimport { IVinculacion } from 'app/shared/model/vinculacion.model';\r\nimport { getEntities as getVinculacions } from 'app/entities/vinculacion/vinculacion.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './vinculacion-instructor.reducer';\r\nimport { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IVinculacionInstructorUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IVinculacionInstructorUpdateState {\r\n  isNew: boolean;\r\n  instructorId: string;\r\n  anio1Id: string;\r\n  vinculacionId: string;\r\n}\r\n\r\nexport class VinculacionInstructorUpdate extends React.Component<IVinculacionInstructorUpdateProps, IVinculacionInstructorUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      instructorId: '0',\r\n      anio1Id: '0',\r\n      vinculacionId: '0',\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getInstructors();\r\n    this.props.getAnios();\r\n    this.props.getVinculacions();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    values.fechaInicio = convertDateTimeToServer(values.fechaInicio);\r\n    values.fechaFin = convertDateTimeToServer(values.fechaFin);\r\n\r\n    if (errors.length === 0) {\r\n      const { vinculacionInstructorEntity } = this.props;\r\n      const entity = {\r\n        ...vinculacionInstructorEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/vinculacion-instructor');\r\n  };\r\n\r\n  render() {\r\n    const { vinculacionInstructorEntity, instructors, anios, vinculacions, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.vinculacionInstructor.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.vinculacionInstructor.home.createOrEditLabel\">\r\n                Create or edit a VinculacionInstructor\r\n              </Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : vinculacionInstructorEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"vinculacion-instructor-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"fechaInicioLabel\" for=\"fechaInicio\">\r\n                    <Translate contentKey=\"ghostceetApp.vinculacionInstructor.fechaInicio\">Fecha Inicio</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"vinculacion-instructor-fechaInicio\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"fechaInicio\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.vinculacionInstructorEntity.fechaInicio)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"fechaFinLabel\" for=\"fechaFin\">\r\n                    <Translate contentKey=\"ghostceetApp.vinculacionInstructor.fechaFin\">Fecha Fin</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"vinculacion-instructor-fechaFin\"\r\n                    type=\"datetime-local\"\r\n                    className=\"form-control\"\r\n                    name=\"fechaFin\"\r\n                    placeholder={'YYYY-MM-DD HH:mm'}\r\n                    value={isNew ? null : convertDateTimeFromServer(this.props.vinculacionInstructorEntity.fechaFin)}\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"instructor.id\">\r\n                    <Translate contentKey=\"ghostceetApp.vinculacionInstructor.instructor\">Instructor</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"vinculacion-instructor-instructor\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"instructor.id\"\r\n                    value={isNew ? instructors[0] && instructors[0].id : vinculacionInstructorEntity.instructor.id}\r\n                  >\r\n                    {instructors\r\n                      ? instructors.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"anio1.id\">\r\n                    <Translate contentKey=\"ghostceetApp.vinculacionInstructor.anio1\">Anio 1</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"vinculacion-instructor-anio1\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"anio1.id\"\r\n                    value={isNew ? anios[0] && anios[0].id : vinculacionInstructorEntity.anio1.id}\r\n                  >\r\n                    {anios\r\n                      ? anios.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"vinculacion.tipoVinculacion\">\r\n                    <Translate contentKey=\"ghostceetApp.vinculacionInstructor.vinculacion\">Vinculacion</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"vinculacion-instructor-vinculacion\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"vinculacion.id\"\r\n                    value={isNew ? vinculacions[0] && vinculacions[0].id : vinculacionInstructorEntity.vinculacion.id}\r\n                  >\r\n                    {vinculacions\r\n                      ? vinculacions.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.tipoVinculacion}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/vinculacion-instructor\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  instructors: storeState.instructor.entities,\r\n  anios: storeState.anio.entities,\r\n  vinculacions: storeState.vinculacion.entities,\r\n  vinculacionInstructorEntity: storeState.vinculacionInstructor.entity,\r\n  loading: storeState.vinculacionInstructor.loading,\r\n  updating: storeState.vinculacionInstructor.updating,\r\n  updateSuccess: storeState.vinculacionInstructor.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getInstructors,\r\n  getAnios,\r\n  getVinculacions,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VinculacionInstructorUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IVinculacionInstructor, defaultValue } from 'app/shared/model/vinculacion-instructor.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_VINCULACIONINSTRUCTOR_LIST: 'vinculacionInstructor/FETCH_VINCULACIONINSTRUCTOR_LIST',\r\n  FETCH_VINCULACIONINSTRUCTOR: 'vinculacionInstructor/FETCH_VINCULACIONINSTRUCTOR',\r\n  CREATE_VINCULACIONINSTRUCTOR: 'vinculacionInstructor/CREATE_VINCULACIONINSTRUCTOR',\r\n  UPDATE_VINCULACIONINSTRUCTOR: 'vinculacionInstructor/UPDATE_VINCULACIONINSTRUCTOR',\r\n  DELETE_VINCULACIONINSTRUCTOR: 'vinculacionInstructor/DELETE_VINCULACIONINSTRUCTOR',\r\n  RESET: 'vinculacionInstructor/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IVinculacionInstructor>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type VinculacionInstructorState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: VinculacionInstructorState = initialState, action): VinculacionInstructorState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_VINCULACIONINSTRUCTOR_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_VINCULACIONINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_VINCULACIONINSTRUCTOR):\r\n    case REQUEST(ACTION_TYPES.UPDATE_VINCULACIONINSTRUCTOR):\r\n    case REQUEST(ACTION_TYPES.DELETE_VINCULACIONINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_VINCULACIONINSTRUCTOR_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_VINCULACIONINSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.CREATE_VINCULACIONINSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.UPDATE_VINCULACIONINSTRUCTOR):\r\n    case FAILURE(ACTION_TYPES.DELETE_VINCULACIONINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_VINCULACIONINSTRUCTOR_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_VINCULACIONINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_VINCULACIONINSTRUCTOR):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_VINCULACIONINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_VINCULACIONINSTRUCTOR):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/vinculacion-instructors';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IVinculacionInstructor> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_VINCULACIONINSTRUCTOR_LIST,\r\n    payload: axios.get<IVinculacionInstructor>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IVinculacionInstructor> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_VINCULACIONINSTRUCTOR,\r\n    payload: axios.get<IVinculacionInstructor>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IVinculacionInstructor> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_VINCULACIONINSTRUCTOR,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IVinculacionInstructor> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_VINCULACIONINSTRUCTOR,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IVinculacionInstructor> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_VINCULACIONINSTRUCTOR,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport {\r\n  Translate,\r\n  ICrudGetAllAction,\r\n  TextFormat,\r\n  getSortState,\r\n  IPaginationBaseState,\r\n  getPaginationItemsNumber,\r\n  JhiPagination\r\n} from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './vinculacion-instructor.reducer';\r\nimport { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IVinculacionInstructorProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IVinculacionInstructorState = IPaginationBaseState;\r\n\r\nexport class VinculacionInstructor extends React.Component<IVinculacionInstructorProps, IVinculacionInstructorState> {\r\n  state: IVinculacionInstructorState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { vinculacionInstructorList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"vinculacion-instructor-heading\">\r\n          <Translate contentKey=\"ghostceetApp.vinculacionInstructor.home.title\">Vinculacion Instructors</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.vinculacionInstructor.home.createLabel\">Create new Vinculacion Instructor</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('fechaInicio')}>\r\n                  <Translate contentKey=\"ghostceetApp.vinculacionInstructor.fechaInicio\">Fecha Inicio</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('fechaFin')}>\r\n                  <Translate contentKey=\"ghostceetApp.vinculacionInstructor.fechaFin\">Fecha Fin</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.vinculacionInstructor.instructor\">Instructor</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.vinculacionInstructor.anio1\">Anio 1</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th>\r\n                  <Translate contentKey=\"ghostceetApp.vinculacionInstructor.vinculacion\">Vinculacion</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {vinculacionInstructorList.map((vinculacionInstructor, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${vinculacionInstructor.id}`} color=\"link\" size=\"sm\">\r\n                      {vinculacionInstructor.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>\r\n                    <TextFormat type=\"date\" value={vinculacionInstructor.fechaInicio} format={APP_DATE_FORMAT} />\r\n                  </td>\r\n                  <td>\r\n                    <TextFormat type=\"date\" value={vinculacionInstructor.fechaFin} format={APP_DATE_FORMAT} />\r\n                  </td>\r\n                  <td>\r\n                    {vinculacionInstructor.instructor ? (\r\n                      <Link to={`instructor/${vinculacionInstructor.instructor.id}`}>{vinculacionInstructor.instructor.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {vinculacionInstructor.anio1 ? (\r\n                      <Link to={`anio/${vinculacionInstructor.anio1.id}`}>{vinculacionInstructor.anio1.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {vinculacionInstructor.vinculacion ? (\r\n                      <Link to={`vinculacion/${vinculacionInstructor.vinculacion.id}`}>\r\n                        {vinculacionInstructor.vinculacion.tipoVinculacion}\r\n                      </Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${vinculacionInstructor.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${vinculacionInstructor.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${vinculacionInstructor.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ vinculacionInstructor }: IRootState) => ({\r\n  vinculacionInstructorList: vinculacionInstructor.entities,\r\n  totalItems: vinculacionInstructor.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VinculacionInstructor);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Vinculacion from './vinculacion';\r\nimport VinculacionDetail from './vinculacion-detail';\r\nimport VinculacionUpdate from './vinculacion-update';\r\nimport VinculacionDeleteDialog from './vinculacion-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={VinculacionUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={VinculacionUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={VinculacionDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={Vinculacion} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={VinculacionDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { Translate, ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IVinculacion } from 'app/shared/model/vinculacion.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './vinculacion.reducer';\r\n\r\nexport interface IVinculacionDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class VinculacionDeleteDialog extends React.Component<IVinculacionDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.vinculacionEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { vinculacionEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>\r\n          <Translate contentKey=\"entity.delete.title\">Confirm delete operation</Translate>\r\n        </ModalHeader>\r\n        <ModalBody id=\"ghostceetApp.vinculacion.delete.question\">\r\n          <Translate contentKey=\"ghostceetApp.vinculacion.delete.question\" interpolate={{ id: vinculacionEntity.id }}>\r\n            Are you sure you want to delete this Vinculacion?\r\n          </Translate>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n          </Button>\r\n          <Button id=\"jhi-confirm-delete-vinculacion\" color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ vinculacion }: IRootState) => ({\r\n  vinculacionEntity: vinculacion.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VinculacionDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './vinculacion.reducer';\r\nimport { IVinculacion } from 'app/shared/model/vinculacion.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IVinculacionDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport class VinculacionDetail extends React.Component<IVinculacionDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { vinculacionEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            <Translate contentKey=\"ghostceetApp.vinculacion.detail.title\">Vinculacion</Translate> [<b>{vinculacionEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"tipoVinculacion\">\r\n                <Translate contentKey=\"ghostceetApp.vinculacion.tipoVinculacion\">Tipo Vinculacion</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{vinculacionEntity.tipoVinculacion}</dd>\r\n            <dt>\r\n              <span id=\"horas\">\r\n                <Translate contentKey=\"ghostceetApp.vinculacion.horas\">Horas</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{vinculacionEntity.horas}</dd>\r\n            <dt>\r\n              <span id=\"estado\">\r\n                <Translate contentKey=\"ghostceetApp.vinculacion.estado\">Estado</Translate>\r\n              </span>\r\n            </dt>\r\n            <dd>{vinculacionEntity.estado}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/vinculacion\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n            </span>\r\n          </Button>\r\n          &nbsp;\r\n          <Button tag={Link} to={`/entity/vinculacion/${vinculacionEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n            <span className=\"d-none d-md-inline\">\r\n              <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n            </span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ vinculacion }: IRootState) => ({\r\n  vinculacionEntity: vinculacion.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VinculacionDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, translate, ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntity, updateEntity, createEntity, reset } from './vinculacion.reducer';\r\nimport { IVinculacion } from 'app/shared/model/vinculacion.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer, convertDateTimeToServer } from 'app/shared/util/date-utils';\r\nimport { mapIdList } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IVinculacionUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: string }> {}\r\n\r\nexport interface IVinculacionUpdateState {\r\n  isNew: boolean;\r\n}\r\n\r\nexport class VinculacionUpdate extends React.Component<IVinculacionUpdateProps, IVinculacionUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (nextProps.updateSuccess !== this.props.updateSuccess && nextProps.updateSuccess) {\r\n      this.handleClose();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { vinculacionEntity } = this.props;\r\n      const entity = {\r\n        ...vinculacionEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/vinculacion');\r\n  };\r\n\r\n  render() {\r\n    const { vinculacionEntity, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"ghostceetApp.vinculacion.home.createOrEditLabel\">\r\n              <Translate contentKey=\"ghostceetApp.vinculacion.home.createOrEditLabel\">Create or edit a Vinculacion</Translate>\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : vinculacionEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">\r\n                      <Translate contentKey=\"global.field.id\">ID</Translate>\r\n                    </Label>\r\n                    <AvInput id=\"vinculacion-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"tipoVinculacionLabel\" for=\"tipoVinculacion\">\r\n                    <Translate contentKey=\"ghostceetApp.vinculacion.tipoVinculacion\">Tipo Vinculacion</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"vinculacion-tipoVinculacion\"\r\n                    type=\"text\"\r\n                    name=\"tipoVinculacion\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      maxLength: { value: 40, errorMessage: translate('entity.validation.maxlength', { max: 40 }) }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"horasLabel\" for=\"horas\">\r\n                    <Translate contentKey=\"ghostceetApp.vinculacion.horas\">Horas</Translate>\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"vinculacion-horas\"\r\n                    type=\"string\"\r\n                    className=\"form-control\"\r\n                    name=\"horas\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: translate('entity.validation.required') },\r\n                      number: { value: true, errorMessage: translate('entity.validation.number') }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"estadoLabel\">\r\n                    <Translate contentKey=\"ghostceetApp.vinculacion.estado\">Estado</Translate>\r\n                  </Label>\r\n                  <AvInput\r\n                    id=\"vinculacion-estado\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"estado\"\r\n                    value={(!isNew && vinculacionEntity.estado) || 'Habilitado'}\r\n                  >\r\n                    <option value=\"Habilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Habilitado\" />\r\n                    </option>\r\n                    <option value=\"Inhabilitado\">\r\n                      <Translate contentKey=\"ghostceetApp.Estado.Inhabilitado\" />\r\n                    </option>\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/vinculacion\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />\r\n                  &nbsp;\r\n                  <span className=\"d-none d-md-inline\">\r\n                    <Translate contentKey=\"entity.action.back\">Back</Translate>\r\n                  </span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />\r\n                  &nbsp;\r\n                  <Translate contentKey=\"entity.action.save\">Save</Translate>\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  vinculacionEntity: storeState.vinculacion.entity,\r\n  loading: storeState.vinculacion.loading,\r\n  updating: storeState.vinculacion.updating,\r\n  updateSuccess: storeState.vinculacion.updateSuccess\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(VinculacionUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IVinculacion, defaultValue } from 'app/shared/model/vinculacion.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_VINCULACION_LIST: 'vinculacion/FETCH_VINCULACION_LIST',\r\n  FETCH_VINCULACION: 'vinculacion/FETCH_VINCULACION',\r\n  CREATE_VINCULACION: 'vinculacion/CREATE_VINCULACION',\r\n  UPDATE_VINCULACION: 'vinculacion/UPDATE_VINCULACION',\r\n  DELETE_VINCULACION: 'vinculacion/DELETE_VINCULACION',\r\n  RESET: 'vinculacion/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IVinculacion>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  totalItems: 0,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type VinculacionState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: VinculacionState = initialState, action): VinculacionState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_VINCULACION_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_VINCULACION):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_VINCULACION):\r\n    case REQUEST(ACTION_TYPES.UPDATE_VINCULACION):\r\n    case REQUEST(ACTION_TYPES.DELETE_VINCULACION):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_VINCULACION_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_VINCULACION):\r\n    case FAILURE(ACTION_TYPES.CREATE_VINCULACION):\r\n    case FAILURE(ACTION_TYPES.UPDATE_VINCULACION):\r\n    case FAILURE(ACTION_TYPES.DELETE_VINCULACION):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_VINCULACION_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalItems: action.payload.headers['x-total-count'],\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_VINCULACION):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_VINCULACION):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_VINCULACION):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_VINCULACION):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/vinculacions';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IVinculacion> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_VINCULACION_LIST,\r\n    payload: axios.get<IVinculacion>(`${requestUrl}${sort ? '&' : '?'}cacheBuster=${new Date().getTime()}`)\r\n  };\r\n};\r\n\r\nexport const getEntity: ICrudGetAction<IVinculacion> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_VINCULACION,\r\n    payload: axios.get<IVinculacion>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IVinculacion> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_VINCULACION,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IVinculacion> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_VINCULACION,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IVinculacion> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_VINCULACION,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { Translate, ICrudGetAllAction, getSortState, IPaginationBaseState, getPaginationItemsNumber, JhiPagination } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './vinculacion.reducer';\r\nimport { IVinculacion } from 'app/shared/model/vinculacion.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\nimport { ITEMS_PER_PAGE } from 'app/shared/util/pagination.constants';\r\n\r\nexport interface IVinculacionProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport type IVinculacionState = IPaginationBaseState;\r\n\r\nexport class Vinculacion extends React.Component<IVinculacionProps, IVinculacionState> {\r\n  state: IVinculacionState = {\r\n    ...getSortState(this.props.location, ITEMS_PER_PAGE)\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getEntities();\r\n  }\r\n\r\n  sort = prop => () => {\r\n    this.setState(\r\n      {\r\n        order: this.state.order === 'asc' ? 'desc' : 'asc',\r\n        sort: prop\r\n      },\r\n      () => this.sortEntities()\r\n    );\r\n  };\r\n\r\n  sortEntities() {\r\n    this.getEntities();\r\n    this.props.history.push(`${this.props.location.pathname}?page=${this.state.activePage}&sort=${this.state.sort},${this.state.order}`);\r\n  }\r\n\r\n  handlePagination = activePage => this.setState({ activePage }, () => this.sortEntities());\r\n\r\n  getEntities = () => {\r\n    const { activePage, itemsPerPage, sort, order } = this.state;\r\n    this.props.getEntities(activePage - 1, itemsPerPage, `${sort},${order}`);\r\n  };\r\n\r\n  render() {\r\n    const { vinculacionList, match, totalItems } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"vinculacion-heading\">\r\n          <Translate contentKey=\"ghostceetApp.vinculacion.home.title\">Vinculacions</Translate>\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />\r\n            &nbsp;\r\n            <Translate contentKey=\"ghostceetApp.vinculacion.home.createLabel\">Create new Vinculacion</Translate>\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"hand\" onClick={this.sort('id')}>\r\n                  <Translate contentKey=\"global.field.id\">ID</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('tipoVinculacion')}>\r\n                  <Translate contentKey=\"ghostceetApp.vinculacion.tipoVinculacion\">Tipo Vinculacion</Translate>{' '}\r\n                  <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('horas')}>\r\n                  <Translate contentKey=\"ghostceetApp.vinculacion.horas\">Horas</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th className=\"hand\" onClick={this.sort('estado')}>\r\n                  <Translate contentKey=\"ghostceetApp.vinculacion.estado\">Estado</Translate> <FontAwesomeIcon icon=\"sort\" />\r\n                </th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {vinculacionList.map((vinculacion, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${vinculacion.id}`} color=\"link\" size=\"sm\">\r\n                      {vinculacion.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{vinculacion.tipoVinculacion}</td>\r\n                  <td>{vinculacion.horas}</td>\r\n                  <td>\r\n                    <Translate contentKey={`ghostceetApp.Estado.${vinculacion.estado}`} />\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${vinculacion.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.view\">View</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${vinculacion.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.edit\">Edit</Translate>\r\n                        </span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${vinculacion.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" />{' '}\r\n                        <span className=\"d-none d-md-inline\">\r\n                          <Translate contentKey=\"entity.action.delete\">Delete</Translate>\r\n                        </span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n        <Row className=\"justify-content-center\">\r\n          <JhiPagination\r\n            items={getPaginationItemsNumber(totalItems, this.state.itemsPerPage)}\r\n            activePage={this.state.activePage}\r\n            onSelect={this.handlePagination}\r\n            maxButtons={5}\r\n          />\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ vinculacion }: IRootState) => ({\r\n  vinculacionList: vinculacion.entities,\r\n  totalItems: vinculacion.totalItems\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Vinculacion);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { AppContainer } from 'react-hot-loader';\r\n\r\nimport DevTools from './config/devtools';\r\nimport initStore from './config/store';\r\nimport { registerLocale } from './config/translation';\r\nimport setupAxiosInterceptors from './config/axios-interceptor';\r\nimport { clearAuthentication } from './shared/reducers/authentication';\r\nimport ErrorBoundary from './shared/error/error-boundary';\r\nimport AppComponent from './app';\r\nimport { loadIcons } from './config/icon-loader';\r\n\r\nconst devTools = process.env.NODE_ENV === 'development' ? <DevTools /> : null;\r\n\r\nconst store = initStore();\r\nregisterLocale(store);\r\n\r\nconst actions = bindActionCreators({ clearAuthentication }, store.dispatch);\r\nsetupAxiosInterceptors(() => actions.clearAuthentication('login.error.unauthorized'));\r\n\r\nloadIcons();\r\n\r\nconst rootEl = document.getElementById('root');\r\n\r\nconst render = Component =>\r\n  ReactDOM.render(\r\n    <ErrorBoundary>\r\n      <AppContainer>\r\n        <Provider store={store}>\r\n          <div>\r\n            {/* If this slows down the app in dev disable it and enable when required  */}\r\n            {devTools}\r\n            <Component />\r\n          </div>\r\n        </Provider>\r\n      </AppContainer>\r\n    </ErrorBoundary>,\r\n    rootEl\r\n  );\r\n\r\nrender(AppComponent);\r\n\r\n// This is quite unstable\r\n// if (module.hot) {\r\n//   module.hot.accept('./app', () => {\r\n//     const NextApp = require<{ default: typeof AppComponent }>('./app').default;\r\n//     render(NextApp);\r\n//   });\r\n// }\r\n","import axios from 'axios';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  ACTIVATE_ACCOUNT: 'activate/ACTIVATE_ACCOUNT',\r\n  RESET: 'activate/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  activationSuccess: false,\r\n  activationFailure: false\r\n};\r\n\r\nexport type ActivateState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: ActivateState = initialState, action): ActivateState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n      return {\r\n        ...state\r\n      };\r\n    case FAILURE(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        activationFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        activationSuccess: true\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\nexport const activateAction = key => ({\r\n  type: ACTION_TYPES.ACTIVATE_ACCOUNT,\r\n  payload: axios.get('api/activate?key=' + key)\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col, Alert } from 'reactstrap';\r\nimport { Translate, getUrlParameter } from 'react-jhipster';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { activateAction, reset } from './activate.reducer';\r\n\r\nconst successAlert = (\r\n  <Alert color=\"success\">\r\n    <Translate contentKey=\"activate.messages.success\">\r\n      <strong>Your user account has been activated.</strong> Please\r\n    </Translate>\r\n    <Link to=\"/login\" className=\"alert-link\">\r\n      <Translate contentKey=\"global.messages.info.authenticated.link\">sign in</Translate>\r\n    </Link>\r\n    .\r\n  </Alert>\r\n);\r\n\r\nconst failureAlert = (\r\n  <Alert color=\"danger\">\r\n    <Translate contentKey=\"activate.messages.error\">\r\n      <strong>Your user could not be activated.</strong> Please use the registration form to sign up.\r\n    </Translate>\r\n  </Alert>\r\n);\r\n\r\nexport interface IActivateProps extends StateProps, DispatchProps, RouteComponentProps<{ key: any }> {}\r\n\r\nexport class ActivatePage extends React.Component<IActivateProps> {\r\n  componentWillUnmount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const key = getUrlParameter('key', this.props.location.search);\r\n    this.props.activateAction(key);\r\n  }\r\n\r\n  render() {\r\n    const { activationSuccess, activationFailure } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h1>\r\n              <Translate contentKey=\"activate.title\">Activation</Translate>\r\n            </h1>\r\n            {activationSuccess ? successAlert : undefined}\r\n            {activationFailure ? failureAlert : undefined}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activate }: IRootState) => ({\r\n  activationSuccess: activate.activationSuccess,\r\n  activationFailure: activate.activationFailure\r\n});\r\n\r\nconst mapDispatchToProps = { activateAction, reset };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActivatePage);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Alert, Col, Row, Button } from 'reactstrap';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { Translate, translate, getUrlParameter } from 'react-jhipster';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { handlePasswordResetFinish, reset } from '../password-reset.reducer';\r\nimport PasswordStrengthBar from 'app/shared/layout/password/password-strength-bar';\r\n\r\nexport interface IPasswordResetFinishProps extends DispatchProps, RouteComponentProps<{ key: string }> {}\r\n\r\nexport interface IPasswordResetFinishState {\r\n  password: string;\r\n  key: string;\r\n}\r\n\r\nexport class PasswordResetFinishPage extends React.Component<IPasswordResetFinishProps, IPasswordResetFinishState> {\r\n  state: IPasswordResetFinishState = {\r\n    password: '',\r\n    key: getUrlParameter('key', this.props.location.search)\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  handleValidSubmit = (event, values) => {\r\n    this.props.handlePasswordResetFinish(this.state.key, values.newPassword);\r\n  };\r\n\r\n  updatePassword = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  getResetForm() {\r\n    return (\r\n      <AvForm onValidSubmit={this.handleValidSubmit}>\r\n        <AvField\r\n          name=\"newPassword\"\r\n          label={translate('global.form.newpassword')}\r\n          placeholder={translate('global.form.newpassword.placeholder')}\r\n          type=\"password\"\r\n          validate={{\r\n            required: { value: true, errorMessage: translate('global.messages.validate.newpassword.required') },\r\n            minLength: { value: 4, errorMessage: translate('global.messages.validate.newpassword.minlength') },\r\n            maxLength: { value: 50, errorMessage: translate('global.messages.validate.newpassword.maxlength') }\r\n          }}\r\n          onChange={this.updatePassword}\r\n        />\r\n        <PasswordStrengthBar password={this.state.password} />\r\n        <AvField\r\n          name=\"confirmPassword\"\r\n          label={translate('global.form.confirmpassword')}\r\n          placeholder={translate('global.form.confirmpassword.placeholder')}\r\n          type=\"password\"\r\n          validate={{\r\n            required: { value: true, errorMessage: translate('global.messages.validate.confirmpassword.required') },\r\n            minLength: { value: 4, errorMessage: translate('global.messages.validate.confirmpassword.minlength') },\r\n            maxLength: { value: 50, errorMessage: translate('global.messages.validate.confirmpassword.maxlength') },\r\n            match: { value: 'newPassword', errorMessage: translate('global.messages.error.dontmatch') }\r\n          }}\r\n        />\r\n        <Button color=\"success\" type=\"submit\">\r\n          <Translate contentKey=\"reset.finish.form.button\">Validate new password</Translate>\r\n        </Button>\r\n      </AvForm>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { key } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"4\">\r\n            <h1>\r\n              <Translate contentKey=\"reset.finish.title\">Reset password</Translate>\r\n            </h1>\r\n            <div>{key ? this.getResetForm() : null}</div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { handlePasswordResetFinish, reset };\r\n\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(PasswordResetFinishPage);\r\n","import React from 'react';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { connect } from 'react-redux';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { Button, Alert, Col, Row } from 'reactstrap';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { handlePasswordResetInit, reset } from '../password-reset.reducer';\r\n\r\nexport type IPasswordResetInitProps = DispatchProps;\r\n\r\nexport class PasswordResetInit extends React.Component<IPasswordResetInitProps> {\r\n  componentWillUnmount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  handleValidSubmit = (event, values) => {\r\n    this.props.handlePasswordResetInit(values.email);\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h1>\r\n              <Translate contentKey=\"reset.request.title\">Reset your password</Translate>\r\n            </h1>\r\n            <Alert color=\"warning\">\r\n              <p>\r\n                <Translate contentKey=\"reset.request.messages.info\">Enter the email address you used to register</Translate>\r\n              </p>\r\n            </Alert>\r\n            <AvForm onValidSubmit={this.handleValidSubmit}>\r\n              <AvField\r\n                name=\"email\"\r\n                label={translate('global.form.email')}\r\n                placeholder={translate('global.form.email.placeholder')}\r\n                type=\"email\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: translate('global.messages.validate.email.required') },\r\n                  minLength: { value: 5, errorMessage: translate('global.messages.validate.email.minlength') },\r\n                  maxLength: { value: 254, errorMessage: translate('global.messages.validate.email.maxlength') }\r\n                }}\r\n              />\r\n              <Button color=\"primary\" type=\"submit\">\r\n                <Translate contentKey=\"reset.request.form.button\">Reset password</Translate>\r\n              </Button>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { handlePasswordResetInit, reset };\r\n\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(PasswordResetInit);\r\n","import axios from 'axios';\r\nimport { translate } from 'react-jhipster';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  RESET_PASSWORD_INIT: 'passwordReset/RESET_PASSWORD_INIT',\r\n  RESET_PASSWORD_FINISH: 'passwordReset/RESET_PASSWORD_FINISH',\r\n  RESET: 'passwordReset/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  resetPasswordSuccess: false,\r\n  resetPasswordFailure: false\r\n};\r\n\r\nexport type PasswordResetState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: PasswordResetState = initialState, action): PasswordResetState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.RESET_PASSWORD_FINISH):\r\n    case REQUEST(ACTION_TYPES.RESET_PASSWORD_INIT):\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.RESET_PASSWORD_FINISH):\r\n    case FAILURE(ACTION_TYPES.RESET_PASSWORD_INIT):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        resetPasswordFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.RESET_PASSWORD_FINISH):\r\n    case SUCCESS(ACTION_TYPES.RESET_PASSWORD_INIT):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        resetPasswordSuccess: true\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/account/reset-password';\r\n\r\n// Actions\r\nexport const handlePasswordResetInit = mail => ({\r\n  type: ACTION_TYPES.RESET_PASSWORD_INIT,\r\n  // If the content-type isn't set that way, axios will try to encode the body and thus modify the data sent to the server.\r\n  payload: axios.post(`${apiUrl}/init`, mail, { headers: { ['Content-Type']: 'text/plain' } }),\r\n  meta: {\r\n    successMessage: translate('reset.request.messages.success'),\r\n    errorMessage: translate('reset.request.messages.notfound')\r\n  }\r\n});\r\n\r\nexport const handlePasswordResetFinish = (key, newPassword) => ({\r\n  type: ACTION_TYPES.RESET_PASSWORD_FINISH,\r\n  payload: axios.post(`${apiUrl}/finish`, { key, newPassword }),\r\n  meta: {\r\n    successMessage: translate('reset.finish.messages.success')\r\n  }\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import axios from 'axios';\r\nimport { translate } from 'react-jhipster';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  UPDATE_PASSWORD: 'account/UPDATE_PASSWORD',\r\n  RESET: 'account/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  updateSuccess: false,\r\n  updateFailure: false\r\n};\r\n\r\nexport type PasswordState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: PasswordState = initialState, action): PasswordState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.UPDATE_PASSWORD):\r\n      return {\r\n        ...initialState,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.UPDATE_PASSWORD):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        updateSuccess: false,\r\n        updateFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PASSWORD):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        updateSuccess: true,\r\n        updateFailure: false\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\nconst apiUrl = 'api/account';\r\n\r\nexport const savePassword = (currentPassword, newPassword) => ({\r\n  type: ACTION_TYPES.UPDATE_PASSWORD,\r\n  payload: axios.post(`${apiUrl}/change-password`, { currentPassword, newPassword }),\r\n  meta: {\r\n    successMessage: translate('password.messages.success'),\r\n    errorMessage: translate('password.messages.error')\r\n  }\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import axios from 'axios';\r\nimport { translate } from 'react-jhipster';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  CREATE_ACCOUNT: 'register/CREATE_ACCOUNT',\r\n  RESET: 'register/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  registrationSuccess: false,\r\n  registrationFailure: false,\r\n  errorMessage: null\r\n};\r\n\r\nexport type RegisterState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: RegisterState = initialState, action): RegisterState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.CREATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.CREATE_ACCOUNT):\r\n      return {\r\n        ...initialState,\r\n        registrationFailure: true,\r\n        errorMessage: action.payload.response.data.errorKey\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_ACCOUNT):\r\n      return {\r\n        ...initialState,\r\n        registrationSuccess: true\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\nexport const handleRegister = (login, email, password, langKey = 'en') => ({\r\n  type: ACTION_TYPES.CREATE_ACCOUNT,\r\n  payload: axios.post('api/register', { login, email, password, langKey }),\r\n  meta: {\r\n    successMessage: translate('register.messages.success')\r\n  }\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { connect } from 'react-redux';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { Row, Col, Alert, Button } from 'reactstrap';\r\n\r\nimport PasswordStrengthBar from 'app/shared/layout/password/password-strength-bar';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { handleRegister, reset } from './register.reducer';\r\n\r\nexport interface IRegisterProps extends StateProps, DispatchProps {}\r\n\r\nexport interface IRegisterState {\r\n  password: string;\r\n}\r\n\r\nexport class RegisterPage extends React.Component<IRegisterProps, IRegisterState> {\r\n  state: IRegisterState = {\r\n    password: ''\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  handleValidSubmit = (event, values) => {\r\n    this.props.handleRegister(values.username, values.email, values.firstPassword, this.props.currentLocale);\r\n    event.preventDefault();\r\n  };\r\n\r\n  updatePassword = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h1 id=\"register-title\">\r\n              <Translate contentKey=\"register.title\">Registration</Translate>\r\n            </h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <AvForm id=\"register-form\" onValidSubmit={this.handleValidSubmit}>\r\n              <AvField\r\n                name=\"username\"\r\n                label={translate('global.form.username')}\r\n                placeholder={translate('global.form.username.placeholder')}\r\n                validate={{\r\n                  required: { value: true, errorMessage: translate('register.messages.validate.login.required') },\r\n                  pattern: { value: '^[_.@A-Za-z0-9-]*$', errorMessage: translate('register.messages.validate.login.pattern') },\r\n                  minLength: { value: 1, errorMessage: translate('register.messages.validate.login.minlength') },\r\n                  maxLength: { value: 50, errorMessage: translate('register.messages.validate.login.maxlength') }\r\n                }}\r\n              />\r\n              <AvField\r\n                name=\"email\"\r\n                label={translate('global.form.email')}\r\n                placeholder={translate('global.form.email.placeholder')}\r\n                type=\"email\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: translate('global.messages.validate.email.required') },\r\n                  minLength: { value: 5, errorMessage: translate('global.messages.validate.email.minlength') },\r\n                  maxLength: { value: 254, errorMessage: translate('global.messages.validate.email.maxlength') }\r\n                }}\r\n              />\r\n              <AvField\r\n                name=\"firstPassword\"\r\n                label={translate('global.form.newpassword')}\r\n                placeholder={translate('global.form.newpassword.placeholder')}\r\n                type=\"password\"\r\n                onChange={this.updatePassword}\r\n                validate={{\r\n                  required: { value: true, errorMessage: translate('global.messages.validate.newpassword.required') },\r\n                  minLength: { value: 4, errorMessage: translate('global.messages.validate.newpassword.minlength') },\r\n                  maxLength: { value: 50, errorMessage: translate('global.messages.validate.newpassword.maxlength') }\r\n                }}\r\n              />\r\n              <PasswordStrengthBar password={this.state.password} />\r\n              <AvField\r\n                name=\"secondPassword\"\r\n                label={translate('global.form.confirmpassword')}\r\n                placeholder={translate('global.form.confirmpassword.placeholder')}\r\n                type=\"password\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: translate('global.messages.validate.confirmpassword.required') },\r\n                  minLength: { value: 4, errorMessage: translate('global.messages.validate.confirmpassword.minlength') },\r\n                  maxLength: { value: 50, errorMessage: translate('global.messages.validate.confirmpassword.maxlength') },\r\n                  match: { value: 'firstPassword', errorMessage: translate('global.messages.error.dontmatch') }\r\n                }}\r\n              />\r\n              <Button id=\"register-submit\" color=\"primary\" type=\"submit\">\r\n                <Translate contentKey=\"register.form.button\">Register</Translate>\r\n              </Button>\r\n            </AvForm>\r\n            <p>&nbsp;</p>\r\n            <Alert color=\"warning\">\r\n              <span>\r\n                <Translate contentKey=\"global.messages.info.authenticated.prefix\">If you want to </Translate>\r\n              </span>\r\n              <a className=\"alert-link\">\r\n                <Translate contentKey=\"global.messages.info.authenticated.link\"> sign in</Translate>\r\n              </a>\r\n              <span>\r\n                <Translate contentKey=\"global.messages.info.authenticated.suffix\">\r\n                  , you can try the default accounts:\r\n                  <br />- Administrator (login=\"admin\" and password=\"admin\")\r\n                  <br />- User (login=\"user\" and password=\"user\").\r\n                </Translate>\r\n              </span>\r\n            </Alert>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ locale }: IRootState) => ({\r\n  currentLocale: locale.currentLocale\r\n});\r\n\r\nconst mapDispatchToProps = { handleRegister, reset };\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RegisterPage);\r\n","import axios from 'axios';\r\nimport { translate, Storage } from 'react-jhipster';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { getSession } from 'app/shared/reducers/authentication';\r\n\r\nexport const ACTION_TYPES = {\r\n  UPDATE_ACCOUNT: 'account/UPDATE_ACCOUNT',\r\n  RESET: 'account/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  updateSuccess: false,\r\n  updateFailure: false\r\n};\r\n\r\nexport type SettingsState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: SettingsState = initialState, action): SettingsState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.UPDATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.UPDATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updateSuccess: false,\r\n        updateFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.UPDATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updateSuccess: true,\r\n        updateFailure: false\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\nconst apiUrl = 'api/account';\r\n\r\nexport const saveAccountSettings = account => async (dispatch, getState) => {\r\n  await dispatch({\r\n    type: ACTION_TYPES.UPDATE_ACCOUNT,\r\n    payload: axios.post(apiUrl, account),\r\n    meta: {\r\n      successMessage: translate('settings.messages.success')\r\n    }\r\n  });\r\n\r\n  if (Storage.session.get(`locale`)) {\r\n    Storage.session.remove(`locale`);\r\n  }\r\n\r\n  await dispatch(getSession());\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import axios from 'axios';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_LOGS: 'administration/FETCH_LOGS',\r\n  FETCH_LOGS_CHANGE_LEVEL: 'administration/FETCH_LOGS_CHANGE_LEVEL',\r\n  FETCH_HEALTH: 'administration/FETCH_HEALTH',\r\n  FETCH_METRICS: 'administration/FETCH_METRICS',\r\n  FETCH_THREAD_DUMP: 'administration/FETCH_THREAD_DUMP',\r\n  FETCH_CONFIGURATIONS: 'administration/FETCH_CONFIGURATIONS',\r\n  FETCH_ENV: 'administration/FETCH_ENV',\r\n  FETCH_AUDITS: 'administration/FETCH_AUDITS'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  logs: {\r\n    loggers: [] as any[]\r\n  },\r\n  health: {} as any,\r\n  metrics: {} as any,\r\n  threadDump: [],\r\n  configuration: {\r\n    configProps: {} as any,\r\n    env: {} as any\r\n  },\r\n  audits: [],\r\n  totalItems: 0\r\n};\r\n\r\nexport type AdministrationState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: AdministrationState = initialState, action): AdministrationState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_METRICS):\r\n    case REQUEST(ACTION_TYPES.FETCH_THREAD_DUMP):\r\n    case REQUEST(ACTION_TYPES.FETCH_LOGS):\r\n    case REQUEST(ACTION_TYPES.FETCH_CONFIGURATIONS):\r\n    case REQUEST(ACTION_TYPES.FETCH_ENV):\r\n    case REQUEST(ACTION_TYPES.FETCH_AUDITS):\r\n    case REQUEST(ACTION_TYPES.FETCH_HEALTH):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_METRICS):\r\n    case FAILURE(ACTION_TYPES.FETCH_THREAD_DUMP):\r\n    case FAILURE(ACTION_TYPES.FETCH_LOGS):\r\n    case FAILURE(ACTION_TYPES.FETCH_CONFIGURATIONS):\r\n    case FAILURE(ACTION_TYPES.FETCH_ENV):\r\n    case FAILURE(ACTION_TYPES.FETCH_AUDITS):\r\n    case FAILURE(ACTION_TYPES.FETCH_HEALTH):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_METRICS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        metrics: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_THREAD_DUMP):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        threadDump: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_LOGS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        logs: {\r\n          loggers: action.payload.data\r\n        }\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_CONFIGURATIONS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        configuration: {\r\n          ...state.configuration,\r\n          configProps: action.payload.data\r\n        }\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_ENV):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        configuration: {\r\n          ...state.configuration,\r\n          env: action.payload.data\r\n        }\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_AUDITS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        audits: action.payload.data,\r\n        totalItems: action.payload.headers['x-total-count']\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_HEALTH):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        health: action.payload.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\n\r\nexport const systemHealth = () => ({\r\n  type: ACTION_TYPES.FETCH_HEALTH,\r\n  payload: axios.get('management/health')\r\n});\r\n\r\nexport const systemMetrics = () => ({\r\n  type: ACTION_TYPES.FETCH_METRICS,\r\n  payload: axios.get('management/jhi-metrics')\r\n});\r\n\r\nexport const systemThreadDump = () => ({\r\n  type: ACTION_TYPES.FETCH_THREAD_DUMP,\r\n  payload: axios.get('management/threaddump')\r\n});\r\n\r\nexport const getLoggers = () => ({\r\n  type: ACTION_TYPES.FETCH_LOGS,\r\n  payload: axios.get('management/logs')\r\n});\r\n\r\nexport const changeLogLevel = (name, level) => {\r\n  const body = {\r\n    level,\r\n    name\r\n  };\r\n  return async dispatch => {\r\n    await dispatch({\r\n      type: ACTION_TYPES.FETCH_LOGS_CHANGE_LEVEL,\r\n      payload: axios.put('management/logs', body)\r\n    });\r\n    dispatch(getLoggers());\r\n  };\r\n};\r\n\r\nexport const getConfigurations = () => ({\r\n  type: ACTION_TYPES.FETCH_CONFIGURATIONS,\r\n  payload: axios.get('management/configprops')\r\n});\r\n\r\nexport const getEnv = () => ({\r\n  type: ACTION_TYPES.FETCH_ENV,\r\n  payload: axios.get('management/env')\r\n});\r\n\r\nexport const getAudits = (page, size, sort, fromDate, toDate) => {\r\n  let requestUrl = `management/audits${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  if (fromDate) {\r\n    requestUrl += `&fromDate=${fromDate}`;\r\n  }\r\n  if (toDate) {\r\n    requestUrl += `&toDate=${toDate}`;\r\n  }\r\n  return {\r\n    type: ACTION_TYPES.FETCH_AUDITS,\r\n    payload: axios.get(requestUrl)\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { IUser, defaultValue } from 'app/shared/model/user.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_ROLES: 'userManagement/FETCH_ROLES',\r\n  FETCH_USERS: 'userManagement/FETCH_USERS',\r\n  FETCH_USER: 'userManagement/FETCH_USER',\r\n  CREATE_USER: 'userManagement/CREATE_USER',\r\n  UPDATE_USER: 'userManagement/UPDATE_USER',\r\n  DELETE_USER: 'userManagement/DELETE_USER',\r\n  RESET: 'userManagement/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  users: [] as ReadonlyArray<IUser>,\r\n  authorities: [] as any[],\r\n  user: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false,\r\n  totalItems: 0\r\n};\r\n\r\nexport type UserManagementState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: UserManagementState = initialState, action): UserManagementState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_ROLES):\r\n      return {\r\n        ...state\r\n      };\r\n    case REQUEST(ACTION_TYPES.FETCH_USERS):\r\n    case REQUEST(ACTION_TYPES.FETCH_USER):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_USER):\r\n    case REQUEST(ACTION_TYPES.UPDATE_USER):\r\n    case REQUEST(ACTION_TYPES.DELETE_USER):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_USERS):\r\n    case FAILURE(ACTION_TYPES.FETCH_USER):\r\n    case FAILURE(ACTION_TYPES.FETCH_ROLES):\r\n    case FAILURE(ACTION_TYPES.CREATE_USER):\r\n    case FAILURE(ACTION_TYPES.UPDATE_USER):\r\n    case FAILURE(ACTION_TYPES.DELETE_USER):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_ROLES):\r\n      return {\r\n        ...state,\r\n        authorities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_USERS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload.data,\r\n        totalItems: action.payload.headers['x-total-count']\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_USER):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_USER):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_USER):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        user: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_USER):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        user: defaultValue\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/users';\r\n// Actions\r\nexport const getUsers: ICrudGetAllAction<IUser> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_USERS,\r\n    payload: axios.get<IUser>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const getRoles = () => ({\r\n  type: ACTION_TYPES.FETCH_ROLES,\r\n  payload: axios.get(`${apiUrl}/authorities`)\r\n});\r\n\r\nexport const getUser: ICrudGetAction<IUser> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_USER,\r\n    payload: axios.get<IUser>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createUser: ICrudPutAction<IUser> = user => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_USER,\r\n    payload: axios.post(apiUrl, user)\r\n  });\r\n  dispatch(getUsers());\r\n  return result;\r\n};\r\n\r\nexport const updateUser: ICrudPutAction<IUser> = user => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_USER,\r\n    payload: axios.put(apiUrl, user)\r\n  });\r\n  dispatch(getUsers());\r\n  return result;\r\n};\r\n\r\nexport const deleteUser: ICrudDeleteAction<IUser> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_USER,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getUsers());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js!./ghostRegistroCss.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!./ghostRegistroCss.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!./ghostRegistroCss.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js!./home.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!./home.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!./home.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './home.css';\r\nimport './ghostRegistroCss.css';\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Translate } from 'react-jhipster';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Alert, Jumbotron, Container, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getSession } from 'app/shared/reducers/authentication';\r\n\r\nexport interface IHomeProp extends StateProps, DispatchProps {}\r\n\r\nexport class Home extends React.Component<IHomeProp> {\r\n    componentDidMount() {\r\n        this.props.getSession();\r\n    }\r\n  render() {\r\n    const { account } = this.props;\r\n    return (\r\n        <div>\r\n        <Row className=\"justify-content-center\">\r\n            <Col md=\"8\">\r\n                <h1 id=\"home.title\">\r\n                    <Translate contentKey=\"home.title\">Welcome, Java Hipster!</Translate>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                </h1>\r\n            </Col>\r\n            <Col md=\"3\" className=\"justify-content-right\">\r\n                <img\r\n                    height=\"70%\"\r\n                    className=\"Bienvenidos a la pagina principal\"\r\n                    width=\"70%\"\r\n                    src=\"content/images/logo-jhipster.png\"\r\n                    alt=\"Card image cap\"\r\n                />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n            </Col>\r\n        </Row>\r\n            <Row className=\"justify-content-center\">\r\n                <Col md=\"5\">\r\n                    <Alert color=\"warning\">\r\n                        <Translate contentKey=\"home.noaccount.messages\">You do not have an account yet?</Translate>\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = storeState => ({\r\n  account: storeState.authentication.account,\r\n  isAuthenticated: storeState.authentication.isAuthenticated\r\n});\r\n\r\nconst mapDispatchToProps = { getSession };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import React from 'react';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Alert, Row, Col } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface ILoginModalProps {\r\n  showModal: boolean;\r\n  loginError: boolean;\r\n  handleLogin: Function;\r\n  handleClose: Function;\r\n}\r\n\r\nclass LoginModal extends React.Component<ILoginModalProps> {\r\n  handleSubmit = (event, errors, { username, password, rememberMe }) => {\r\n    const { handleLogin } = this.props;\r\n    handleLogin(username, password, rememberMe);\r\n  };\r\n\r\n  render() {\r\n    const { loginError, handleClose } = this.props;\r\n\r\n    return (\r\n      <Modal isOpen={this.props.showModal} toggle={handleClose} backdrop=\"static\" id=\"login-page\" autoFocus={false}>\r\n        <AvForm onSubmit={this.handleSubmit}>\r\n          <ModalHeader id=\"login-title\" toggle={handleClose}>\r\n            <Translate contentKey=\"login.title\">Sign in</Translate>\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Row>\r\n              <Col md=\"12\">\r\n                {loginError ? (\r\n                  <Alert color=\"danger\">\r\n                    <Translate contentKey=\"login.messages.error.authentication\">\r\n                      <strong>Failed to sign in!</strong> Please check your credentials and try again.\r\n                    </Translate>\r\n                  </Alert>\r\n                ) : null}\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <AvField\r\n                  name=\"username\"\r\n                  label={translate('global.form.username')}\r\n                  placeholder={translate('global.form.username.placeholder')}\r\n                  required\r\n                  errorMessage=\"Username cannot be empty!\"\r\n                  autoFocus\r\n                />\r\n                <AvField\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  label={translate('login.form.password')}\r\n                  placeholder={translate('login.form.password.placeholder')}\r\n                  required\r\n                  errorMessage=\"Password cannot be empty!\"\r\n                />\r\n                <AvGroup check inline>\r\n                  <Label className=\"form-check-label\">\r\n                    <AvInput type=\"checkbox\" name=\"rememberMe\" /> <Translate contentKey=\"login.form.rememberme\">Remember me</Translate>\r\n                  </Label>\r\n                </AvGroup>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"mt-1\">&nbsp;</div>\r\n            <Alert color=\"warning\">\r\n              <Link to=\"/reset/request\">\r\n                <Translate contentKey=\"login.password.forgot\">Did you forget your password?</Translate>\r\n              </Link>\r\n            </Alert>\r\n            <Alert color=\"warning\">\r\n              <span>\r\n                <Translate contentKey=\"global.messages.info.register.noaccount\">You don't have an account yet?</Translate>\r\n              </span>{' '}\r\n              <Link to=\"/register\">\r\n                <Translate contentKey=\"global.messages.info.register.link\">Register a new account</Translate>\r\n              </Link>\r\n            </Alert>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={handleClose} tabIndex=\"1\">\r\n              <Translate contentKey=\"entity.action.cancel\">Cancel</Translate>\r\n            </Button>{' '}\r\n            <Button color=\"primary\" type=\"submit\">\r\n              <Translate contentKey=\"login.form.button\">Sign in</Translate>\r\n            </Button>\r\n          </ModalFooter>\r\n        </AvForm>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginModal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { login } from 'app/shared/reducers/authentication';\r\nimport LoginModal from './login-modal';\r\n\r\nexport interface ILoginProps extends StateProps, DispatchProps, RouteComponentProps<{}> {}\r\n\r\nexport interface ILoginState {\r\n  showModal: boolean;\r\n}\r\n\r\nexport class Login extends React.Component<ILoginProps, ILoginState> {\r\n  state: ILoginState = {\r\n    showModal: this.props.showModal\r\n  };\r\n\r\n  componentDidUpdate(prevProps: ILoginProps, prevState) {\r\n    if (this.props !== prevProps) {\r\n      this.setState({ showModal: this.props.showModal });\r\n    }\r\n  }\r\n\r\n  handleLogin = (username, password, rememberMe = false) => {\r\n    this.props.login(username, password, rememberMe);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  render() {\r\n    const { location, isAuthenticated } = this.props;\r\n    const { from } = location.state || { from: { pathname: '/', search: location.search } };\r\n    const { showModal } = this.state;\r\n    if (isAuthenticated) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    return (\r\n      <LoginModal showModal={showModal} handleLogin={this.handleLogin} handleClose={this.handleClose} loginError={this.props.loginError} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authentication }: IRootState) => ({\r\n  isAuthenticated: authentication.isAuthenticated,\r\n  loginError: authentication.loginError,\r\n  showModal: authentication.showModalLogin\r\n});\r\n\r\nconst mapDispatchToProps = { login };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { logout } from 'app/shared/reducers/authentication';\r\n\r\nexport interface ILogoutProps extends StateProps, DispatchProps {\r\n  idToken: string;\r\n  logoutUrl: string;\r\n}\r\n\r\nexport class Logout extends React.Component<ILogoutProps> {\r\n  componentDidMount() {\r\n    this.props.logout();\r\n  }\r\n\r\n  render() {\r\n    const logoutUrl = this.props.logoutUrl;\r\n    if (logoutUrl) {\r\n      // if Keycloak, logoutUrl has protocol/openid-connect in it\r\n      window.location.href =\r\n        logoutUrl.indexOf('/protocol') > -1\r\n          ? logoutUrl + '?redirect_uri=' + window.location.origin\r\n          : logoutUrl + '?id_token_hint=' + this.props.idToken + '&post_logout_redirect_uri=' + window.location.origin;\r\n    }\r\n\r\n    return (\r\n      <div className=\"p-5\">\r\n        <h4>Logged out successfully!</h4>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  logoutUrl: storeState.authentication.logoutUrl,\r\n  idToken: storeState.authentication.idToken\r\n});\r\n\r\nconst mapDispatchToProps = { logout };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Logout);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\n\r\nimport Login from 'app/modules/login/login';\r\nimport Register from 'app/modules/account/register/register';\r\nimport Activate from 'app/modules/account/activate/activate';\r\nimport PasswordResetInit from 'app/modules/account/password-reset/init/password-reset-init';\r\nimport PasswordResetFinish from 'app/modules/account/password-reset/finish/password-reset-finish';\r\nimport Logout from 'app/modules/login/logout';\r\nimport Home from 'app/modules/home/home';\r\nimport Entities from 'app/entities';\r\nimport PrivateRoute from 'app/shared/auth/private-route';\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\nimport { AUTHORITIES } from 'app/config/constants';\r\nimport {Instructor} from \"app/entities/instructor/instructor\";\r\n\r\n// tslint:disable:space-in-parens\r\nconst Account = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"account\" */ 'app/modules/account'),\r\n  loading: () => <div>loading ...</div>\r\n});\r\n\r\nconst Admin = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"administration\" */ 'app/modules/administration'),\r\n  loading: () => <div>loading ...</div>\r\n});\r\n// tslint:enable\r\n\r\nconst Routes = () => (\r\n  <div className=\"view-routes\">\r\n    <ErrorBoundaryRoute path=\"/login\" component={Login} />\r\n    <Switch>\r\n      <ErrorBoundaryRoute path=\"/logout\" component={Logout} />\r\n      <ErrorBoundaryRoute path=\"/register\" component={Register} />\r\n      <ErrorBoundaryRoute path=\"/activate/:key?\" component={Activate} />\r\n      <ErrorBoundaryRoute path=\"/reset/request\" component={PasswordResetInit} />\r\n      <ErrorBoundaryRoute path=\"/reset/finish/:key?\" component={PasswordResetFinish} />\r\n      <PrivateRoute path=\"/admin\" component={Admin} hasAnyAuthorities={[AUTHORITIES.ADMIN]} />\r\n      <PrivateRoute path=\"/instructor\" component={Instructor} hasAnyAuthorities={[AUTHORITIES.INSTRUCTOR]} />\r\n      <PrivateRoute path=\"/account\" component={Account} hasAnyAuthorities={[AUTHORITIES.ADMIN, AUTHORITIES.USER, AUTHORITIES.LIDER, AUTHORITIES.INSTRUCTOR]} />\r\n      <PrivateRoute path=\"/entity\" component={Entities} hasAnyAuthorities={[AUTHORITIES.ADMIN, AUTHORITIES.LIDER, AUTHORITIES.INSTRUCTOR]} />\r\n      <ErrorBoundaryRoute path=\"/\" component={Home} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\nimport { Translate } from 'react-jhipster';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport ErrorBoundary from 'app/shared/error/error-boundary';\r\n\r\ninterface IOwnProps extends RouteProps {\r\n  hasAnyAuthorities?: string[];\r\n}\r\n\r\nexport interface IPrivateRouteProps extends IOwnProps, StateProps {}\r\n\r\nexport const PrivateRouteComponent = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  sessionHasBeenFetched,\r\n  isAuthorized,\r\n  hasAnyAuthorities = [],\r\n  ...rest\r\n}: IPrivateRouteProps) => {\r\n  const checkAuthorities = props =>\r\n    isAuthorized ? (\r\n      <ErrorBoundary>\r\n        <Component {...props} />\r\n      </ErrorBoundary>\r\n    ) : (\r\n      <div className=\"insufficient-authority\">\r\n        <div className=\"alert alert-danger\">\r\n          <Translate contentKey=\"error.http.403\">You are not authorized to access this page.</Translate>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  const renderRedirect = props => {\r\n    if (!sessionHasBeenFetched) {\r\n      return <div />;\r\n    } else {\r\n      return isAuthenticated ? (\r\n        checkAuthorities(props)\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/login',\r\n            search: props.location.search,\r\n            state: { from: props.location }\r\n          }}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  if (!Component) throw new Error(`A component needs to be specified for private route for path ${(rest as any).path}`);\r\n\r\n  return <Route {...rest} render={renderRedirect} />;\r\n};\r\n\r\nexport const hasAnyAuthority = (authorities: string[], hasAnyAuthorities: string[]) => {\r\n  if (authorities && authorities.length !== 0) {\r\n    if (hasAnyAuthorities.length === 0) {\r\n      return true;\r\n    }\r\n    return hasAnyAuthorities.some(auth => authorities.includes(auth));\r\n  }\r\n  return false;\r\n};\r\n\r\nconst mapStateToProps = (\r\n  { authentication: { isAuthenticated, account, sessionHasBeenFetched } }: IRootState,\r\n  { hasAnyAuthorities = [] }: IOwnProps\r\n) => ({\r\n  isAuthenticated,\r\n  isAuthorized: hasAnyAuthority(account.authorities, hasAnyAuthorities),\r\n  sessionHasBeenFetched\r\n});\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\n/**\r\n * A route wrapped in an authentication check so that routing happens only when you are authenticated.\r\n * Accepts same props as React router Route.\r\n * The route also checks for authorization if hasAnyAuthorities is specified.\r\n */\r\nexport const PrivateRoute = connect<StateProps, undefined, IOwnProps>(\r\n  mapStateToProps,\r\n  null,\r\n  null,\r\n  { pure: false }\r\n)(PrivateRouteComponent);\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, RouteProps } from 'react-router-dom';\r\nimport ErrorBoundary from 'app/shared/error/error-boundary';\r\n\r\nexport const ErrorBoundaryRoute = ({ component: Component, ...rest }: RouteProps) => {\r\n  const encloseInErrorBoundary = props => (\r\n    <ErrorBoundary>\r\n      <Component {...props} />\r\n    </ErrorBoundary>\r\n  );\r\n\r\n  if (!Component) throw new Error(`A component needs to be specified for path ${(rest as any).path}`);\r\n\r\n  return <Route {...rest} render={encloseInErrorBoundary} />;\r\n};\r\n\r\nexport default ErrorBoundaryRoute;\r\n","import React from 'react';\r\n\r\ninterface IErrorBoundaryProps {\r\n  readonly children: JSX.Element | JSX.Element[];\r\n}\r\n\r\ninterface IErrorBoundaryState {\r\n  readonly error: any;\r\n  readonly errorInfo: any;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\r\n  readonly state: IErrorBoundaryState = { error: undefined, errorInfo: undefined };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error,\r\n      errorInfo\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, errorInfo } = this.state;\r\n    if (errorInfo) {\r\n      const errorDetails =\r\n        process.env.NODE_ENV === 'development' ? (\r\n          <details className=\"preserve-space\">\r\n            {error && error.toString()}\r\n            <br />\r\n            {errorInfo.componentStack}\r\n          </details>\r\n        ) : (\r\n          undefined\r\n        );\r\n      return (\r\n        <div>\r\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\r\n          {errorDetails}\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!./footer.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!./footer.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!./footer.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './footer.css';\r\n\r\nimport React from 'react';\r\nimport { Translate } from 'react-jhipster';\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nconst Footer = props => (\r\n  <div className=\"footer page-content\">\r\n    <Row>\r\n      <Col md=\"3\">\r\n        <p>\r\n          <Translate contentKey=\"footer\">Your footer</Translate>\r\n        </p>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Translate } from 'react-jhipster';\r\n\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, NavItem, NavLink, NavbarBrand } from 'reactstrap';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport appConfig from 'app/config/constants';\r\n\r\nexport const NavDropdown = props => (\r\n  <UncontrolledDropdown nav inNavbar id={props.id}>\r\n    <DropdownToggle nav caret className=\"d-flex align-items-center\">\r\n      <FontAwesomeIcon icon={props.icon} />\r\n      <span>{props.name}</span>\r\n    </DropdownToggle>\r\n    <DropdownMenu right style={props.style}>\r\n      {props.children}\r\n    </DropdownMenu>\r\n  </UncontrolledDropdown>\r\n);\r\n\r\nexport const BrandIcon = props => (\r\n  <div {...props} className=\"brand-icon\">\r\n    <img src=\"content/images/logo-jhipster.png\" alt=\"Logo\" />\r\n  </div>\r\n);\r\n\r\nexport const Brand = props => (\r\n  <NavbarBrand tag={Link} to=\"/\" className=\"brand-logo\">\r\n    <BrandIcon />\r\n    <span className=\"brand-title\">\r\n      <Translate contentKey=\"global.title\">Ghostceet</Translate>\r\n    </span>\r\n    <span className=\"navbar-version\">{appConfig.VERSION}</span>\r\n  </NavbarBrand>\r\n);\r\n\r\nexport const Home = props => (\r\n  <NavItem>\r\n    <NavLink tag={Link} to=\"/\" className=\"d-flex align-items-center\">\r\n      <FontAwesomeIcon icon=\"home\" />\r\n      <span>\r\n        <Translate contentKey=\"global.menu.home\">Home</Translate>\r\n      </span>\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!./header.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!./header.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!./header.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './header.css';\r\n\r\nimport React from 'react';\r\nimport { Translate, Storage } from 'react-jhipster';\r\nimport { Navbar, Nav, NavbarToggler, NavbarBrand, Collapse } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport LoadingBar from 'react-redux-loading-bar';\r\n\r\nimport { Home, Brand } from './header-components';\r\nimport {\r\n    AdminMenu,\r\n    EntitiesMenu,\r\n    AccountMenu,\r\n    LocaleMenu,\r\n    LiderMenu,\r\n    Lider01Menu,\r\n    Lider02Menu,\r\n    Lider03Menu,\r\n    Lider04Menu,\r\n    InstructorMenu\r\n} from './menus';\r\n\r\nexport interface IHeaderProps {\r\n    isAuthenticated: boolean;\r\n    isAdmin: boolean;\r\n    isLider: boolean;\r\n    isInstructor: boolean;\r\n    ribbonEnv: string;\r\n    isInProduction: boolean;\r\n    isSwaggerEnabled: boolean;\r\n    currentLocale: string;\r\n    onLocaleChange: Function;\r\n}\r\n\r\nexport interface IHeaderState {\r\n    menuOpen: boolean;\r\n}\r\n\r\nexport default class Header extends React.Component<IHeaderProps, IHeaderState> {\r\n    state: IHeaderState = {\r\n        menuOpen: false\r\n    };\r\n\r\n    handleLocaleChange = event => {\r\n        const langKey = event.target.value;\r\n        Storage.session.set('locale', langKey);\r\n        this.props.onLocaleChange(langKey);\r\n    };\r\n\r\n    renderDevRibbon = () =>\r\n        this.props.isInProduction === false ? (\r\n            <div className=\"ribbon dev\">\r\n                <a href=\"\">\r\n                    <Translate contentKey={`global.ribbon.${this.props.ribbonEnv}`} />\r\n                </a>\r\n            </div>\r\n        ) : null;\r\n\r\n    toggleMenu = () => {\r\n        this.setState({ menuOpen: !this.state.menuOpen });\r\n    };\r\n\r\n    render() {\r\n        const { currentLocale, isAuthenticated, isAdmin, isLider, isSwaggerEnabled, isInProduction, isInstructor } = this.props;\r\n\r\n        /* jhipster-needle-add-element-to-menu - JHipster will add new menu items here */\r\n\r\n        return (\r\n            <div id=\"app-header\">\r\n                {this.renderDevRibbon()}\r\n                <LoadingBar className=\"loading-bar\" />\r\n                <Navbar dark expand=\"sm\" fixed=\"top\" className=\"jh-navbar\">\r\n                    <NavbarToggler aria-label=\"Menu\" onClick={this.toggleMenu} />\r\n                    <Brand />\r\n                    <Collapse isOpen={this.state.menuOpen} navbar>\r\n                        <Nav id=\"header-tabs\" className=\"ml-auto\" navbar>\r\n                            <Home />\r\n\r\n                            {isAuthenticated && isLider && <Lider01Menu />}\r\n                            {isAuthenticated && isLider && <Lider02Menu />}\r\n                            {isAuthenticated && isLider && <Lider03Menu />}\r\n                            {isAuthenticated && isLider && <Lider04Menu />}\r\n                            {isAuthenticated && isAdmin && <EntitiesMenu/>}\r\n                            {isAuthenticated && isInstructor && <InstructorMenu/>}\r\n                            {isAuthenticated && isAdmin && <AdminMenu showSwagger={isSwaggerEnabled} />}\r\n                            <LocaleMenu currentLocale={currentLocale} onClick={this.handleLocaleChange} />\r\n                            <AccountMenu isAuthenticated={isAuthenticated} />\r\n                        </Nav>\r\n                    </Collapse>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { NavDropdown } from '../header-components';\r\n\r\nconst accountMenuItemsAuthenticated = (\r\n  <>\r\n    <DropdownItem tag={Link} to=\"/account/settings\">\r\n      <FontAwesomeIcon icon=\"wrench\" fixedWidth /> <Translate contentKey=\"global.menu.account.settings\">Settings</Translate>\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/account/password\">\r\n      <FontAwesomeIcon icon=\"clock\" fixedWidth /> <Translate contentKey=\"global.menu.account.password\">Password</Translate>\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/logout\">\r\n      <FontAwesomeIcon icon=\"sign-out-alt\" fixedWidth /> <Translate contentKey=\"global.menu.account.logout\">Sign out</Translate>\r\n    </DropdownItem>\r\n  </>\r\n);\r\n\r\nconst accountMenuItems = (\r\n  <>\r\n    <DropdownItem id=\"login-item\" tag={Link} to=\"/login\">\r\n      <FontAwesomeIcon icon=\"sign-in-alt\" fixedWidth /> <Translate contentKey=\"global.menu.account.login\">Sign in</Translate>\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/register\">\r\n      <FontAwesomeIcon icon=\"sign-in-alt\" fixedWidth /> <Translate contentKey=\"global.menu.account.register\">Register</Translate>\r\n    </DropdownItem>\r\n  </>\r\n);\r\n\r\nexport const AccountMenu = ({ isAuthenticated = false }) => (\r\n  <NavDropdown icon=\"user\" name={translate('global.menu.account.main')} id=\"account-menu\">\r\n    {isAuthenticated ? accountMenuItemsAuthenticated : accountMenuItems}\r\n  </NavDropdown>\r\n);\r\n\r\nexport default AccountMenu;\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { NavDropdown } from '../header-components';\r\nimport { Translate, translate } from 'react-jhipster';\r\n\r\nconst adminMenuItems = (\r\n  <>\r\n    <DropdownItem tag={Link} to=\"/admin/user-management\">\r\n      <FontAwesomeIcon icon=\"user\" fixedWidth /> <Translate contentKey=\"global.menu.admin.userManagement\">User management</Translate>\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/admin/configuration\">\r\n      <FontAwesomeIcon icon=\"list\" fixedWidth /> <Translate contentKey=\"global.menu.admin.configuration\">Configuration</Translate>\r\n    </DropdownItem>\r\n  </>\r\n);\r\nexport const AdminMenu = ({ showSwagger }) => (\r\n  <NavDropdown icon=\"user-plus\" name={translate('global.menu.admin.main')} style={{ width: '140%' }} id=\"admin-menu\">\r\n    {adminMenuItems}\r\n  </NavDropdown>\r\n);\r\n\r\nexport default AdminMenu;\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { NavDropdown } from '../header-components';\r\n\r\nexport const EntitiesMenu = props => (\r\n  // tslint:disable-next-line:jsx-self-close\r\n  <NavDropdown icon=\"th-list\" name={translate('global.menu.entities.main')} id=\"entity-menu\">\r\n    <DropdownItem tag={Link} to=\"/entity/planeacion\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.planeacion\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/nivel-formacion\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.nivelFormacion\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/programa\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.programa\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/proyecto\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.proyecto\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/competencia\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.competencia\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/resultado-aprendizaje\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.resultadoAprendizaje\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/jornada\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.jornada\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/trimestre\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.trimestre\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/planeacion-trimestre\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.planeacionTrimestre\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/fase-proyecto\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.faseProyecto\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/actividad-proyecto\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.actividadProyecto\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/estado-ficha\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.estadoFicha\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/ficha\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.ficha\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/ficha-trimestre\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.fichaTrimestre\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/resultados-vistos\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.resultadosVistos\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/planeacion-actividad\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.planeacionActividad\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/documento\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.documento\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/cliente\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.cliente\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/vinculacion\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.vinculacion\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/anio\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.anio\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/instructor\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.instructor\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/vinculacion-instructor\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.vinculacionInstructor\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/jornada-instructor\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.jornadaInstructor\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/dia-jornada\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.diaJornada\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/area\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.area\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/area-instructor\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.areaInstructor\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/disponibilidad-competencias\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.disponibilidadCompetencias\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/disponibilidad-horaria\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.disponibilidadHoraria\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/tipo-ambiente\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.tipoAmbiente\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/sede\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.sede\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/ambiente\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.ambiente\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/limitacion-ambiente\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.limitacionAmbiente\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/modalidad\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.modalidad\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/dia\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.dia\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/trimestre-vigente\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.trimestreVigente\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/version-horario\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.versionHorario\" />\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/horario\">\r\n      <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n      &nbsp;\r\n      <Translate contentKey=\"global.menu.entities.horario\" />\r\n    </DropdownItem>\r\n    {/* jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here */}\r\n  </NavDropdown>\r\n);\r\n","export * from './account';\r\nexport * from './admin';\r\nexport * from './locale';\r\nexport * from './entities';\r\nexport * from './instructor';\r\nexport * from './lider';\r\nexport * from './lider01';\r\nexport * from './lider02';\r\nexport * from './lider03';\r\nexport * from './lider04';\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { NavDropdown } from '../header-components';\r\n\r\nexport const InstructorMenu = props => (\r\n    // tslint:disable-next-line:jsx-self-close\r\n    <NavDropdown icon=\"th-list\" name={translate('global.menu.instructor.main')} id=\"entity-menu\">\r\n        <DropdownItem tag={Link} to=\"/entity/vinculacion-instructor\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.instructor.vinculacionInstructor\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/jornada-instructor\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.instructor.jornadaInstructor\" />\r\n        </DropdownItem>\r\n        {/* jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here */}\r\n    </NavDropdown>\r\n);\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { NavDropdown } from '../header-components';\r\n\r\nexport const LiderMenu = props => (\r\n    // tslint:disable-next-line:jsx-self-close\r\n    <NavDropdown icon=\"th-list\" name={translate('global.menu.lider.main')} id=\"entity-menu\">\r\n        <DropdownItem tag={Link} to=\"/entity/planeacion\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.planeacion\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/nivel-formacion\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.nivelFormacion\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/programa\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.programa\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/proyecto\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.proyecto\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/competencia\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.competencia\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/resultado-aprendizaje\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.resultadoAprendizaje\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/jornada\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.jornada\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/trimestre\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.trimestre\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/planeacion-trimestre\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.planeacionTrimestre\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/fase-proyecto\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.faseProyecto\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/actividad-proyecto\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.actividadProyecto\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/estado-ficha\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.estadoFicha\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/ficha\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.ficha\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/ficha-trimestre\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.fichaTrimestre\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/resultados-vistos\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.resultadosVistos\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/planeacion-actividad\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.planeacionActividad\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/vinculacion\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.vinculacion\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/anio\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.anio\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/instructor\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.instructor\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/vinculacion-instructor\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.vinculacionInstructor\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/jornada-instructor\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.jornadaInstructor\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/dia-jornada\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.diaJornada\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/area\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.area\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/area-instructor\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.areaInstructor\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/disponibilidad-competencias\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.disponibilidadCompetencias\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/disponibilidad-horaria\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.disponibilidadHoraria\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/tipo-ambiente\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.tipoAmbiente\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/sede\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.sede\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/ambiente\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.ambiente\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/limitacion-ambiente\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.limitacionAmbiente\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/modalidad\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.modalidad\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/dia\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.dia\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/trimestre-vigente\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.trimestreVigente\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/version-horario\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.versionHorario\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/horario\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.horario\" />\r\n        </DropdownItem>\r\n        {/* jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here */}\r\n    </NavDropdown>\r\n);\r\n\r\nexport default LiderMenu;\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { NavDropdown } from '../header-components';\r\n\r\nexport const Lider01Menu = props => (\r\n    <NavDropdown icon=\"user-plus\" name={translate('global.menu.instructor.miHorario')} style={{ width: '140%' }} >\r\n        <DropdownItem tag={Link} to=\"/entity/version-horario\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.versionHorario\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/planeacion\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.planeacion\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/nivel-formacion\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.nivelFormacion\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/programa\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.programa\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/proyecto\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.proyecto\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/competencia\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.competencia\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/resultado-aprendizaje\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.resultadoAprendizaje\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/jornada\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.jornada\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/horario\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.horario\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/trimestre\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.trimestre\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/planeacion-trimestre\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.planeacionTrimestre\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/fase-proyecto\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.faseProyecto\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/actividad-proyecto\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.actividadProyecto\" />\r\n        </DropdownItem>\r\n\r\n        <DropdownItem tag={Link} to=\"/entity/resultados-vistos\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.resultadosVistos\" />\r\n        </DropdownItem>\r\n    </NavDropdown>\r\n);\r\nexport default Lider01Menu;\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { NavDropdown } from '../header-components';\r\nimport AdminMenu from 'app/shared/layout/header/menus/admin';\r\n\r\nexport const Lider02Menu = props => (\r\n    <NavDropdown icon=\"user-plus\" name={translate('global.menu.instructor.main')} style={{ width: '140%' }} id=\"instructor-menu\">\r\n        <DropdownItem tag={Link} to=\"/entity/instructor\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.instructor\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/vinculacion-instructor\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.vinculacionInstructor\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/jornada-instructor\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.jornadaInstructor\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/dia-jornada\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.diaJornada\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/area\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.area\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/area-instructor\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.areaInstructor\" />\r\n        </DropdownItem>\r\n    </NavDropdown>\r\n);\r\nexport default Lider02Menu;\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { NavDropdown } from '../header-components';\r\nimport AdminMenu from 'app/shared/layout/header/menus/admin';\r\n\r\nexport const Lider03Menu = props => (\r\n    <NavDropdown icon=\"user-plus\" name={translate('global.menu.instructor.ficha')} style={{ width: '140%' }} id=\"instructor-menu\">\r\n        <DropdownItem tag={Link} to=\"/entity/estado-ficha\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.estadoFicha\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/ficha\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.ficha\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/ficha-trimestre\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.fichaTrimestre\" />\r\n        </DropdownItem>\r\n    </NavDropdown>\r\n);\r\nexport default Lider03Menu;\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Translate, translate } from 'react-jhipster';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { NavDropdown } from '../header-components';\r\nimport AdminMenu from 'app/shared/layout/header/menus/admin';\r\n\r\nexport const Lider04Menu = props => (\r\n    <NavDropdown icon=\"user-plus\" name={translate('global.menu.instructor.complementos')} style={{ width: '140%' }} id=\"instructor-menu\">\r\n        <DropdownItem tag={Link} to=\"/entity/planeacion-actividad\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.planeacionActividad\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/vinculacion\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.vinculacion\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/anio\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.anio\" />\r\n        </DropdownItem>\r\n\r\n        <DropdownItem tag={Link} to=\"/entity/disponibilidad-competencias\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.disponibilidadCompetencias\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/disponibilidad-horaria\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.disponibilidadHoraria\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/tipo-ambiente\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.tipoAmbiente\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/sede\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.sede\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/ambiente\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.ambiente\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/limitacion-ambiente\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.limitacionAmbiente\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/modalidad\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.modalidad\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/dia\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.dia\" />\r\n        </DropdownItem>\r\n        <DropdownItem tag={Link} to=\"/entity/trimestre-vigente\">\r\n            <FontAwesomeIcon icon=\"asterisk\" fixedWidth />\r\n            &nbsp;\r\n            <Translate contentKey=\"global.menu.lider.trimestreVigente\" />\r\n        </DropdownItem>\r\n    </NavDropdown>\r\n);\r\nexport default Lider04Menu;\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { NavDropdown } from '../header-components';\r\nimport { locales, languages } from 'app/config/translation';\r\n\r\nexport const LocaleMenu = ({ currentLocale, onClick }) =>\r\n  Object.keys(languages).length > 1 && (\r\n    <NavDropdown icon=\"flag\" name={currentLocale ? languages[currentLocale].name : undefined}>\r\n      {locales.map(locale => (\r\n        <DropdownItem key={locale} value={locale} onClick={onClick}>\r\n          {languages[locale].name}\r\n        </DropdownItem>\r\n      ))}\r\n    </NavDropdown>\r\n  );\r\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!./password-strength-bar.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!./password-strength-bar.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!./password-strength-bar.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './password-strength-bar.css';\r\n\r\nimport React from 'react';\r\nimport { Translate } from 'react-jhipster';\r\n\r\nexport interface IPasswordStrengthBarProps {\r\n  password: string;\r\n}\r\n\r\nexport const PasswordStrengthBar = ({ password }: IPasswordStrengthBarProps) => {\r\n  const colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\r\n\r\n  const measureStrength = (p: string): number => {\r\n    let force = 0;\r\n    const regex = /[$-/:-?{-~!\"^_`\\[\\]]/g;\r\n    const flags = {\r\n      lowerLetters: /[a-z]+/.test(p),\r\n      upperLetters: /[A-Z]+/.test(p),\r\n      numbers: /[0-9]+/.test(p),\r\n      symbols: regex.test(p)\r\n    };\r\n\r\n    const passedMatches = Object.values(flags).filter((isMatchedFlag: boolean) => !!isMatchedFlag).length;\r\n\r\n    force += 2 * p.length + (p.length >= 10 ? 1 : 0);\r\n    force += passedMatches * 10;\r\n\r\n    // penalty (short password)\r\n    force = p.length <= 6 ? Math.min(force, 10) : force;\r\n\r\n    // penalty (poor variety of characters)\r\n    force = passedMatches === 1 ? Math.min(force, 10) : force;\r\n    force = passedMatches === 2 ? Math.min(force, 20) : force;\r\n    force = passedMatches === 3 ? Math.min(force, 40) : force;\r\n\r\n    return force;\r\n  };\r\n\r\n  const getColor = (s: number): any => {\r\n    let idx = 0;\r\n    if (s <= 10) {\r\n      idx = 0;\r\n    } else if (s <= 20) {\r\n      idx = 1;\r\n    } else if (s <= 30) {\r\n      idx = 2;\r\n    } else if (s <= 40) {\r\n      idx = 3;\r\n    } else {\r\n      idx = 4;\r\n    }\r\n    return { idx: idx + 1, col: colors[idx] };\r\n  };\r\n\r\n  const getPoints = force => {\r\n    const pts = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      pts.push(<li key={i} className=\"point\" style={i < force.idx ? { backgroundColor: force.col } : { backgroundColor: '#DDD' }} />);\r\n    }\r\n    return pts;\r\n  };\r\n\r\n  const strength = getColor(measureStrength(password));\r\n  const points = getPoints(strength);\r\n\r\n  return (\r\n    <div id=\"strength\">\r\n      <small>\r\n        <Translate contentKey=\"global.messages.validate.newpassword.strength\">Password strength:</Translate>\r\n      </small>\r\n      <ul id=\"strengthBar\">{points}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordStrengthBar;\r\n","import { IPlaneacionActividad } from 'app/shared/model/planeacion-actividad.model';\r\nimport { IFaseProyecto } from 'app/shared/model/fase-proyecto.model';\r\n\r\nexport interface IActividadProyecto {\r\n  id?: number;\r\n  numeroActividad?: number;\r\n  nombreActividad?: string;\r\n  planeacionActividads?: IPlaneacionActividad[];\r\n  faseProyecto?: IFaseProyecto;\r\n}\r\n\r\nexport const defaultValue: Readonly<IActividadProyecto> = {};\r\n","import { ILimitacionAmbiente } from 'app/shared/model/limitacion-ambiente.model';\r\nimport { IHorario } from 'app/shared/model/horario.model';\r\nimport { ITipoAmbiente } from 'app/shared/model/tipo-ambiente.model';\r\nimport { ISede } from 'app/shared/model/sede.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IAmbiente {\r\n  id?: number;\r\n  numeroAmbiente?: string;\r\n  descripcion?: string;\r\n  estado?: Estado;\r\n  limitacion?: string;\r\n  limitacionAmbientes?: ILimitacionAmbiente[];\r\n  horarios?: IHorario[];\r\n  tipoAmbiente?: ITipoAmbiente;\r\n  sede?: ISede;\r\n}\r\n\r\nexport const defaultValue: Readonly<IAmbiente> = {};\r\n","import { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\nimport { ITrimestreVigente } from 'app/shared/model/trimestre-vigente.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IAnio {\r\n  id?: number;\r\n  numeroAnio?: number;\r\n  estado?: Estado;\r\n  vinculacionInstructors?: IVinculacionInstructor[];\r\n  trimestreVigentes?: ITrimestreVigente[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IAnio> = {};\r\n","import { IArea } from 'app/shared/model/area.model';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IAreaInstructor {\r\n  id?: number;\r\n  estado?: Estado;\r\n  area?: IArea;\r\n  instructor?: IInstructor;\r\n}\r\n\r\nexport const defaultValue: Readonly<IAreaInstructor> = {};\r\n","import { IAreaInstructor } from 'app/shared/model/area-instructor.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IArea {\r\n  id?: number;\r\n  nombreArea?: string;\r\n  estado?: Estado;\r\n  urlLogo?: string;\r\n  areaInstructors?: IAreaInstructor[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IArea> = {};\r\n","import { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { IDocumento } from 'app/shared/model/documento.model';\r\n\r\nexport interface ICliente {\r\n  id?: number;\r\n  numeroDocumento?: string;\r\n  primerNombre?: string;\r\n  segundoNombre?: string;\r\n  primerApellido?: string;\r\n  segundoApellido?: string;\r\n  instructors?: IInstructor[];\r\n  documento?: IDocumento;\r\n}\r\n\r\nexport const defaultValue: Readonly<ICliente> = {};\r\n","import { IPrograma } from 'app/shared/model/programa.model';\r\n\r\nexport interface ICompetencia {\r\n  id?: number;\r\n  codigo?: string;\r\n  descripcion?: string;\r\n  programa?: IPrograma;\r\n}\r\n\r\nexport const defaultValue: Readonly<ICompetencia> = {};\r\n","import { IJornadaInstructor } from 'app/shared/model/jornada-instructor.model';\r\n\r\nexport interface IDiaJornada {\r\n  id?: number;\r\n  horaInicio?: number;\r\n  horaFin?: number;\r\n  jornadaInstructor?: IJornadaInstructor;\r\n}\r\n\r\nexport const defaultValue: Readonly<IDiaJornada> = {};\r\n","import { IHorario } from 'app/shared/model/horario.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IDia {\r\n  id?: number;\r\n  nombreDia?: string;\r\n  estado?: Estado;\r\n  color?: string;\r\n  horarios?: IHorario[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IDia> = {};\r\n","import { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\n\r\nexport interface IDisponibilidadCompetencias {\r\n  id?: number;\r\n  instructor?: IInstructor;\r\n  vinculacionInstructor?: IVinculacionInstructor;\r\n}\r\n\r\nexport const defaultValue: Readonly<IDisponibilidadCompetencias> = {};\r\n","import { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\nimport { IJornadaInstructor } from 'app/shared/model/jornada-instructor.model';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\n\r\nexport interface IDisponibilidadHoraria {\r\n  id?: number;\r\n  vinculacionInstructor?: IVinculacionInstructor;\r\n  jornada?: IJornadaInstructor;\r\n  instructor?: IInstructor;\r\n}\r\n\r\nexport const defaultValue: Readonly<IDisponibilidadHoraria> = {};\r\n","import { ICliente } from 'app/shared/model/cliente.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IDocumento {\r\n  id?: number;\r\n  sigla?: string;\r\n  nombre?: string;\r\n  estado?: Estado;\r\n  clientes?: ICliente[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IDocumento> = {};\r\n","import { IFicha } from 'app/shared/model/ficha.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IEstadoFicha {\r\n  id?: number;\r\n  nombreEstado?: string;\r\n  estado?: Estado;\r\n  fichas?: IFicha[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IEstadoFicha> = {};\r\n","import { IActividadProyecto } from 'app/shared/model/actividad-proyecto.model';\r\nimport { IProyecto } from 'app/shared/model/proyecto.model';\r\n\r\nexport interface IFaseProyecto {\r\n  id?: number;\r\n  nombreFase?: string;\r\n  estadoFase?: string;\r\n  actividadProyecto7S?: IActividadProyecto[];\r\n  proyecto?: IProyecto;\r\n}\r\n\r\nexport const defaultValue: Readonly<IFaseProyecto> = {};\r\n","import { IResultadosVistos } from 'app/shared/model/resultados-vistos.model';\r\nimport { IHorario } from 'app/shared/model/horario.model';\r\nimport { IFicha } from 'app/shared/model/ficha.model';\r\n\r\nexport interface IFichaTrimestre {\r\n  id?: number;\r\n  resultadosVistos?: IResultadosVistos[];\r\n  horarios?: IHorario[];\r\n  ficha?: IFicha;\r\n}\r\n\r\nexport const defaultValue: Readonly<IFichaTrimestre> = {};\r\n","import { Moment } from 'moment';\r\nimport { IFichaTrimestre } from 'app/shared/model/ficha-trimestre.model';\r\nimport { IPrograma } from 'app/shared/model/programa.model';\r\nimport { IEstadoFicha } from 'app/shared/model/estado-ficha.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IFicha {\r\n  id?: number;\r\n  numero?: string;\r\n  fechaInicio?: Moment;\r\n  fechaFin?: Moment;\r\n  ruta?: string;\r\n  estado?: Estado;\r\n  fichaTrimestres?: IFichaTrimestre[];\r\n  programa?: IPrograma;\r\n  estadoFicha?: IEstadoFicha;\r\n}\r\n\r\nexport const defaultValue: Readonly<IFicha> = {};\r\n","import { Moment } from 'moment';\r\nimport { IModalidad } from 'app/shared/model/modalidad.model';\r\nimport { IDia } from 'app/shared/model/dia.model';\r\nimport { IFichaTrimestre } from 'app/shared/model/ficha-trimestre.model';\r\nimport { IAmbiente } from 'app/shared/model/ambiente.model';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { IVersionHorario } from 'app/shared/model/version-horario.model';\r\n\r\nexport interface IHorario {\r\n  id?: number;\r\n  horaInicio?: Moment;\r\n  horaFin?: Moment;\r\n  modalidad?: IModalidad;\r\n  dia?: IDia;\r\n  fichaTrimestre?: IFichaTrimestre;\r\n  ambiente?: IAmbiente;\r\n  instructor?: IInstructor;\r\n  versionHorario?: IVersionHorario;\r\n}\r\n\r\nexport const defaultValue: Readonly<IHorario> = {};\r\n","import { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\nimport { IAreaInstructor } from 'app/shared/model/area-instructor.model';\r\nimport { IDisponibilidadCompetencias } from 'app/shared/model/disponibilidad-competencias.model';\r\nimport { IDisponibilidadHoraria } from 'app/shared/model/disponibilidad-horaria.model';\r\nimport { IHorario } from 'app/shared/model/horario.model';\r\nimport { ICliente } from 'app/shared/model/cliente.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IInstructor {\r\n  id?: number;\r\n  estado?: Estado;\r\n  vinculacionInstructors?: IVinculacionInstructor[];\r\n  areaInstructors?: IAreaInstructor[];\r\n  disponibilidadCompetencias?: IDisponibilidadCompetencias[];\r\n  disponibilidadHorarias?: IDisponibilidadHoraria[];\r\n  horarios?: IHorario[];\r\n  cliente?: ICliente;\r\n}\r\n\r\nexport const defaultValue: Readonly<IInstructor> = {};\r\n","import { IDiaJornada } from 'app/shared/model/dia-jornada.model';\r\nimport { IDisponibilidadHoraria } from 'app/shared/model/disponibilidad-horaria.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IJornadaInstructor {\r\n  id?: number;\r\n  nombreJornada?: string;\r\n  descripcion?: string;\r\n  estado?: Estado;\r\n  diaJornadas?: IDiaJornada[];\r\n  disponibilidadHorarias?: IDisponibilidadHoraria[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IJornadaInstructor> = {};\r\n","import { ITrimestre } from 'app/shared/model/trimestre.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IJornada {\r\n  id?: number;\r\n  siglaJornada?: string;\r\n  nombreJornada?: string;\r\n  descripcion?: string;\r\n  imagenUrl?: string;\r\n  estado?: Estado;\r\n  trimestre4S?: ITrimestre[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IJornada> = {};\r\n","import { IResultadoAprendizaje } from 'app/shared/model/resultado-aprendizaje.model';\r\nimport { IAmbiente } from 'app/shared/model/ambiente.model';\r\n\r\nexport interface ILimitacionAmbiente {\r\n  id?: number;\r\n  resultadoAprendizaje?: IResultadoAprendizaje;\r\n  ambiente?: IAmbiente;\r\n}\r\n\r\nexport const defaultValue: Readonly<ILimitacionAmbiente> = {};\r\n","import { IHorario } from 'app/shared/model/horario.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IModalidad {\r\n  id?: number;\r\n  nombre?: string;\r\n  estado?: Estado;\r\n  color?: string;\r\n  horarios?: IHorario[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IModalidad> = {};\r\n","import { IPrograma } from 'app/shared/model/programa.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface INivelFormacion {\r\n  id?: number;\r\n  nivelFormacion?: string;\r\n  estado?: Estado;\r\n  programa1S?: IPrograma[];\r\n}\r\n\r\nexport const defaultValue: Readonly<INivelFormacion> = {};\r\n","import { IPlaneacionTrimestre } from 'app/shared/model/planeacion-trimestre.model';\r\nimport { IActividadProyecto } from 'app/shared/model/actividad-proyecto.model';\r\n\r\nexport interface IPlaneacionActividad {\r\n  id?: number;\r\n  planeacionTrimestre?: IPlaneacionTrimestre;\r\n  actividadProyecto?: IActividadProyecto;\r\n}\r\n\r\nexport const defaultValue: Readonly<IPlaneacionActividad> = {};\r\n","import { IPlaneacionActividad } from 'app/shared/model/planeacion-actividad.model';\r\nimport { ITrimestre } from 'app/shared/model/trimestre.model';\r\n\r\nexport interface IPlaneacionTrimestre {\r\n  id?: number;\r\n  planeacionActividads?: IPlaneacionActividad[];\r\n  trimestre?: ITrimestre;\r\n}\r\n\r\nexport const defaultValue: Readonly<IPlaneacionTrimestre> = {};\r\n","export const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IPlaneacion {\r\n  id?: number;\r\n  nombrePlaneacion?: string;\r\n  estado?: Estado;\r\n}\r\n\r\nexport const defaultValue: Readonly<IPlaneacion> = {};\r\n","import { IProyecto } from 'app/shared/model/proyecto.model';\r\nimport { ICompetencia } from 'app/shared/model/competencia.model';\r\nimport { IFicha } from 'app/shared/model/ficha.model';\r\nimport { INivelFormacion } from 'app/shared/model/nivel-formacion.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IPrograma {\r\n  id?: number;\r\n  codigo?: string;\r\n  version?: string;\r\n  nombre?: string;\r\n  sigla?: string;\r\n  estado?: Estado;\r\n  proyecto2S?: IProyecto[];\r\n  competencia3S?: ICompetencia[];\r\n  fichas?: IFicha[];\r\n  nivelFormacion?: INivelFormacion;\r\n}\r\n\r\nexport const defaultValue: Readonly<IPrograma> = {};\r\n","import { IFaseProyecto } from 'app/shared/model/fase-proyecto.model';\r\nimport { IPrograma } from 'app/shared/model/programa.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IProyecto {\r\n  id?: number;\r\n  codigo?: string;\r\n  estado?: Estado;\r\n  nombreProyecto?: string;\r\n  faseProyecto6S?: IFaseProyecto[];\r\n  programa?: IPrograma;\r\n}\r\n\r\nexport const defaultValue: Readonly<IProyecto> = {};\r\n","import { IResultadosVistos } from 'app/shared/model/resultados-vistos.model';\r\nimport { ILimitacionAmbiente } from 'app/shared/model/limitacion-ambiente.model';\r\n\r\nexport interface IResultadoAprendizaje {\r\n  id?: number;\r\n  codigo?: string;\r\n  descripcion?: string;\r\n  resultadosVistos?: IResultadosVistos[];\r\n  limitacionAmbientes?: ILimitacionAmbiente[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IResultadoAprendizaje> = {};\r\n","import { IResultadoAprendizaje } from 'app/shared/model/resultado-aprendizaje.model';\r\nimport { IFichaTrimestre } from 'app/shared/model/ficha-trimestre.model';\r\n\r\nexport interface IResultadosVistos {\r\n  id?: number;\r\n  resultadoAprendizaje?: IResultadoAprendizaje;\r\n  fichaTrimestre?: IFichaTrimestre;\r\n}\r\n\r\nexport const defaultValue: Readonly<IResultadosVistos> = {};\r\n","import { IAmbiente } from 'app/shared/model/ambiente.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface ISede {\r\n  id?: number;\r\n  nombreSede?: string;\r\n  direccion?: string;\r\n  estado?: Estado;\r\n  ambientes?: IAmbiente[];\r\n}\r\n\r\nexport const defaultValue: Readonly<ISede> = {};\r\n","import { IAmbiente } from 'app/shared/model/ambiente.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface ITipoAmbiente {\r\n  id?: number;\r\n  tipo?: string;\r\n  descripcion?: string;\r\n  estado?: Estado;\r\n  ambientes?: IAmbiente[];\r\n}\r\n\r\nexport const defaultValue: Readonly<ITipoAmbiente> = {};\r\n","import { Moment } from 'moment';\r\nimport { IVersionHorario } from 'app/shared/model/version-horario.model';\r\nimport { IAnio } from 'app/shared/model/anio.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface ITrimestreVigente {\r\n  id?: number;\r\n  anio?: number;\r\n  trimestreProgramado?: number;\r\n  fechaInicio?: Moment;\r\n  fechaFin?: Moment;\r\n  estado?: Estado;\r\n  versionHorarios?: IVersionHorario[];\r\n  anio1?: IAnio;\r\n}\r\n\r\nexport const defaultValue: Readonly<ITrimestreVigente> = {};\r\n","import { IPlaneacionTrimestre } from 'app/shared/model/planeacion-trimestre.model';\r\nimport { IJornada } from 'app/shared/model/jornada.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface ITrimestre {\r\n  id?: number;\r\n  nombreTrimestre?: string;\r\n  estado?: Estado;\r\n  planeacionTrimestre5S?: IPlaneacionTrimestre[];\r\n  jornada?: IJornada;\r\n}\r\n\r\nexport const defaultValue: Readonly<ITrimestre> = {};\r\n","export interface IUser {\r\n  id?: any;\r\n  login?: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email?: string;\r\n  activated?: boolean;\r\n  langKey?: string;\r\n  authorities?: any[];\r\n  createdBy?: string;\r\n  createdDate?: Date;\r\n  lastModifiedBy?: string;\r\n  lastModifiedDate?: Date;\r\n  password?: string;\r\n}\r\n\r\nexport const defaultValue: Readonly<IUser> = {\r\n  id: '',\r\n  login: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  activated: false,\r\n  langKey: '',\r\n  authorities: [],\r\n  createdBy: '',\r\n  createdDate: null,\r\n  lastModifiedBy: '',\r\n  lastModifiedDate: null,\r\n  password: ''\r\n};\r\n","import { IHorario } from 'app/shared/model/horario.model';\r\nimport { ITrimestreVigente } from 'app/shared/model/trimestre-vigente.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IVersionHorario {\r\n  id?: number;\r\n  numeroVersion?: number;\r\n  estado?: Estado;\r\n  trimestreVigenteId?: number;\r\n  horarios?: IHorario[];\r\n  versionTrimestre?: ITrimestreVigente;\r\n}\r\n\r\nexport const defaultValue: Readonly<IVersionHorario> = {};\r\n","import { Moment } from 'moment';\r\nimport { IDisponibilidadCompetencias } from 'app/shared/model/disponibilidad-competencias.model';\r\nimport { IDisponibilidadHoraria } from 'app/shared/model/disponibilidad-horaria.model';\r\nimport { IInstructor } from 'app/shared/model/instructor.model';\r\nimport { IAnio } from 'app/shared/model/anio.model';\r\nimport { IVinculacion } from 'app/shared/model/vinculacion.model';\r\n\r\nexport interface IVinculacionInstructor {\r\n  id?: number;\r\n  fechaInicio?: Moment;\r\n  fechaFin?: Moment;\r\n  disponibilidadCompetencias?: IDisponibilidadCompetencias[];\r\n  disponibilidadHorarias?: IDisponibilidadHoraria[];\r\n  instructor?: IInstructor;\r\n  anio1?: IAnio;\r\n  vinculacion?: IVinculacion;\r\n}\r\n\r\nexport const defaultValue: Readonly<IVinculacionInstructor> = {};\r\n","import { IVinculacionInstructor } from 'app/shared/model/vinculacion-instructor.model';\r\n\r\nexport const enum Estado {\r\n  Habilitado = 'Habilitado',\r\n  Inhabilitado = 'Inhabilitado'\r\n}\r\n\r\nexport interface IVinculacion {\r\n  id?: number;\r\n  tipoVinculacion?: string;\r\n  horas?: number;\r\n  estado?: Estado;\r\n  vinculacionInstructors?: IVinculacionInstructor[];\r\n}\r\n\r\nexport const defaultValue: Readonly<IVinculacion> = {};\r\n","/**\r\n * Appends REQUEST async action type\r\n */\r\n\r\nexport const REQUEST = actionType => `${actionType}_PENDING`;\r\n\r\n/**\r\n * Appends SUCCESS async action type\r\n */\r\n\r\nexport const SUCCESS = actionType => `${actionType}_FULFILLED`;\r\n\r\n/**\r\n * Appends FAILURE async action type\r\n */\r\n\r\nexport const FAILURE = actionType => `${actionType}_REJECTED`;\r\n","import axios from 'axios';\r\n\r\nimport { SUCCESS } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  GET_PROFILE: 'applicationProfile/GET_PROFILE'\r\n};\r\n\r\nconst initialState = {\r\n  ribbonEnv: '',\r\n  inProduction: true,\r\n  isSwaggerEnabled: false\r\n};\r\n\r\nexport type ApplicationProfileState = Readonly<typeof initialState>;\r\n\r\nexport default (state: ApplicationProfileState = initialState, action): ApplicationProfileState => {\r\n  switch (action.type) {\r\n    case SUCCESS(ACTION_TYPES.GET_PROFILE):\r\n      const { data } = action.payload;\r\n      return {\r\n        ...state,\r\n        ribbonEnv: data['display-ribbon-on-profiles'],\r\n        inProduction: data.activeProfiles.includes('prod'),\r\n        isSwaggerEnabled: data.activeProfiles.includes('swagger')\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProfile = () => ({\r\n  type: ACTION_TYPES.GET_PROFILE,\r\n  payload: axios.get('management/info')\r\n});\r\n","import axios from 'axios';\r\nimport { Storage } from 'react-jhipster';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { setLocale } from 'app/shared/reducers/locale';\r\n\r\nexport const ACTION_TYPES = {\r\n  LOGIN: 'authentication/LOGIN',\r\n  GET_SESSION: 'authentication/GET_SESSION',\r\n  LOGOUT: 'authentication/LOGOUT',\r\n  CLEAR_AUTH: 'authentication/CLEAR_AUTH',\r\n  ERROR_MESSAGE: 'authentication/ERROR_MESSAGE'\r\n};\r\n\r\nconst AUTH_TOKEN_KEY = 'jhi-authenticationToken';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isAuthenticated: false,\r\n  loginSuccess: false,\r\n  loginError: false, // Errors returned from server side\r\n  showModalLogin: false,\r\n  account: {} as any,\r\n  errorMessage: null as string, // Errors returned from server side\r\n  redirectMessage: null as string,\r\n  sessionHasBeenFetched: false,\r\n  idToken: null as string,\r\n  logoutUrl: null as string\r\n};\r\n\r\nexport type AuthenticationState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: AuthenticationState = initialState, action): AuthenticationState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.LOGIN):\r\n    case REQUEST(ACTION_TYPES.GET_SESSION):\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.LOGIN):\r\n      return {\r\n        ...initialState,\r\n        errorMessage: action.payload,\r\n        showModalLogin: true,\r\n        loginError: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.GET_SESSION):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        sessionHasBeenFetched: true,\r\n        showModalLogin: true,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.LOGIN):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loginError: false,\r\n        showModalLogin: false,\r\n        loginSuccess: true\r\n      };\r\n    case ACTION_TYPES.LOGOUT:\r\n      return {\r\n        ...initialState,\r\n        showModalLogin: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.GET_SESSION): {\r\n      const isAuthenticated = action.payload && action.payload.data && action.payload.data.activated;\r\n      return {\r\n        ...state,\r\n        isAuthenticated,\r\n        loading: false,\r\n        sessionHasBeenFetched: true,\r\n        account: action.payload.data\r\n      };\r\n    }\r\n    case ACTION_TYPES.ERROR_MESSAGE:\r\n      return {\r\n        ...initialState,\r\n        showModalLogin: true,\r\n        redirectMessage: action.message\r\n      };\r\n    case ACTION_TYPES.CLEAR_AUTH:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        showModalLogin: true,\r\n        isAuthenticated: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const displayAuthError = message => ({ type: ACTION_TYPES.ERROR_MESSAGE, message });\r\n\r\nexport const getSession = () => async (dispatch, getState) => {\r\n  await dispatch({\r\n    type: ACTION_TYPES.GET_SESSION,\r\n    payload: axios.get('api/account')\r\n  });\r\n\r\n  const { account } = getState().authentication;\r\n  if (account && account.langKey) {\r\n    const langKey = Storage.session.get('locale', account.langKey);\r\n    await dispatch(setLocale(langKey));\r\n  }\r\n};\r\n\r\nexport const login = (username, password, rememberMe = false) => async (dispatch, getState) => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.LOGIN,\r\n    payload: axios.post('api/authenticate', { username, password, rememberMe })\r\n  });\r\n  const bearerToken = result.value.headers.authorization;\r\n  if (bearerToken && bearerToken.slice(0, 7) === 'Bearer ') {\r\n    const jwt = bearerToken.slice(7, bearerToken.length);\r\n    if (rememberMe) {\r\n      Storage.local.set(AUTH_TOKEN_KEY, jwt);\r\n    } else {\r\n      Storage.session.set(AUTH_TOKEN_KEY, jwt);\r\n    }\r\n  }\r\n  await dispatch(getSession());\r\n};\r\n\r\nexport const clearAuthToken = () => {\r\n  if (Storage.local.get(AUTH_TOKEN_KEY)) {\r\n    Storage.local.remove(AUTH_TOKEN_KEY);\r\n  }\r\n  if (Storage.session.get(AUTH_TOKEN_KEY)) {\r\n    Storage.session.remove(AUTH_TOKEN_KEY);\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  clearAuthToken();\r\n  dispatch({\r\n    type: ACTION_TYPES.LOGOUT\r\n  });\r\n};\r\n\r\nexport const clearAuthentication = messageKey => (dispatch, getState) => {\r\n  clearAuthToken();\r\n  dispatch(displayAuthError(messageKey));\r\n  dispatch({\r\n    type: ACTION_TYPES.CLEAR_AUTH\r\n  });\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\r\n\r\nimport locale, { LocaleState } from './locale';\r\nimport authentication, { AuthenticationState } from './authentication';\r\nimport applicationProfile, { ApplicationProfileState } from './application-profile';\r\n\r\nimport administration, { AdministrationState } from 'app/modules/administration/administration.reducer';\r\nimport userManagement, { UserManagementState } from 'app/modules/administration/user-management/user-management.reducer';\r\nimport register, { RegisterState } from 'app/modules/account/register/register.reducer';\r\nimport activate, { ActivateState } from 'app/modules/account/activate/activate.reducer';\r\nimport password, { PasswordState } from 'app/modules/account/password/password.reducer';\r\nimport settings, { SettingsState } from 'app/modules/account/settings/settings.reducer';\r\nimport passwordReset, { PasswordResetState } from 'app/modules/account/password-reset/password-reset.reducer';\r\n// prettier-ignore\r\nimport planeacion, {\r\n  PlaneacionState\r\n} from 'app/entities/planeacion/planeacion.reducer';\r\n// prettier-ignore\r\nimport nivelFormacion, {\r\n  NivelFormacionState\r\n} from 'app/entities/nivel-formacion/nivel-formacion.reducer';\r\n// prettier-ignore\r\nimport programa, {\r\n  ProgramaState\r\n} from 'app/entities/programa/programa.reducer';\r\n// prettier-ignore\r\nimport proyecto, {\r\n  ProyectoState\r\n} from 'app/entities/proyecto/proyecto.reducer';\r\n// prettier-ignore\r\nimport competencia, {\r\n  CompetenciaState\r\n} from 'app/entities/competencia/competencia.reducer';\r\n// prettier-ignore\r\nimport resultadoAprendizaje, {\r\n  ResultadoAprendizajeState\r\n} from 'app/entities/resultado-aprendizaje/resultado-aprendizaje.reducer';\r\n// prettier-ignore\r\nimport jornada, {\r\n  JornadaState\r\n} from 'app/entities/jornada/jornada.reducer';\r\n// prettier-ignore\r\nimport trimestre, {\r\n  TrimestreState\r\n} from 'app/entities/trimestre/trimestre.reducer';\r\n// prettier-ignore\r\nimport planeacionTrimestre, {\r\n  PlaneacionTrimestreState\r\n} from 'app/entities/planeacion-trimestre/planeacion-trimestre.reducer';\r\n// prettier-ignore\r\nimport faseProyecto, {\r\n  FaseProyectoState\r\n} from 'app/entities/fase-proyecto/fase-proyecto.reducer';\r\n// prettier-ignore\r\nimport actividadProyecto, {\r\n  ActividadProyectoState\r\n} from 'app/entities/actividad-proyecto/actividad-proyecto.reducer';\r\n// prettier-ignore\r\nimport estadoFicha, {\r\n  EstadoFichaState\r\n} from 'app/entities/estado-ficha/estado-ficha.reducer';\r\n// prettier-ignore\r\nimport ficha, {\r\n  FichaState\r\n} from 'app/entities/ficha/ficha.reducer';\r\n// prettier-ignore\r\nimport fichaTrimestre, {\r\n  FichaTrimestreState\r\n} from 'app/entities/ficha-trimestre/ficha-trimestre.reducer';\r\n// prettier-ignore\r\nimport resultadosVistos, {\r\n  ResultadosVistosState\r\n} from 'app/entities/resultados-vistos/resultados-vistos.reducer';\r\n// prettier-ignore\r\nimport planeacionActividad, {\r\n  PlaneacionActividadState\r\n} from 'app/entities/planeacion-actividad/planeacion-actividad.reducer';\r\n// prettier-ignore\r\nimport documento, {\r\n  DocumentoState\r\n} from 'app/entities/documento/documento.reducer';\r\n// prettier-ignore\r\nimport cliente, {\r\n  ClienteState\r\n} from 'app/entities/cliente/cliente.reducer';\r\n// prettier-ignore\r\nimport vinculacion, {\r\n  VinculacionState\r\n} from 'app/entities/vinculacion/vinculacion.reducer';\r\n// prettier-ignore\r\nimport anio, {\r\n  AnioState\r\n} from 'app/entities/anio/anio.reducer';\r\n// prettier-ignore\r\nimport instructor, {\r\n  InstructorState\r\n} from 'app/entities/instructor/instructor.reducer';\r\n// prettier-ignore\r\nimport vinculacionInstructor, {\r\n  VinculacionInstructorState\r\n} from 'app/entities/vinculacion-instructor/vinculacion-instructor.reducer';\r\n// prettier-ignore\r\nimport jornadaInstructor, {\r\n  JornadaInstructorState\r\n} from 'app/entities/jornada-instructor/jornada-instructor.reducer';\r\n// prettier-ignore\r\nimport diaJornada, {\r\n  DiaJornadaState\r\n} from 'app/entities/dia-jornada/dia-jornada.reducer';\r\n// prettier-ignore\r\nimport area, {\r\n  AreaState\r\n} from 'app/entities/area/area.reducer';\r\n// prettier-ignore\r\nimport areaInstructor, {\r\n  AreaInstructorState\r\n} from 'app/entities/area-instructor/area-instructor.reducer';\r\n// prettier-ignore\r\nimport disponibilidadCompetencias, {\r\n  DisponibilidadCompetenciasState\r\n} from 'app/entities/disponibilidad-competencias/disponibilidad-competencias.reducer';\r\n// prettier-ignore\r\nimport disponibilidadHoraria, {\r\n  DisponibilidadHorariaState\r\n} from 'app/entities/disponibilidad-horaria/disponibilidad-horaria.reducer';\r\n// prettier-ignore\r\nimport tipoAmbiente, {\r\n  TipoAmbienteState\r\n} from 'app/entities/tipo-ambiente/tipo-ambiente.reducer';\r\n// prettier-ignore\r\nimport sede, {\r\n  SedeState\r\n} from 'app/entities/sede/sede.reducer';\r\n// prettier-ignore\r\nimport ambiente, {\r\n  AmbienteState\r\n} from 'app/entities/ambiente/ambiente.reducer';\r\n// prettier-ignore\r\nimport limitacionAmbiente, {\r\n  LimitacionAmbienteState\r\n} from 'app/entities/limitacion-ambiente/limitacion-ambiente.reducer';\r\n// prettier-ignore\r\nimport modalidad, {\r\n  ModalidadState\r\n} from 'app/entities/modalidad/modalidad.reducer';\r\n// prettier-ignore\r\nimport dia, {\r\n  DiaState\r\n} from 'app/entities/dia/dia.reducer';\r\n// prettier-ignore\r\nimport trimestreVigente, {\r\n  TrimestreVigenteState\r\n} from 'app/entities/trimestre-vigente/trimestre-vigente.reducer';\r\n// prettier-ignore\r\nimport versionHorario, {\r\n  VersionHorarioState\r\n} from 'app/entities/version-horario/version-horario.reducer';\r\n// prettier-ignore\r\nimport horario, {\r\n  HorarioState\r\n} from 'app/entities/horario/horario.reducer';\r\n/* jhipster-needle-add-reducer-import - JHipster will add reducer here */\r\n\r\nexport interface IRootState {\r\n  readonly authentication: AuthenticationState;\r\n  readonly locale: LocaleState;\r\n  readonly applicationProfile: ApplicationProfileState;\r\n  readonly administration: AdministrationState;\r\n  readonly userManagement: UserManagementState;\r\n  readonly register: RegisterState;\r\n  readonly activate: ActivateState;\r\n  readonly passwordReset: PasswordResetState;\r\n  readonly password: PasswordState;\r\n  readonly settings: SettingsState;\r\n  readonly planeacion: PlaneacionState;\r\n  readonly nivelFormacion: NivelFormacionState;\r\n  readonly programa: ProgramaState;\r\n  readonly proyecto: ProyectoState;\r\n  readonly competencia: CompetenciaState;\r\n  readonly resultadoAprendizaje: ResultadoAprendizajeState;\r\n  readonly jornada: JornadaState;\r\n  readonly trimestre: TrimestreState;\r\n  readonly planeacionTrimestre: PlaneacionTrimestreState;\r\n  readonly faseProyecto: FaseProyectoState;\r\n  readonly actividadProyecto: ActividadProyectoState;\r\n  readonly estadoFicha: EstadoFichaState;\r\n  readonly ficha: FichaState;\r\n  readonly fichaTrimestre: FichaTrimestreState;\r\n  readonly resultadosVistos: ResultadosVistosState;\r\n  readonly planeacionActividad: PlaneacionActividadState;\r\n  readonly documento: DocumentoState;\r\n  readonly cliente: ClienteState;\r\n  readonly vinculacion: VinculacionState;\r\n  readonly anio: AnioState;\r\n  readonly instructor: InstructorState;\r\n  readonly vinculacionInstructor: VinculacionInstructorState;\r\n  readonly jornadaInstructor: JornadaInstructorState;\r\n  readonly diaJornada: DiaJornadaState;\r\n  readonly area: AreaState;\r\n  readonly areaInstructor: AreaInstructorState;\r\n  readonly disponibilidadCompetencias: DisponibilidadCompetenciasState;\r\n  readonly disponibilidadHoraria: DisponibilidadHorariaState;\r\n  readonly tipoAmbiente: TipoAmbienteState;\r\n  readonly sede: SedeState;\r\n  readonly ambiente: AmbienteState;\r\n  readonly limitacionAmbiente: LimitacionAmbienteState;\r\n  readonly modalidad: ModalidadState;\r\n  readonly dia: DiaState;\r\n  readonly trimestreVigente: TrimestreVigenteState;\r\n  readonly versionHorario: VersionHorarioState;\r\n  readonly horario: HorarioState;\r\n  /* jhipster-needle-add-reducer-type - JHipster will add reducer type here */\r\n  readonly loadingBar: any;\r\n}\r\n\r\nconst rootReducer = combineReducers<IRootState>({\r\n  authentication,\r\n  locale,\r\n  applicationProfile,\r\n  administration,\r\n  userManagement,\r\n  register,\r\n  activate,\r\n  passwordReset,\r\n  password,\r\n  settings,\r\n  planeacion,\r\n  nivelFormacion,\r\n  programa,\r\n  proyecto,\r\n  competencia,\r\n  resultadoAprendizaje,\r\n  jornada,\r\n  trimestre,\r\n  planeacionTrimestre,\r\n  faseProyecto,\r\n  actividadProyecto,\r\n  estadoFicha,\r\n  ficha,\r\n  fichaTrimestre,\r\n  resultadosVistos,\r\n  planeacionActividad,\r\n  documento,\r\n  cliente,\r\n  vinculacion,\r\n  anio,\r\n  instructor,\r\n  vinculacionInstructor,\r\n  jornadaInstructor,\r\n  diaJornada,\r\n  area,\r\n  areaInstructor,\r\n  disponibilidadCompetencias,\r\n  disponibilidadHoraria,\r\n  tipoAmbiente,\r\n  sede,\r\n  ambiente,\r\n  limitacionAmbiente,\r\n  modalidad,\r\n  dia,\r\n  trimestreVigente,\r\n  versionHorario,\r\n  horario,\r\n  /* jhipster-needle-add-reducer-combine - JHipster will add reducer here */\r\n  loadingBar\r\n});\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nimport { TranslatorContext, Storage } from 'react-jhipster';\r\n\r\nexport const ACTION_TYPES = {\r\n  SET_LOCALE: 'locale/SET_LOCALE'\r\n};\r\n\r\nconst initialState = {\r\n  currentLocale: undefined\r\n};\r\n\r\nexport type LocaleState = Readonly<typeof initialState>;\r\n\r\nexport default (state: LocaleState = initialState, action): LocaleState => {\r\n  switch (action.type) {\r\n    case ACTION_TYPES.SET_LOCALE:\r\n      const currentLocale = action.locale;\r\n      if (state.currentLocale !== currentLocale) {\r\n        TranslatorContext.setLocale(currentLocale);\r\n      }\r\n      return {\r\n        currentLocale\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setLocale = locale => async dispatch => {\r\n  if (!Object.keys(TranslatorContext.context.translations).includes(locale)) {\r\n    const response = await axios.get(`i18n/${locale}.json?buildTimestamp=${process.env.BUILD_TIMESTAMP}`, { baseURL: '' });\r\n    TranslatorContext.registerTranslations(locale, response.data);\r\n  }\r\n  dispatch({\r\n    type: ACTION_TYPES.SET_LOCALE,\r\n    locale\r\n  });\r\n};\r\n","import moment from 'moment';\r\n\r\nimport { APP_LOCAL_DATETIME_FORMAT, APP_LOCAL_DATETIME_FORMAT_Z } from 'app/config/constants';\r\n\r\nexport const convertDateTimeFromServer = date => (date ? moment(date).format(APP_LOCAL_DATETIME_FORMAT) : null);\r\n\r\nexport const convertDateTimeToServer = date => (date ? moment(date, APP_LOCAL_DATETIME_FORMAT_Z).toDate() : null);\r\n","import pick from 'lodash/pick';\r\n\r\n/**\r\n * Removes fields with an 'id' field that equals ''.\r\n * This function was created to prevent entities to be sent to\r\n * the server with relationship fields with empty an empty id and thus\r\n * resulting in a 500.\r\n *\r\n * @param entity Object to clean.\r\n */\r\nexport const cleanEntity = entity => {\r\n  const keysToKeep = Object.keys(entity).filter(k => !(entity[k] instanceof Object) || (entity[k]['id'] !== '' && entity[k]['id'] !== -1));\r\n\r\n  return pick(entity, keysToKeep);\r\n};\r\n\r\n/**\r\n * Simply map a list of element to a list a object with the element as id.\r\n *\r\n * @param idList Elements to map.\r\n * @returns The list of objects with mapped ids.\r\n */\r\nexport const mapIdList = (idList: ReadonlyArray<any>) =>\r\n  idList.filter((entityId: any) => entityId !== '').map((entityId: any) => ({ id: entityId }));\r\n","export const ITEMS_PER_PAGE = 20;\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"mappingsvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;;AA+CA;AA9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAYA;AACA;AACA;AACA;AAGA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAgCA;AACA;AACA;;;;;;;;;;;;;;ACpEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AALA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAiDA;AAhDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC7LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AA2FA;AAnHA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC3JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAgEA;AA/DA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAcA;AAAA;AACA;AAAA;AA0BA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1CA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACxPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAsGA;AA9HA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACtKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA4CA;AA3CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAMA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACrKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAgFA;AAxGA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AChJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA8CA;AA7CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAcA;AAAA;AACA;AAAA;AA0BA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1CA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC9MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAqFA;AApFA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAkDA;AAjDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAoFA;AA5GA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAkEA;AAjEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AA8FA;AAtHA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;;;ACpKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAgDA;AA/CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC5LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAkFA;AA1GA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AClJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAgDA;AA/CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC9LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAyFA;AAjHA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACzJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAkDA;AAjDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACnLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA+EA;AA9EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAgCA;AA5CA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAOA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA2CA;AA1CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAcA;AAAA;AAIA;AAAA;AA0BA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1CA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAIA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAgGA;AAxHA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AAOA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AChKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA6CA;AA5CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AAeA;AAAA;AACA;AAAA;AA4BA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA5CA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAIA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC5NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAmGA;AAlGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AASA;AASA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AClIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAkDA;AAjDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACnLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA+EA;AA9EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA4CA;AA3CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACrKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAgFA;AAxGA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AChJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAgDA;AA/CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC5LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAoFA;AA5GA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAoCA;AAnCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AChKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAqEA;AApEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;;AA0EA;AAzEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AAWA;AAAA;AACA;AAAA;AA0BA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA7CA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAyBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC5QA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;;AAqGA;AApGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;;AAwEA;AAvEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAeA;AAAA;AACA;AAAA;AAkCA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAyBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAQA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC1UA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;;AAiHA;AAhHA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AChJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;ACxxCA;AA8CA;AACA;AACA;;;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA0CA;AAzCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACnLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAgFA;AAxGA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AChJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAmDA;AAlDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACnLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAqFA;AA7GA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACrJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA8DA;AA7DA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC/MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AA4FA;AApHA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC5JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAyCA;AAxCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAcA;AAAA;AACA;AAAA;AA0BA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1CA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAUA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC7LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAuFA;AAtFA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AASA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACtHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAkDA;AAjDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACnLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA+EA;AA9EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA4CA;AA3CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACrKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAiFA;AAzGA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACjJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAyCA;AAxCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAcA;AAAA;AACA;AAAA;AA0BA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1CA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC7LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAyFA;AAxFA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AASA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACxHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAqCA;AApCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AClKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA2EA;AA1EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA4CA;AA3CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACrKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA2EA;AA1EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC1GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAkEA;AAjEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC3OA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAsGA;AA9HA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACtKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAsDA;AArDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC/MA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAwFA;AAhHA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACxJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA6CA;AA5CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AClKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AA+EA;AAvGA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC/IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAyCA;AAxCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAcA;AAAA;AACA;AAAA;AA0BA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA1CA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC3LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAuFA;AAtFA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AASA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACtHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAkDA;AAjDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACnLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AA+EA;AA9EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAYA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC9GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAkDA;AAjDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACnLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAoFA;AA5GA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;;AAuEA;AAtEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AAUA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA3CA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAyBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AASA;AAGA;AAEA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAqGA;AA7HA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC7KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAgDA;AA/CA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACjMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAqFA;AA7GA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACrJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAsDA;AArDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAwBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAxCA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACjNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAiGA;AAzHA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACjKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAAA;AAAA;;AA6DA;AA5DA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AAEA;AACA;AAYA;AAAA;AACA;AAAA;AA4BA;AACA;AACA;AAEA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AA/CA;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAyBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAQA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AACA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;AACA;AAEA;AAQA;AAKA;AAGA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC3PA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AASA;AAGA;AAEA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAqHA;AA7IA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AAEA;AACA;AAEA;AAOA;AAOA;AASA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC7LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AACA;AACA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AA6BA;AAzCA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAOA;AAAA;AAAA;;AAkDA;AAjDA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;;AAIA;AACA;AAAA;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAYA;AAAA;AACA;AAAA;AAqBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArCA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAIA;AACA;;AAEA;AACA;;AAIA;AACA;;AAEA;AAQA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAMA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AACA;AACA;AAGA;AAOA;AAEA;AACA;AACA;AACA;;AAqFA;AA7GA;AACA;AACA;AAYA;AACA;AACA;AACA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAUA;AACA;AASA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACrJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAPA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAEA;AACA;AACA;AAMA;AAAA;AAAA;;AA2BA;AA1BA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;AACA;AACA;AACA;AACA;AAIA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;;AAqDA;AA/DA;AACA;AACA;AAUA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAAA;;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;;AAoCA;AA3CA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;AAAA;;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/DA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAuFA;AAlGA;AACA;AACA;AAWA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA;;AACA;AACA;AAOA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAIA;AACA;AACA;;;;;;;;;;;;;;ACnIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AANA;AAQA;AACA;AACA;AAEA;;AAAA;;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAKA;AACA;AAKA;AACA;AAIA;AACA;AAEA;AACA;AAQA;AACA;AAQA;AACA;AAMA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAIA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAIA;AAAA;AAAA;;AAgDA;AA/CA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;AAyEA;AAvEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAIA;AACA;AAQA;AAQA;AACA;AACA;;AAAA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AAGA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAQA;AAAA;AACA;AACA;AAEA;AACA;AACA;;AAaA;AAzBA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AAGA;AAOA;AAAA;AAAA;;AAqBA;AApBA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AAEA;AAQA;AACA;AAOA;AACA;AAEA;AAIA;AACA;AAPA;AAYA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAQA;;;;AAIA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC5FA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AAIA;AAAA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClBA;AAWA;AAAA;AAAA;AAAA;AACA;;AA+BA;AA7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAKA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAMA;AAEA;AAIA;AAEA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AA6BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAHA;AAQA;AACA;AACA;;AAiCA;AA/BA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;;;;;;;;;;;;;;;;;AC/FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAKA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAKA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;ACznMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAMA;AACA;AACA;;;;;;;;;;;;;;AC/LA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAGA;AACA;;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;;;ACpFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAGA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAEA;AACA;;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;;;AC3EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAMA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AAEA;AACA;AACA;;;;;;;;;;;;;;AClEA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAcA;AACA;AACA;;;;;;;;;;;;;;ACrBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AASA;AACA;AACA;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;ACHA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AASA;AACA;AACA;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAcA;AACA;AACA;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAWA;AACA;AACA;;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;;ACVA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AASA;AACA;AACA;;;;;;;;;;;;;;ACPA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAQA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAeA;AACA;AACA;;;;;;;;;;;;;;ACtBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAWA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACJA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACTA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAWA;AACA;AACA;;;;;;;;;;;;;;ACDA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AAEA;;AAEA;AAEA;AAEA;;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClBA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AACA;AAQA;AACA;AAOA;AACA;AAIA;AACA;AACA;AAOA;AACA;AACA;AAKA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAKA;AACA;AACA;AACA;;AAAA;;;;;AAEA;AAEA;AAAA;AAAA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;AAAA;;;;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAyDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC9QA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AACA;AACA;;AAAA;AACA;;;AAEA;AACA;AACA;AACA;;;;AACA;AACA;AACA;;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;AAOA;AACA;AACA;AAEA;AACA;AAEA;;;;;AAKA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}